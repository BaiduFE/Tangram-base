function loadSource(){
_$jscoverage['baidu.js'] && (_$jscoverage['baidu.js'].source = ["<span class=\"c\">// Copyright (c) 2009, Baidu Inc. All rights reserved.</span>","<span class=\"c\">//</span>","<span class=\"c\">// Licensed under the BSD License</span>","<span class=\"c\">// you may not use this file except in compliance with the License.</span>","<span class=\"c\">// You may obtain a copy of the License at</span>","<span class=\"c\">// </span>","<span class=\"c\">//      http://tangram.baidu.com/license.html</span>","<span class=\"c\">//</span>","<span class=\"c\">// Unless required by applicable law or agreed to in writing, software</span>","<span class=\"c\">// distributed under the License is distributed on an \"AS-IS\" BASIS,</span>","<span class=\"c\">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>","<span class=\"c\">// See the License for the specific language governing permissions and</span>","<span class=\"c\">// limitations under the License.</span>","","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>",""," <span class=\"c\">/**</span>","<span class=\"c\"> * @namespace T Tangram&#19971;&#24039;&#26495;</span>","<span class=\"c\"> * @name T</span>","<span class=\"c\"> * @version 1.5.2.2</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#22768;&#26126;baidu&#21253;</span>","<span class=\"c\"> * @author: allstar, erik, meizz, berg</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> T<span class=\"k\">,</span>","    baidu <span class=\"k\">=</span> T <span class=\"k\">=</span> baidu <span class=\"k\">||</span> <span class=\"k\">{</span>version<span class=\"k\">:</span> <span class=\"s\">\"1.5.2.2\"</span><span class=\"k\">}</span><span class=\"k\">;</span> ","","<span class=\"c\">//&#25552;&#20986;guid&#65292;&#38450;&#27490;&#22312;&#19982;&#32769;&#29256;&#26412;Tangram&#28151;&#29992;&#26102;</span>","<span class=\"c\">//&#22312;&#19979;&#19968;&#34892;&#38169;&#35823;&#30340;&#20462;&#25913;window[undefined]</span>","baidu<span class=\"k\">.</span>guid <span class=\"k\">=</span> <span class=\"s\">\"$BAIDU$\"</span><span class=\"k\">;</span>","","<span class=\"c\">//Tangram&#21487;&#33021;&#34987;&#25918;&#22312;&#38381;&#21253;&#20013;</span>","<span class=\"c\">//&#19968;&#20123;&#39029;&#38754;&#32423;&#21035;&#21807;&#19968;&#30340;&#23646;&#24615;&#65292;&#38656;&#35201;&#25346;&#36733;&#22312;window[baidu.guid]&#19978;</span>","baidu<span class=\"k\">.</span>$$ <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">]</span> <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{</span>global<span class=\"k\">:</span><span class=\"k\">{}}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/ajax.js'] && (_$jscoverage['baidu/ajax.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/ajax.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/13</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;XMLHttpRequest&#35831;&#27714;&#30340;&#23553;&#35013;</span>","<span class=\"c\"> * @namespace baidu.ajax</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>ajax <span class=\"k\">=</span> baidu<span class=\"k\">.</span>ajax <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array.js'] && (_$jscoverage['baidu/array.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/array.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;&#25968;&#32452;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.array</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>array <span class=\"k\">=</span> baidu<span class=\"k\">.</span>array <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async.js'] && (_$jscoverage['baidu/async.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#24322;&#27493;&#35843;&#29992;&#30340;&#23553;&#35013;</span>","<span class=\"c\"> * @namespace baidu.async</span>","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async <span class=\"k\">=</span> baidu<span class=\"k\">.</span>async <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser.js'] && (_$jscoverage['baidu/browser.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#27983;&#35272;&#22120;&#31867;&#22411;&#21644;&#29305;&#24615;&#30340;&#23646;&#24615;</span>","<span class=\"c\"> * @namespace baidu.browser</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie.js'] && (_$jscoverage['baidu/cookie.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;cookie&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.cookie</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie <span class=\"k\">=</span> baidu<span class=\"k\">.</span>cookie <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/date.js'] && (_$jscoverage['baidu/date.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/date.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/04</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;&#26085;&#26399;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.date</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>date <span class=\"k\">=</span> baidu<span class=\"k\">.</span>date <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom.js'] && (_$jscoverage['baidu/dom.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;dom&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.dom </span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/element.js'] && (_$jscoverage['baidu/element.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All right reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/element.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010-07-12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">///import baidu.lang.isString;</span>","","<span class=\"c\">///import baidu.array.each;</span>","<span class=\"c\">///import baidu.lang.toArray;</span>","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">///import baidu.fn.methodize;</span>","<span class=\"c\">///import baidu.fn.wrapReturnValue;</span>","<span class=\"c\">///import baidu.fn.multize;</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;&#35813;&#26041;&#27861;&#23553;&#35013;&#30340;&#23545;&#35937;&#21487;&#20351;&#29992;dom&#12289;event&#26041;&#27861;&#38598;&#21512;&#20197;&#21450;each&#26041;&#27861;&#36827;&#34892;&#38142;&#24335;&#35843;&#29992;</span>","<span class=\"c\"> * @namespace baidu.element</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> gNode <span class=\"k\">=</span> baidu<span class=\"k\">.</span>_g<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">if</span><span class=\"k\">(!</span>gNode <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>query<span class=\"k\">)</span><span class=\"k\">{</span>","        gNode <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>query<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>Element<span class=\"k\">(</span>gNode<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>e <span class=\"k\">=</span> baidu<span class=\"k\">.</span>element<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Element&#31867;&#65292;&#25152;&#26377;&#25193;&#23637;&#21040;&#38142;&#26465;&#19978;&#30340;&#26041;&#27861;&#37117;&#20250;&#34987;&#25918;&#22312;&#36825;&#37324;&#38754;</span>","<span class=\"c\"> * @name baidu.element.Element</span>","<span class=\"c\"> * @grammar baidu.element.Element(node)</span>","<span class=\"c\"> * @param {DOMElement|NodeList} node   &#30446;&#26631;&#20803;&#32032;&#65292;&#21487;&#20197;&#26159;&#25968;&#32452;&#25110;&#32773;&#21333;&#20010;node&#33410;&#28857;</span>","<span class=\"c\"> * @returns {ElementObj} &#21253;&#35013;&#21518;&#30340;DOM&#23545;&#35937;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>Element <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(!</span>baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_init<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">//&#30001;&#20110;element&#21487;&#33021;&#20250;&#22312;&#20854;&#20182;&#20195;&#30721;&#20043;&#21069;&#21152;&#36733;&#65292;&#22240;&#27492;&#29992;&#36825;&#20010;&#26041;&#27861;&#26469;&#24310;&#36831;&#21152;&#36733;</span>","        baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_makeChain<span class=\"k\">();</span>","        baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_init <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     * @type {Array.&lt;Node&gt;}</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_dom <span class=\"k\">=</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">).</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'select'</span> <span class=\"k\">?</span> ","    \t<span class=\"k\">[</span>node<span class=\"k\">]</span> <span class=\"k\">:</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>toArray<span class=\"k\">(</span>node<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20197;&#27599;&#19968;&#20010;&#21305;&#37197;&#30340;&#20803;&#32032;&#20316;&#20026;&#19978;&#19979;&#25991;&#25191;&#34892;&#20256;&#36882;&#36827;&#26469;&#30340;&#20989;&#25968;&#65292;&#26041;&#20415;&#29992;&#25143;&#33258;&#34892;&#36941;&#21382;dom&#12290;</span>","<span class=\"c\"> * @name baidu.element.each</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.element(node).each(iterator)</span>","<span class=\"c\"> * @param {Function} iterator &#36941;&#21382;Dom&#26102;&#35843;&#29992;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>Element<span class=\"k\">.</span>prototype<span class=\"k\">.</span>each <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// &#27599;&#19968;&#20010;iterator&#25509;&#21463;&#21040;&#30340;&#37117;&#26159;&#23553;&#35013;&#22909;&#30340;node</span>","    baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_dom<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">,</span> i<span class=\"k\">)</span><span class=\"k\">{</span>","        iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>node<span class=\"k\">,</span> node<span class=\"k\">,</span> i<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/*</span>","<span class=\"c\"> * &#21253;&#35013;&#38745;&#24577;&#26041;&#27861;&#65292;&#20351;&#20854;&#21464;&#25104;&#19968;&#20010;&#38142;&#26465;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * &#20808;&#25226;&#38745;&#24577;&#26041;&#27861;multize&#21270;&#65292;&#35753;&#20854;&#25903;&#25345;&#25509;&#21463;&#25968;&#32452;&#21442;&#25968;&#65292;</span>","<span class=\"c\"> * &#28982;&#21518;&#21253;&#35013;&#36820;&#22238;&#20540;&#65292;&#36820;&#22238;&#20540;&#26159;&#19968;&#20010;&#21253;&#35013;&#31867;</span>","<span class=\"c\"> * &#26368;&#21518;&#25226;&#38745;&#24577;&#26041;&#27861;methodize&#21270;&#65292;&#35753;&#20854;&#21464;&#25104;&#19968;&#20010;&#23545;&#35937;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Function}    func    &#35201;&#21253;&#35013;&#30340;&#38745;&#24577;&#26041;&#27861;</span>","<span class=\"c\"> * @param {number}      index   &#21253;&#35013;&#20989;&#25968;&#30340;&#31532;&#20960;&#20010;&#36820;&#22238;&#20540;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {function}   &#21253;&#35013;&#21518;&#30340;&#26041;&#27861;&#65292;&#33021;&#30452;&#25509;&#25346;&#21040;Element&#30340;prototype&#19978;&#12290;</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_toChainFunction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>func<span class=\"k\">,</span> index<span class=\"k\">,</span> joinArray<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>methodize<span class=\"k\">(</span>baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>wrapReturnValue<span class=\"k\">(</span>baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>multize<span class=\"k\">(</span>func<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>Element<span class=\"k\">,</span> index<span class=\"k\">),</span> <span class=\"s\">'_dom'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * element&#23545;&#35937;&#21253;&#35013;&#20102;dom&#21253;&#19979;&#30340;&#38500;&#20102;drag&#21644;ready,create,ddManager&#20043;&#22806;&#30340;&#22823;&#37096;&#20998;&#26041;&#27861;&#12290;&#36825;&#26679;&#20570;&#30340;&#30446;&#30340;&#26159;&#25552;&#20379;&#26356;&#20026;&#26041;&#20415;&#30340;&#38142;&#24335;&#35843;&#29992;&#25805;&#20316;&#12290;&#20854;&#20013;doms&#20195;&#25351;dom&#21253;&#19979;&#30340;&#26041;&#27861;&#21517;&#12290;</span>","<span class=\"c\"> * @name baidu.element.doms</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.element(node).doms</span>","<span class=\"c\"> * @param &#35814;&#35265;dom&#21253;&#19979;&#30456;&#24212;&#26041;&#27861;&#30340;&#21442;&#25968;&#12290;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_makeChain <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span> <span class=\"c\">//&#23558;dom/event&#21253;&#19979;&#30340;&#19996;&#35199;&#25346;&#21040;prototype&#37324;&#38754;</span>","    <span class=\"k\">var</span> proto <span class=\"k\">=</span> baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>Element<span class=\"k\">.</span>prototype<span class=\"k\">,</span>","        fnTransformer <span class=\"k\">=</span> baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_toChainFunction<span class=\"k\">;</span>","","    <span class=\"c\">//&#36820;&#22238;&#20540;&#26159;&#31532;&#19968;&#20010;&#21442;&#25968;&#30340;&#21253;&#35013;</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">((</span><span class=\"s\">\"draggable droppable resizable fixable\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span>","              <span class=\"k\">function</span><span class=\"k\">(</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>","                  proto<span class=\"k\">[</span>fn<span class=\"k\">]</span> <span class=\"k\">=</span>  fnTransformer<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">[</span>fn<span class=\"k\">],</span> <span class=\"s\">1</span><span class=\"k\">);</span>","              <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#30452;&#25509;&#36820;&#22238;&#36820;&#22238;&#20540;</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">((</span><span class=\"s\">\"remove getText contains getAttr getPosition getStyle hasClass intersect hasAttr getComputedStyle\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span>","              <span class=\"k\">function</span><span class=\"k\">(</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>","                  proto<span class=\"k\">[</span>fn<span class=\"k\">]</span> <span class=\"k\">=</span> proto<span class=\"k\">[</span>fn<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^get[A-Z]/g</span><span class=\"k\">,</span> stripGet<span class=\"k\">)]</span> <span class=\"k\">=</span> fnTransformer<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">[</span>fn<span class=\"k\">],</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">);</span>","              <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#21253;&#35013;&#36820;&#22238;&#20540;</span>","    <span class=\"c\">//&#21253;&#21547;</span>","    <span class=\"c\">//1. methodize</span>","    <span class=\"c\">//2. multize&#65292;&#32467;&#26524;&#22914;&#26524;&#26159;&#25968;&#32452;&#20250;&#34987;&#23637;&#24179;</span>","    <span class=\"c\">//3. getXx == xx</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">((</span><span class=\"s\">\"addClass empty hide show insertAfter insertBefore insertHTML removeClass \"</span> <span class=\"k\">+</span> ","              <span class=\"s\">\"setAttr setAttrs setStyle setStyles show toggleClass toggle next first \"</span> <span class=\"k\">+</span> ","              <span class=\"s\">\"getAncestorByClass getAncestorBy getAncestorByTag getDocument getParent getWindow \"</span> <span class=\"k\">+</span>","              <span class=\"s\">\"last next prev g removeStyle setBorderBoxSize setOuterWidth setOuterHeight \"</span> <span class=\"k\">+</span>","              <span class=\"s\">\"setBorderBoxWidth setBorderBoxHeight setPosition children query\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span>","              <span class=\"k\">function</span><span class=\"k\">(</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>","                  proto<span class=\"k\">[</span>fn<span class=\"k\">]</span> <span class=\"k\">=</span> proto<span class=\"k\">[</span>fn<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^get[A-Z]/g</span><span class=\"k\">,</span> stripGet<span class=\"k\">)]</span> <span class=\"k\">=</span> fnTransformer<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">[</span>fn<span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">);</span>","              <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#23545;&#20110;baidu.dom.q&#36825;&#31181;&#29305;&#27530;&#24773;&#20917;&#65292;&#23558;&#21069;&#20004;&#20010;&#21442;&#25968;&#35843;&#36716;</span>","    <span class=\"c\">//TODO&#65306;&#38656;&#35201;&#23558;&#36825;&#31181;&#29305;&#27530;&#24773;&#20917;&#24402;&#32435;&#21040;&#20043;&#21069;&#30340;&#24773;&#20917;&#20013;</span>","    proto<span class=\"k\">[</span><span class=\"s\">'q'</span><span class=\"k\">]</span> <span class=\"k\">=</span> proto<span class=\"k\">[</span><span class=\"s\">'Q'</span><span class=\"k\">]</span> <span class=\"k\">=</span> fnTransformer<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>arg1<span class=\"k\">,</span> arg2<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>q<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">[</span>arg2<span class=\"k\">,</span> arg1<span class=\"k\">].</span>concat<span class=\"k\">([].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">)));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#21253;&#35013;event&#20013;&#30340;on &#21644; un</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">((</span><span class=\"s\">\"on un\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span> <span class=\"k\">function</span><span class=\"k\">(</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>","        proto<span class=\"k\">[</span>fn<span class=\"k\">]</span> <span class=\"k\">=</span> fnTransformer<span class=\"k\">(</span>baidu<span class=\"k\">.</span>event<span class=\"k\">[</span>fn<span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * &#26041;&#27861;&#25552;&#20379;&#20102;&#20107;&#20214;&#32465;&#23450;&#30340;&#24555;&#25463;&#26041;&#24335;&#65292;&#20107;&#20214;&#21457;&#29983;&#26102;&#20250;&#35302;&#21457;&#20256;&#36882;&#36827;&#26469;&#30340;&#20989;&#25968;&#12290;events&#20195;&#25351;&#20107;&#20214;&#26041;&#27861;&#30340;&#24635;&#21644;&#12290;</span>","<span class=\"c\">     * @name baidu.element.events </span>","<span class=\"c\">     * @function</span>","<span class=\"c\">     * @grammar baidu.element(node).events(fn)</span>","<span class=\"c\">     * @param {Function} fn &#20107;&#20214;&#35302;&#21457;&#26102;&#35201;&#35843;&#29992;&#30340;&#26041;&#27861;</span>","<span class=\"c\">     * @version 1.3</span>","<span class=\"c\">     * @remark &#21253;&#35013;event&#30340;&#24555;&#25463;&#26041;&#24335;&#20855;&#20307;&#21253;&#25324;blur&#12289;focus&#12289;focusin&#12289;focusout&#12289;load &#12289;resize &#12289;scroll &#12289;unload &#12289;click&#12289; dblclick&#12289;mousedown &#12289;mouseup &#12289;mousemove&#12289; mouseover &#12289;mouseout &#12289;mouseenter&#12289; mouseleave&#12289;change &#12289;select &#12289;submit &#12289;keydown&#12289; keypress &#12289;keyup&#12289; error&#12290;</span>","<span class=\"c\">     * @returns {baidu.element} Element&#23545;&#35937;</span>","<span class=\"c\">     */</span>","    <span class=\"c\">//&#21253;&#35013;event&#30340;&#24555;&#25463;&#26041;&#24335;</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">((</span><span class=\"s\">\"blur focus focusin focusout load resize scroll unload click dblclick \"</span> <span class=\"k\">+</span>","                <span class=\"s\">\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \"</span> <span class=\"k\">+</span> ","                <span class=\"s\">\"change select submit keydown keypress keyup error\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span> <span class=\"k\">function</span><span class=\"k\">(</span>fnName<span class=\"k\">)</span><span class=\"k\">{</span>","        proto<span class=\"k\">[</span>fnName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>on<span class=\"k\">(</span>fnName<span class=\"k\">,</span> fn<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#25226;get&#21435;&#25481;</span>","<span class=\"c\">     * &#38142;&#37324;&#38754;&#30340;&#26041;&#27861;&#21487;&#20197;&#19981;&#20197;get&#24320;&#22836;&#35843;&#29992;</span>","<span class=\"c\">     * &#22914; baidu.element(\"myDiv\").parent() == baidu.element(\"myDiv\").getParent();</span>","<span class=\"c\">     * TODO: &#21512;&#24182;getter&#21644;setter. baidu.e('myDiv').style() &amp;  baidu.e('myDiv').style('width', '100');</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> stripGet<span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>  ","        <span class=\"k\">return</span> match<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">3</span><span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event.js'] && (_$jscoverage['baidu/event.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23631;&#34109;&#27983;&#35272;&#22120;&#24046;&#24322;&#24615;&#30340;&#20107;&#20214;&#23553;&#35013;</span>","<span class=\"c\"> * @namespace baidu.event</span>","<span class=\"c\"> * @property target \t&#20107;&#20214;&#30340;&#35302;&#21457;&#20803;&#32032;</span>","<span class=\"c\"> * @property pageX \t\t&#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;x&#22352;&#26631;</span>","<span class=\"c\"> * @property pageY \t\t&#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;y&#22352;&#26631;</span>","<span class=\"c\"> * @property keyCode \t&#38190;&#30424;&#20107;&#20214;&#30340;&#38190;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn.js'] && (_$jscoverage['baidu/fn.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/fn.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#26041;&#27861;&#30340;&#25805;&#20316;&#65292;&#35299;&#20915;&#20869;&#23384;&#27844;&#38706;&#38382;&#39064;</span>","<span class=\"c\"> * @namespace baidu.fn</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn <span class=\"k\">=</span> baidu<span class=\"k\">.</span>fn <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/form.js'] && (_$jscoverage['baidu/form.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/fn.js</span>","<span class=\"c\"> * author: qiaoyue</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2011/12/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;form&#30340;&#25805;&#20316;&#65292;&#35299;&#20915;&#34920;&#21333;&#25968;&#25454;&#38382;&#39064;</span>","<span class=\"c\"> * @namespace baidu.form</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>form <span class=\"k\">=</span> baidu<span class=\"k\">.</span>form <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/global.js'] && (_$jscoverage['baidu/global.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * version: 1.4.0</span>","<span class=\"c\"> * date: 2011/07/05</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @namespace baidu.global &#25805;&#20316;global&#23545;&#35937;&#30340;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @author meizz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>global <span class=\"k\">=</span> baidu<span class=\"k\">.</span>global <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#23558;&#20840;&#23616;&#23384;&#25918;&#22312;&#30340;&#21464;&#37327;&#37117;&#38598;&#20013;&#21040;&#19968;&#20010;&#22320;&#26041;</span>","window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>global <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>global <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/json.js'] && (_$jscoverage['baidu/json.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/json.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;json&#23545;&#35937;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.json</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>json <span class=\"k\">=</span> baidu<span class=\"k\">.</span>json <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang.js'] && (_$jscoverage['baidu/lang.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#35821;&#35328;&#23618;&#38754;&#30340;&#23553;&#35013;&#65292;&#21253;&#25324;&#31867;&#22411;&#21028;&#26029;&#12289;&#27169;&#22359;&#25193;&#23637;&#12289;&#32487;&#25215;&#22522;&#31867;&#20197;&#21450;&#23545;&#35937;&#33258;&#23450;&#20041;&#20107;&#20214;&#30340;&#25903;&#25345;&#12290;</span>","<span class=\"c\"> * @namespace baidu.lang</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/number.js'] && (_$jscoverage['baidu/number.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/number.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/2</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;number&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.number</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>number <span class=\"k\">=</span> baidu<span class=\"k\">.</span>number <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object.js'] && (_$jscoverage['baidu/object.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/object.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;&#21407;&#29983;&#23545;&#35937;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.object</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page.js'] && (_$jscoverage['baidu/page.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#39029;&#38754;&#23618;&#38754;&#30340;&#23553;&#35013;&#65292;&#21253;&#25324;&#39029;&#38754;&#30340;&#39640;&#23485;&#23646;&#24615;&#12289;&#20197;&#21450;&#22806;&#37096;css&#21644;js&#30340;&#21160;&#24577;&#28155;&#21152;</span>","<span class=\"c\"> * @namespace baidu.page</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/platform.js'] && (_$jscoverage['baidu/platform.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#24179;&#21488;&#31867;&#22411;&#21644;&#29305;&#24615;&#30340;&#23646;&#24615;</span>","<span class=\"c\"> * @namespace baidu.platform</span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform <span class=\"k\">=</span> baidu<span class=\"k\">.</span>platform <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/sio.js'] && (_$jscoverage['baidu/sio.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/sio.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20351;&#29992;&#21160;&#24577;script&#26631;&#31614;&#35831;&#27714;&#26381;&#21153;&#22120;&#36164;&#28304;&#65292;&#21253;&#25324;&#30001;&#26381;&#21153;&#22120;&#31471;&#30340;&#22238;&#35843;&#21644;&#27983;&#35272;&#22120;&#31471;&#30340;&#22238;&#35843;</span>","<span class=\"c\"> * @namespace baidu.sio</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio <span class=\"k\">=</span> baidu<span class=\"k\">.</span>sio <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string.js'] && (_$jscoverage['baidu/string.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;&#23383;&#31526;&#20018;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.string</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf.js'] && (_$jscoverage['baidu/swf.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/swf.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;flash&#23545;&#35937;&#30340;&#26041;&#27861;&#65292;&#21253;&#25324;&#21019;&#24314;flash&#23545;&#35937;&#12289;&#33719;&#21462;flash&#23545;&#35937;&#20197;&#21450;&#21028;&#26029;flash&#25554;&#20214;&#30340;&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @namespace baidu.swf</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf <span class=\"k\">=</span> baidu<span class=\"k\">.</span>swf <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/url.js'] && (_$jscoverage['baidu/url.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/url.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25805;&#20316;url&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @namespace baidu.url</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>url <span class=\"k\">=</span> baidu<span class=\"k\">.</span>url <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/ajax/form.js'] && (_$jscoverage['baidu/ajax/form.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/ajax/form.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#19968;&#20010;&#34920;&#21333;&#29992;ajax&#26041;&#24335;&#25552;&#20132;</span>","<span class=\"c\"> * @name baidu.ajax.form</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.ajax.form(form[, options])</span>","<span class=\"c\"> * @param {HTMLFormElement} form             &#38656;&#35201;&#25552;&#20132;&#30340;&#34920;&#21333;&#20803;&#32032;</span>","<span class=\"c\"> * @param {Object} \t[options] \t\t\t\t\t&#21457;&#36865;&#35831;&#27714;&#30340;&#36873;&#39033;&#21442;&#25968;</span>","<span class=\"c\"> * @config {Boolean} [async] \t\t\t&#26159;&#21542;&#24322;&#27493;&#35831;&#27714;&#12290;&#40664;&#35748;&#20026;true&#65288;&#24322;&#27493;&#65289;</span>","<span class=\"c\"> * @config {String} \t[username] \t\t\t&#29992;&#25143;&#21517;</span>","<span class=\"c\"> * @config {String} \t[password] \t\t\t&#23494;&#30721;</span>","<span class=\"c\"> * @config {Object} \t[headers] \t\t\t&#35201;&#35774;&#32622;&#30340;http request header</span>","<span class=\"c\"> * @config {Function} [replacer] \t\t\t&#23545;&#21442;&#25968;&#20540;&#29305;&#27530;&#22788;&#29702;&#30340;&#20989;&#25968;,replacer(string value, string key)</span>","<span class=\"c\"> * @config {Function} [onbeforerequest] \t&#21457;&#36865;&#35831;&#27714;&#20043;&#21069;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr)&#12290;</span>","<span class=\"c\"> * @config {Function} [onsuccess] \t\t&#35831;&#27714;&#25104;&#21151;&#26102;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr, string responseText)&#12290;</span>","<span class=\"c\"> * @config {Function} [onfailure] \t\t&#35831;&#27714;&#22833;&#36133;&#26102;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr)&#12290;</span>","<span class=\"c\"> * @config {Function} [on{STATUS_CODE}] \t&#24403;&#35831;&#27714;&#20026;&#30456;&#24212;&#29366;&#24577;&#30721;&#26102;&#35302;&#21457;&#30340;&#20107;&#20214;&#65292;&#22914;on302&#12289;on404&#12289;on500&#65292;function(XMLHttpRequest xhr)&#12290;3XX&#30340;&#29366;&#24577;&#30721;&#27983;&#35272;&#22120;&#26080;&#27861;&#33719;&#21462;&#65292;4xx&#30340;&#65292;&#21487;&#33021;&#22240;&#20026;&#26410;&#30693;&#38382;&#39064;&#23548;&#33268;&#33719;&#21462;&#22833;&#36133;&#12290;</span>","<span class=\"c\">\t</span>","<span class=\"c\"> * @see baidu.ajax.request</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {XMLHttpRequest} &#21457;&#36865;&#35831;&#27714;&#30340;XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>form <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>form<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> elements    <span class=\"k\">=</span> form<span class=\"k\">.</span>elements<span class=\"k\">,</span>","        len         <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">,</span>","        method      <span class=\"k\">=</span> form<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'method'</span><span class=\"k\">),</span>","        url         <span class=\"k\">=</span> form<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'action'</span><span class=\"k\">),</span>","        replacer    <span class=\"k\">=</span> options<span class=\"k\">.</span>replacer <span class=\"k\">||</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        sendOptions <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        data <span class=\"k\">=</span> <span class=\"k\">[],</span>","        i<span class=\"k\">,</span> item<span class=\"k\">,</span> itemType<span class=\"k\">,</span> itemName<span class=\"k\">,</span> itemValue<span class=\"k\">,</span> ","        opts<span class=\"k\">,</span> oi<span class=\"k\">,</span> oLen<span class=\"k\">,</span> oItem<span class=\"k\">;</span>","        ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21521;&#32531;&#20914;&#21306;&#28155;&#21152;&#21442;&#25968;&#25968;&#25454;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> addData<span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        data<span class=\"k\">.</span>push<span class=\"k\">(</span>name <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#22797;&#21046;&#21457;&#36865;&#21442;&#25968;&#36873;&#39033;&#23545;&#35937;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","            sendOptions<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> elements<span class=\"k\">[</span>i<span class=\"k\">];</span>","        itemName <span class=\"k\">=</span> item<span class=\"k\">.</span>name<span class=\"k\">;</span>","        ","        <span class=\"c\">// &#22788;&#29702;&#65306;&#21487;&#29992;&#24182;&#21253;&#21547;&#34920;&#21333;name&#30340;&#34920;&#21333;&#39033;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>disabled <span class=\"k\">&amp;&amp;</span> itemName<span class=\"k\">)</span> <span class=\"k\">{</span>","            itemType <span class=\"k\">=</span> item<span class=\"k\">.</span>type<span class=\"k\">;</span>","            itemValue <span class=\"k\">=</span> baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>escapeSymbol<span class=\"k\">(</span>item<span class=\"k\">.</span>value<span class=\"k\">);</span>","        ","            <span class=\"k\">switch</span> <span class=\"k\">(</span>itemType<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// radio&#21644;checkbox&#34987;&#36873;&#20013;&#26102;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'radio'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'checkbox'</span><span class=\"k\">:</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>checked<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                ","            <span class=\"c\">// &#40664;&#35748;&#31867;&#22411;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'textarea'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'text'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'password'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'hidden'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-one'</span><span class=\"k\">:</span>","                addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>itemValue<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"c\">// &#22810;&#34892;&#36873;&#20013;select&#65292;&#25340;&#35013;&#25152;&#26377;&#36873;&#20013;&#30340;&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-multiple'</span><span class=\"k\">:</span>","                opts <span class=\"k\">=</span> item<span class=\"k\">.</span>options<span class=\"k\">;</span>","                oLen <span class=\"k\">=</span> opts<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>oi <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> oi <span class=\"k\">&lt;</span> oLen<span class=\"k\">;</span> oi<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    oItem <span class=\"k\">=</span> opts<span class=\"k\">[</span>oi<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>oItem<span class=\"k\">.</span>selected<span class=\"k\">)</span> <span class=\"k\">{</span>","                        addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>oItem<span class=\"k\">.</span>value<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#23436;&#21892;&#21457;&#36865;&#35831;&#27714;&#30340;&#21442;&#25968;&#36873;&#39033;</span>","    sendOptions<span class=\"k\">.</span>data <span class=\"k\">=</span> data<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'&amp;'</span><span class=\"k\">);</span>","    sendOptions<span class=\"k\">.</span>method <span class=\"k\">=</span> form<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'method'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">'GET'</span><span class=\"k\">;</span>","    ","    <span class=\"c\">// &#21457;&#36865;&#35831;&#27714;</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request<span class=\"k\">(</span>url<span class=\"k\">,</span> sendOptions<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/ajax/get.js'] && (_$jscoverage['baidu/ajax/get.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/ajax/get.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.ajax;</span>","<span class=\"c\">///import baidu.ajax.request;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21457;&#36865;&#19968;&#20010;get&#35831;&#27714;</span>","<span class=\"c\"> * @name baidu.ajax.get</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.ajax.get(url[, onsuccess])</span>","<span class=\"c\"> * @param {string} \turl \t\t&#21457;&#36865;&#35831;&#27714;&#30340;url&#22320;&#22336;</span>","<span class=\"c\"> * @param {Function} [onsuccess] &#35831;&#27714;&#25104;&#21151;&#20043;&#21518;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;function(XMLHttpRequest xhr, string responseText)</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.ajax.post,baidu.ajax.request</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {XMLHttpRequest} \t&#21457;&#36865;&#35831;&#27714;&#30340;XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>get <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">,</span> onsuccess<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request<span class=\"k\">(</span>url<span class=\"k\">,</span> <span class=\"k\">{</span><span class=\"s\">'onsuccess'</span><span class=\"k\">:</span> onsuccess<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/ajax/post.js'] && (_$jscoverage['baidu/ajax/post.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/ajax/post.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.ajax;</span>","<span class=\"c\">///import baidu.ajax.request;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21457;&#36865;&#19968;&#20010;post&#35831;&#27714;</span>","<span class=\"c\"> * @name baidu.ajax.post</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.ajax.post(url, data[, onsuccess])</span>","<span class=\"c\"> * @param {string} \turl \t\t&#21457;&#36865;&#35831;&#27714;&#30340;url&#22320;&#22336;</span>","<span class=\"c\"> * @param {string} \tdata \t\t&#21457;&#36865;&#30340;&#25968;&#25454;</span>","<span class=\"c\"> * @param {Function} [onsuccess] &#35831;&#27714;&#25104;&#21151;&#20043;&#21518;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;function(XMLHttpRequest xhr, string responseText)</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.ajax.get,baidu.ajax.request</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {XMLHttpRequest} \t&#21457;&#36865;&#35831;&#27714;&#30340;XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>post <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">,</span> data<span class=\"k\">,</span> onsuccess<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request<span class=\"k\">(</span>","        url<span class=\"k\">,</span> ","        <span class=\"k\">{</span>","            <span class=\"s\">'onsuccess'</span><span class=\"k\">:</span> onsuccess<span class=\"k\">,</span>","            <span class=\"s\">'method'</span><span class=\"k\">:</span> <span class=\"s\">'POST'</span><span class=\"k\">,</span>","            <span class=\"s\">'data'</span><span class=\"k\">:</span> data","        <span class=\"k\">}</span>","    <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/ajax/request.js'] && (_$jscoverage['baidu/ajax/request.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.ajax;</span>","<span class=\"c\">///import baidu.fn.blank;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21457;&#36865;&#19968;&#20010;ajax&#35831;&#27714;</span>","<span class=\"c\"> * @author: allstar, erik, berg</span>","<span class=\"c\"> * @name baidu.ajax.request</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.ajax.request(url[, options])</span>","<span class=\"c\"> * @param {string} \turl &#21457;&#36865;&#35831;&#27714;&#30340;url</span>","<span class=\"c\"> * @param {Object} \toptions &#21457;&#36865;&#35831;&#27714;&#30340;&#36873;&#39033;&#21442;&#25968;</span>","<span class=\"c\"> * @config {String} \t[method] \t\t\t&#35831;&#27714;&#21457;&#36865;&#30340;&#31867;&#22411;&#12290;&#40664;&#35748;&#20026;GET</span>","<span class=\"c\"> * @config {Boolean}  [async] \t\t\t&#26159;&#21542;&#24322;&#27493;&#35831;&#27714;&#12290;&#40664;&#35748;&#20026;true&#65288;&#24322;&#27493;&#65289;</span>","<span class=\"c\"> * @config {String} \t[data] \t\t\t\t&#38656;&#35201;&#21457;&#36865;&#30340;&#25968;&#25454;&#12290;&#22914;&#26524;&#26159;GET&#35831;&#27714;&#30340;&#35805;&#65292;&#19981;&#38656;&#35201;&#36825;&#20010;&#23646;&#24615;</span>","<span class=\"c\"> * @config {Object} \t[headers] \t\t\t&#35201;&#35774;&#32622;&#30340;http request header</span>","<span class=\"c\"> * @config {number}   [timeout]       &#36229;&#26102;&#26102;&#38388;&#65292;&#21333;&#20301;ms</span>","<span class=\"c\"> * @config {String} \t[username] \t\t\t&#29992;&#25143;&#21517;</span>","<span class=\"c\"> * @config {String} \t[password] \t\t\t&#23494;&#30721;</span>","<span class=\"c\"> * @config {Function} [onsuccess] \t\t&#35831;&#27714;&#25104;&#21151;&#26102;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr, string responseText)&#12290;</span>","<span class=\"c\"> * @config {Function} [onfailure] \t\t&#35831;&#27714;&#22833;&#36133;&#26102;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr)&#12290;</span>","<span class=\"c\"> * @config {Function} [onbeforerequest]\t&#21457;&#36865;&#35831;&#27714;&#20043;&#21069;&#35302;&#21457;&#65292;function(XMLHttpRequest xhr)&#12290;</span>","<span class=\"c\"> * @config {Function} [on{STATUS_CODE}] \t&#24403;&#35831;&#27714;&#20026;&#30456;&#24212;&#29366;&#24577;&#30721;&#26102;&#35302;&#21457;&#30340;&#20107;&#20214;&#65292;&#22914;on302&#12289;on404&#12289;on500&#65292;function(XMLHttpRequest xhr)&#12290;3XX&#30340;&#29366;&#24577;&#30721;&#27983;&#35272;&#22120;&#26080;&#27861;&#33719;&#21462;&#65292;4xx&#30340;&#65292;&#21487;&#33021;&#22240;&#20026;&#26410;&#30693;&#38382;&#39064;&#23548;&#33268;&#33719;&#21462;&#22833;&#36133;&#12290;</span>","<span class=\"c\"> * @config {Boolean}  [noCache] \t\t\t&#26159;&#21542;&#38656;&#35201;&#32531;&#23384;&#65292;&#40664;&#35748;&#20026;false&#65288;&#32531;&#23384;&#65289;&#65292;1.1.1&#36215;&#25903;&#25345;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.ajax.get,baidu.ajax.post,baidu.ajax.form</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {XMLHttpRequest} &#21457;&#36865;&#35831;&#27714;&#30340;XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">,</span> opt_options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> options     <span class=\"k\">=</span> opt_options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        data        <span class=\"k\">=</span> options<span class=\"k\">.</span>data <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        async       <span class=\"k\">=</span> <span class=\"k\">!(</span>options<span class=\"k\">.</span>async <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">),</span>","        username    <span class=\"k\">=</span> options<span class=\"k\">.</span>username <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        password    <span class=\"k\">=</span> options<span class=\"k\">.</span>password <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        method      <span class=\"k\">=</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>method <span class=\"k\">||</span> <span class=\"s\">\"GET\"</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">(),</span>","        headers     <span class=\"k\">=</span> options<span class=\"k\">.</span>headers <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        <span class=\"c\">// &#22522;&#26412;&#30340;&#36923;&#36753;&#26469;&#33258;lili&#21516;&#23398;&#25552;&#20379;&#30340;patch</span>","        timeout     <span class=\"k\">=</span> options<span class=\"k\">.</span>timeout <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        eventHandlers <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        tick<span class=\"k\">,</span> key<span class=\"k\">,</span> xhr<span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * readyState&#21457;&#29983;&#21464;&#26356;&#26102;&#35843;&#29992;</span>","<span class=\"c\">     * </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> stateChangeHandler<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>xhr<span class=\"k\">.</span>readyState <span class=\"k\">==</span> <span class=\"s\">4</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> stat <span class=\"k\">=</span> xhr<span class=\"k\">.</span>status<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>ex<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// &#22312;&#35831;&#27714;&#26102;&#65292;&#22914;&#26524;&#32593;&#32476;&#20013;&#26029;&#65292;Firefox&#20250;&#26080;&#27861;&#21462;&#24471;status</span>","                fire<span class=\"k\">(</span><span class=\"s\">'failure'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","            fire<span class=\"k\">(</span>stat<span class=\"k\">);</span>","            ","            <span class=\"c\">// http://www.never-online.net/blog/article.asp?id=261</span>","            <span class=\"c\">// case 12002: // Server timeout      </span>","            <span class=\"c\">// case 12029: // dropped connections</span>","            <span class=\"c\">// case 12030: // dropped connections</span>","            <span class=\"c\">// case 12031: // dropped connections</span>","            <span class=\"c\">// case 12152: // closed by server</span>","            <span class=\"c\">// case 13030: // status and statusText are unavailable</span>","            ","            <span class=\"c\">// IE error sometimes returns 1223 when it </span>","            <span class=\"c\">// should be 204, so treat it as success</span>","            <span class=\"k\">if</span> <span class=\"k\">((</span>stat <span class=\"k\">&gt;=</span> <span class=\"s\">200</span> <span class=\"k\">&amp;&amp;</span> stat <span class=\"k\">&lt;</span> <span class=\"s\">300</span><span class=\"k\">)</span>","                <span class=\"k\">||</span> stat <span class=\"k\">==</span> <span class=\"s\">304</span>","                <span class=\"k\">||</span> stat <span class=\"k\">==</span> <span class=\"s\">1223</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                fire<span class=\"k\">(</span><span class=\"s\">'success'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                fire<span class=\"k\">(</span><span class=\"s\">'failure'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            ","            <span class=\"c\">/*</span>","<span class=\"c\">             * NOTE: Testing discovered that for some bizarre reason, on Mozilla, the</span>","<span class=\"c\">             * JavaScript &lt;code&gt;XmlHttpRequest.onreadystatechange&lt;/code&gt; handler</span>","<span class=\"c\">             * function maybe still be called after it is deleted. The theory is that the</span>","<span class=\"c\">             * callback is cached somewhere. Setting it to null or an empty function does</span>","<span class=\"c\">             * seem to work properly, though.</span>","<span class=\"c\">             * </span>","<span class=\"c\">             * On IE, there are two problems: Setting onreadystatechange to null (as</span>","<span class=\"c\">             * opposed to an empty function) sometimes throws an exception. With</span>","<span class=\"c\">             * particular (rare) versions of jscript.dll, setting onreadystatechange from</span>","<span class=\"c\">             * within onreadystatechange causes a crash. Setting it from within a timeout</span>","<span class=\"c\">             * fixes this bug (see issue 1610).</span>","<span class=\"c\">             * </span>","<span class=\"c\">             * End result: *always* set onreadystatechange to an empty function (never to</span>","<span class=\"c\">             * null). Never set onreadystatechange from within onreadystatechange (always</span>","<span class=\"c\">             * in a setTimeout()).</span>","<span class=\"c\">             */</span>","            window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>","                <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"c\">// &#36991;&#20813;&#20869;&#23384;&#27844;&#38706;.</span>","                    <span class=\"c\">// &#30001;new Function&#25913;&#25104;&#19981;&#21547;&#27492;&#20316;&#29992;&#22495;&#38142;&#30340; baidu.fn.blank &#20989;&#25968;,</span>","                    <span class=\"c\">// &#20197;&#36991;&#20813;&#20316;&#29992;&#22495;&#38142;&#24102;&#26469;&#30340;&#38544;&#24615;&#24490;&#29615;&#24341;&#29992;&#23548;&#33268;&#30340;IE&#19979;&#20869;&#23384;&#27844;&#38706;. By rocy 2011-01-05 .</span>","                    xhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>blank<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>async<span class=\"k\">)</span> <span class=\"k\">{</span>","                        xhr <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\">     * </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @return {XMLHttpRequest} XMLHttpRequest&#23545;&#35937;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getXHR<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>ActiveXObject<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span><span class=\"s\">\"Msxml2.XMLHTTP\"</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span><span class=\"s\">\"Microsoft.XMLHTTP\"</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>XMLHttpRequest<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35302;&#21457;&#20107;&#20214;</span>","<span class=\"c\">     * </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @param {String} type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> fire<span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">{</span>","        type <span class=\"k\">=</span> <span class=\"s\">'on'</span> <span class=\"k\">+</span> type<span class=\"k\">;</span>","        <span class=\"k\">var</span> handler <span class=\"k\">=</span> eventHandlers<span class=\"k\">[</span>type<span class=\"k\">],</span>","            globelHandler <span class=\"k\">=</span> baidu<span class=\"k\">.</span>ajax<span class=\"k\">[</span>type<span class=\"k\">];</span>","        ","        <span class=\"c\">// &#19981;&#23545;&#20107;&#20214;&#31867;&#22411;&#36827;&#34892;&#39564;&#35777;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>handler<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>tick<span class=\"k\">)</span> <span class=\"k\">{</span>","              clearTimeout<span class=\"k\">(</span>tick<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>type <span class=\"k\">!=</span> <span class=\"s\">'onsuccess'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                handler<span class=\"k\">(</span>xhr<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"c\">//&#22788;&#29702;&#33719;&#21462;xhr.responseText&#23548;&#33268;&#20986;&#38169;&#30340;&#24773;&#20917;,&#27604;&#22914;&#35831;&#27714;&#22270;&#29255;&#22320;&#22336;.</span>","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    xhr<span class=\"k\">.</span>responseText<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> handler<span class=\"k\">(</span>xhr<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                handler<span class=\"k\">(</span>xhr<span class=\"k\">,</span> xhr<span class=\"k\">.</span>responseText<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>globelHandler<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">//onsuccess&#19981;&#25903;&#25345;&#20840;&#23616;&#20107;&#20214;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>type <span class=\"k\">==</span> <span class=\"s\">'onsuccess'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            globelHandler<span class=\"k\">(</span>xhr<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">// &#23558;options&#21442;&#25968;&#20013;&#30340;&#20107;&#20214;&#21442;&#25968;&#22797;&#21046;&#21040;eventHandlers&#23545;&#35937;&#20013;</span>","        <span class=\"c\">// &#36825;&#37324;&#22797;&#21046;&#25152;&#26377;options&#30340;&#25104;&#21592;&#65292;eventHandlers&#26377;&#20887;&#20313;</span>","        <span class=\"c\">// &#20294;&#26159;&#19981;&#20250;&#20135;&#29983;&#20219;&#20309;&#24433;&#21709;&#65292;&#24182;&#19988;&#20195;&#30721;&#32039;&#20945;</span>","        eventHandlers<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">}</span>","    ","    headers<span class=\"k\">[</span><span class=\"s\">'X-Requested-With'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'XMLHttpRequest'</span><span class=\"k\">;</span>","    ","    ","    <span class=\"k\">try</span> <span class=\"k\">{</span>","        xhr <span class=\"k\">=</span> getXHR<span class=\"k\">();</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>method <span class=\"k\">==</span> <span class=\"s\">'GET'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","                url <span class=\"k\">+=</span> <span class=\"k\">(</span>url<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'&amp;'</span> <span class=\"k\">:</span> <span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">+</span> data<span class=\"k\">;</span>","                data <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>options<span class=\"k\">[</span><span class=\"s\">'noCache'</span><span class=\"k\">])</span>","                url <span class=\"k\">+=</span> <span class=\"k\">(</span>url<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'&amp;'</span> <span class=\"k\">:</span> <span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'b'</span> <span class=\"k\">+</span> <span class=\"k\">(+</span> <span class=\"k\">new</span> Date<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'=1'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>username<span class=\"k\">)</span> <span class=\"k\">{</span>","            xhr<span class=\"k\">.</span>open<span class=\"k\">(</span>method<span class=\"k\">,</span> url<span class=\"k\">,</span> async<span class=\"k\">,</span> username<span class=\"k\">,</span> password<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            xhr<span class=\"k\">.</span>open<span class=\"k\">(</span>method<span class=\"k\">,</span> url<span class=\"k\">,</span> async<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>async<span class=\"k\">)</span> <span class=\"k\">{</span>","            xhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> stateChangeHandler<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"c\">// &#22312;open&#20043;&#21518;&#20877;&#36827;&#34892;http&#35831;&#27714;&#22836;&#35774;&#23450;</span>","        <span class=\"c\">// FIXME &#26159;&#21542;&#38656;&#35201;&#28155;&#21152;; charset=UTF-8&#21602;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>method <span class=\"k\">==</span> <span class=\"s\">'POST'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            xhr<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span><span class=\"s\">\"Content-Type\"</span><span class=\"k\">,</span>","                <span class=\"k\">(</span>headers<span class=\"k\">[</span><span class=\"s\">'Content-Type'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span><span class=\"k\">));</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> headers<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>headers<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","                xhr<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span>key<span class=\"k\">,</span> headers<span class=\"k\">[</span>key<span class=\"k\">]);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        ","        fire<span class=\"k\">(</span><span class=\"s\">'beforerequest'</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>timeout<span class=\"k\">)</span> <span class=\"k\">{</span>","          tick <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            xhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>blank<span class=\"k\">;</span>","            xhr<span class=\"k\">.</span>abort<span class=\"k\">();</span>","            fire<span class=\"k\">(</span><span class=\"s\">\"timeout\"</span><span class=\"k\">);</span>","          <span class=\"k\">}</span><span class=\"k\">,</span> timeout<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        xhr<span class=\"k\">.</span>send<span class=\"k\">(</span>data<span class=\"k\">);</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(!</span>async<span class=\"k\">)</span> <span class=\"k\">{</span>","            stateChangeHandler<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>ex<span class=\"k\">)</span> <span class=\"k\">{</span>","        fire<span class=\"k\">(</span><span class=\"s\">'failure'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> xhr<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/contains.js'] && (_$jscoverage['baidu/array/contains.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","<span class=\"c\">///import baidu.array.indexOf;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#19968;&#20010;&#25968;&#32452;&#20013;&#26159;&#21542;&#21253;&#21547;&#32473;&#23450;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.array.contains</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.contains(source, obj)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#21028;&#26029;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Any} obj &#35201;&#26597;&#25214;&#30340;&#20803;&#32032;.</span>","<span class=\"c\"> * @return {boolean} &#21028;&#26029;&#32467;&#26524;.</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>source<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/each.js'] && (_$jscoverage['baidu/array/each.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/each.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36941;&#21382;&#25968;&#32452;&#20013;&#25152;&#26377;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.array.each</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.each(source, iterator[, thisObject])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;&#25968;&#32452;&#20803;&#32032;&#36827;&#34892;&#35843;&#29992;&#30340;&#20989;&#25968;&#65292;&#35813;&#20989;&#25968;&#26377;&#20004;&#20010;&#21442;&#25968;&#65292;&#31532;&#19968;&#20010;&#20026;&#25968;&#32452;&#20803;&#32032;&#65292;&#31532;&#20108;&#20010;&#20026;&#25968;&#32452;&#32034;&#24341;&#20540;&#65292;function (item, index)&#12290;</span>","<span class=\"c\"> * @param {Object} [thisObject] &#20989;&#25968;&#35843;&#29992;&#26102;&#30340;this&#25351;&#38024;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * each&#26041;&#27861;&#19981;&#25903;&#25345;&#23545;Object&#30340;&#36941;&#21382;,&#23545;Object&#30340;&#36941;&#21382;&#20351;&#29992;baidu.object.each &#12290;</span>","<span class=\"c\"> * @shortcut each</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> */</span>"," ","baidu<span class=\"k\">.</span>each <span class=\"k\">=</span> baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>forEach <span class=\"k\">=</span> baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>each <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> thisObject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> returnValue<span class=\"k\">,</span> item<span class=\"k\">,</span> i<span class=\"k\">,</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            item <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"c\">//TODO</span>","            <span class=\"c\">//&#27492;&#22788;&#23454;&#29616;&#21644;&#26631;&#20934;&#19981;&#31526;&#21512;&#65292;&#26631;&#20934;&#20013;&#26159;&#36825;&#26679;&#35828;&#30340;&#65306;</span>","            <span class=\"c\">//If a thisObject parameter is provided to forEach, it will be used as the this for each invocation of the callback. If it is not provided, or is null, the global object associated with callback is used instead.</span>","            returnValue <span class=\"k\">=</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject <span class=\"k\">||</span> source<span class=\"k\">,</span> item<span class=\"k\">,</span> i<span class=\"k\">);</span>","    ","            <span class=\"k\">if</span> <span class=\"k\">(</span>returnValue <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/empty.js'] && (_$jscoverage['baidu/array/empty.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#28165;&#31354;&#19968;&#20010;&#25968;&#32452;</span>","<span class=\"c\"> * @name baidu.array.empty</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.empty(source)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#28165;&#31354;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>empty <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    source<span class=\"k\">.</span>length <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/every.js'] && (_$jscoverage['baidu/array/every.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#19968;&#20010;&#25968;&#32452;&#20013;&#26159;&#21542;&#25152;&#26377;&#20803;&#32032;&#37117;&#28385;&#36275;&#32473;&#23450;&#26465;&#20214;</span>","<span class=\"c\"> * @name baidu.array.every</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.every(source, iterator[,thisObject])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#21028;&#26029;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Function} iterator &#21028;&#26029;&#20989;&#25968;.</span>","<span class=\"c\"> * @param {Object} [thisObject] &#20989;&#25968;&#35843;&#29992;&#26102;&#30340;this&#25351;&#38024;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @return {boolean} &#21028;&#26029;&#32467;&#26524;.</span>","<span class=\"c\"> * @see baidu.array.some</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>every <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> thisObject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> source <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject <span class=\"k\">||</span> source<span class=\"k\">,</span> source<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/filter.js'] && (_$jscoverage['baidu/array/filter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#25968;&#32452;&#20013;&#31579;&#36873;&#31526;&#21512;&#26465;&#20214;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.array.filter</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.filter(source, iterator[, thisObject])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#31579;&#36873;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;&#25968;&#32452;&#20803;&#32032;&#36827;&#34892;&#31579;&#36873;&#30340;&#20989;&#25968;&#65292;&#35813;&#20989;&#25968;&#26377;&#20004;&#20010;&#21442;&#25968;&#65292;&#31532;&#19968;&#20010;&#20026;&#25968;&#32452;&#20803;&#32032;&#65292;&#31532;&#20108;&#20010;&#20026;&#25968;&#32452;&#32034;&#24341;&#20540;&#65292;function (item, index)&#65292;&#20989;&#25968;&#38656;&#35201;&#36820;&#22238;true&#25110;false</span>","<span class=\"c\"> * @param {Object} [thisObject] &#20989;&#25968;&#35843;&#29992;&#26102;&#30340;this&#25351;&#38024;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.array.find</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#31526;&#21512;&#26465;&#20214;&#30340;&#25968;&#32452;&#39033;&#38598;&#21512;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> thisObject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span>","        resultIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span>","        item<span class=\"k\">,</span>","        i<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            item <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"c\">//TODO</span>","            <span class=\"c\">//&#21644;&#26631;&#20934;&#19981;&#31526;&#65292;see array.each</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">true</span> <span class=\"k\">===</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject <span class=\"k\">||</span> source<span class=\"k\">,</span> item<span class=\"k\">,</span> i<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"c\">// resultIndex&#29992;&#20110;&#20248;&#21270;&#23545;result.length&#30340;&#22810;&#27425;&#35835;&#21462;</span>","                result<span class=\"k\">[</span>resultIndex<span class=\"k\">++]</span> <span class=\"k\">=</span> item<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/find.js'] && (_$jscoverage['baidu/array/find.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/find.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#25968;&#32452;&#20013;&#23547;&#25214;&#31526;&#21512;&#26465;&#20214;&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.array.find</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.find(source, iterator)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#26597;&#25214;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;&#25968;&#32452;&#20803;&#32032;&#36827;&#34892;&#26597;&#25214;&#30340;&#20989;&#25968;&#65292;&#35813;&#20989;&#25968;&#26377;&#20004;&#20010;&#21442;&#25968;&#65292;&#31532;&#19968;&#20010;&#20026;&#25968;&#32452;&#20803;&#32032;&#65292;&#31532;&#20108;&#20010;&#20026;&#25968;&#32452;&#32034;&#24341;&#20540;&#65292;function (item, index)&#65292;&#20989;&#25968;&#38656;&#35201;&#36820;&#22238;true&#25110;false</span>","<span class=\"c\"> * @see baidu.array.filter,baidu.array.indexOf</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Any|null} &#31526;&#21512;&#26465;&#20214;&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;&#65292;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>find <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> item<span class=\"k\">,</span> i<span class=\"k\">,</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            item <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">true</span> <span class=\"k\">===</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">,</span> item<span class=\"k\">,</span> i<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> item<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/hash.js'] && (_$jscoverage['baidu/array/hash.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#20004;&#20010;&#25968;&#32452;&#21442;&#25968;&#21512;&#24182;&#25104;&#19968;&#20010;&#31867;&#20284;hashMap&#32467;&#26500;&#30340;&#23545;&#35937;&#65292;&#36825;&#20010;&#23545;&#35937;&#20351;&#29992;&#31532;&#19968;&#20010;&#25968;&#32452;&#20570;&#20026;key&#65292;&#20351;&#29992;&#31532;&#20108;&#20010;&#25968;&#32452;&#20570;&#20026;&#20540;&#65292;&#22914;&#26524;&#31532;&#20108;&#20010;&#21442;&#25968;&#26410;&#25351;&#23450;&#65292;&#21017;&#25226;&#23545;&#35937;&#30340;&#25152;&#26377;&#20540;&#32622;&#20026;true&#12290;</span>","<span class=\"c\"> * @name baidu.array.hash</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.hash(keys[, values])</span>","<span class=\"c\"> * @param {Array} keys &#20316;&#20026;key&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Array} [values] &#20316;&#20026;value&#30340;&#25968;&#32452;&#65292;&#26410;&#25351;&#23450;&#27492;&#21442;&#25968;&#26102;&#65292;&#40664;&#35748;&#20540;&#23558;&#23545;&#35937;&#30340;&#20540;&#37117;&#35774;&#20026;true&#12290;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#21512;&#24182;&#21518;&#30340;&#23545;&#35937;{key : value}</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>hash <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>keys<span class=\"k\">,</span> values<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> o <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span> vl <span class=\"k\">=</span> values <span class=\"k\">&amp;&amp;</span> values<span class=\"k\">.</span>length<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> keys<span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        o<span class=\"k\">[</span>keys<span class=\"k\">[</span>i<span class=\"k\">]]</span> <span class=\"k\">=</span> <span class=\"k\">(</span>vl <span class=\"k\">&amp;&amp;</span> vl <span class=\"k\">&gt;</span> i<span class=\"k\">)</span> <span class=\"k\">?</span> values<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> o<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""]);
_$jscoverage['baidu/array/indexOf.js'] && (_$jscoverage['baidu/array/indexOf.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/indexOf.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26597;&#35810;&#25968;&#32452;&#20013;&#25351;&#23450;&#20803;&#32032;&#30340;&#32034;&#24341;&#20301;&#32622;</span>","<span class=\"c\"> * @name baidu.array.indexOf</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.indexOf(source, match[, fromIndex])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#26597;&#35810;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Any} match &#26597;&#35810;&#39033;</span>","<span class=\"c\"> * @param {number} [fromIndex] &#26597;&#35810;&#30340;&#36215;&#22987;&#20301;&#32034;&#24341;&#20301;&#32622;&#65292;&#22914;&#26524;&#20026;&#36127;&#25968;&#65292;&#21017;&#20174;source.length+fromIndex&#24448;&#21518;&#24320;&#22987;&#26597;&#25214;</span>","<span class=\"c\"> * @see baidu.array.find,baidu.array.lastIndexOf</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#25351;&#23450;&#20803;&#32032;&#30340;&#32034;&#24341;&#20301;&#32622;&#65292;&#26597;&#35810;&#19981;&#21040;&#26102;&#36820;&#22238;-1</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>indexOf <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> match<span class=\"k\">,</span> fromIndex<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span>","        iterator <span class=\"k\">=</span> match<span class=\"k\">;</span>","        ","    fromIndex <span class=\"k\">=</span> fromIndex <span class=\"k\">|</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>fromIndex <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//&#23567;&#20110;0</span>","        fromIndex <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">+</span> fromIndex<span class=\"k\">)</span>","    <span class=\"k\">}</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> fromIndex <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> fromIndex<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>fromIndex <span class=\"k\">in</span> source <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">[</span>fromIndex<span class=\"k\">]</span> <span class=\"k\">===</span> match<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> fromIndex<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/lastIndexOf.js'] && (_$jscoverage['baidu/array/lastIndexOf.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/lastIndexOf.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#21518;&#24448;&#21069;&#65292;&#26597;&#35810;&#25968;&#32452;&#20013;&#25351;&#23450;&#20803;&#32032;&#30340;&#32034;&#24341;&#20301;&#32622;</span>","<span class=\"c\"> * @name baidu.array.lastIndexOf</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.lastIndexOf(source, match)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#26597;&#35810;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Any} match &#26597;&#35810;&#39033;</span>","<span class=\"c\"> * @param {number} [fromIndex] &#26597;&#35810;&#30340;&#36215;&#22987;&#20301;&#32034;&#24341;&#20301;&#32622;&#65292;&#22914;&#26524;&#20026;&#36127;&#25968;&#65292;&#21017;&#20174;source.length+fromIndex&#24448;&#21069;&#24320;&#22987;&#26597;&#25214;</span>","<span class=\"c\"> * @see baidu.array.indexOf</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#25351;&#23450;&#20803;&#32032;&#30340;&#32034;&#24341;&#20301;&#32622;&#65292;&#26597;&#35810;&#19981;&#21040;&#26102;&#36820;&#22238;-1</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>lastIndexOf <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> match<span class=\"k\">,</span> fromIndex<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","","    fromIndex <span class=\"k\">=</span> fromIndex <span class=\"k\">|</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    <span class=\"k\">if</span><span class=\"k\">(!</span>fromIndex <span class=\"k\">||</span> fromIndex <span class=\"k\">&gt;=</span> len<span class=\"k\">)</span><span class=\"k\">{</span>","        fromIndex <span class=\"k\">=</span> len <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>fromIndex <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","        fromIndex <span class=\"k\">+=</span> len<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">for</span><span class=\"k\">(;</span> fromIndex <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> fromIndex <span class=\"k\">--)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>fromIndex <span class=\"k\">in</span> source <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">[</span>fromIndex<span class=\"k\">]</span> <span class=\"k\">===</span> match<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> fromIndex<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/map.js'] && (_$jscoverage['baidu/array/map.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36941;&#21382;&#25968;&#32452;&#20013;&#25152;&#26377;&#20803;&#32032;&#65292;&#23558;&#27599;&#19968;&#20010;&#20803;&#32032;&#24212;&#29992;&#26041;&#27861;&#36827;&#34892;&#36716;&#25442;&#65292;&#24182;&#36820;&#22238;&#36716;&#25442;&#21518;&#30340;&#26032;&#25968;&#32452;&#12290;</span>","<span class=\"c\"> * @name baidu.array.map</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.map(source, iterator[, thisObject])</span>","<span class=\"c\"> * @param {Array}    source   &#38656;&#35201;&#36941;&#21382;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;&#25968;&#32452;&#20803;&#32032;&#36827;&#34892;&#22788;&#29702;&#30340;&#20989;&#25968;.</span>","<span class=\"c\"> * @param {Object} [thisObject] &#20989;&#25968;&#35843;&#29992;&#26102;&#30340;this&#25351;&#38024;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @return {Array} map&#21518;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @see baidu.array.reduce</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>map <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> thisObject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> results <span class=\"k\">=</span> <span class=\"k\">[],</span>","        i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        l <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        results<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject <span class=\"k\">||</span> source<span class=\"k\">,</span> source<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> results<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/reduce.js'] && (_$jscoverage['baidu/array/reduce.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36941;&#21382;&#25968;&#32452;&#20013;&#25152;&#26377;&#20803;&#32032;&#65292;&#23558;&#27599;&#19968;&#20010;&#20803;&#32032;&#24212;&#29992;&#26041;&#27861;&#36827;&#34892;&#21512;&#24182;&#65292;&#24182;&#36820;&#22238;&#21512;&#24182;&#21518;&#30340;&#32467;&#26524;&#12290;</span>","<span class=\"c\"> * @name baidu.array.reduce</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.reduce(source, iterator[, initializer])</span>","<span class=\"c\"> * @param {Array}    source &#38656;&#35201;&#36941;&#21382;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;&#25968;&#32452;&#20803;&#32032;&#36827;&#34892;&#22788;&#29702;&#30340;&#20989;&#25968;&#65292;&#20989;&#25968;&#25509;&#21463;&#22235;&#20010;&#21442;&#25968;&#65306;&#19978;&#19968;&#27425;reduce&#30340;&#32467;&#26524;&#65288;&#25110;&#21021;&#22987;&#20540;&#65289;&#65292;&#24403;&#21069;&#20803;&#32032;&#20540;&#65292;&#32034;&#24341;&#20540;&#65292;&#25972;&#20010;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Object}   [initializer] &#21512;&#24182;&#30340;&#21021;&#22987;&#39033;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#29992;&#25968;&#32452;&#20013;&#30340;&#31532;&#19968;&#20010;&#20540;&#20316;&#20026;&#21021;&#22987;&#20540;.</span>","<span class=\"c\"> * @return {Array} reduce&#21518;&#30340;&#20540;.</span>","<span class=\"c\"> * @version 1.3.4</span>","<span class=\"c\"> * @see baidu.array.reduce</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>reduce <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> initializer<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        l <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span>","        found <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    <span class=\"k\">if</span><span class=\"k\">(</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&lt;</span> <span class=\"s\">3</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">//&#27809;&#26377;initializer&#30340;&#24773;&#20917;&#65292;&#25214;&#21040;&#31532;&#19968;&#20010;&#21487;&#29992;&#30340;&#20540;</span>","        <span class=\"k\">for</span><span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            initializer <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">++];</span>","            found <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">break</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>found<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> i <span class=\"k\">in</span> source<span class=\"k\">)</span><span class=\"k\">{</span>","            initializer <span class=\"k\">=</span> iterator<span class=\"k\">(</span>initializer<span class=\"k\">,</span> source<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">,</span> i <span class=\"k\">,</span> source<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> initializer<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/remove.js'] && (_$jscoverage['baidu/array/remove.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/remove.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#31227;&#38500;&#25968;&#32452;&#20013;&#30340;&#39033;</span>","<span class=\"c\"> * @name baidu.array.remove</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.remove(source, match)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#31227;&#38500;&#39033;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Any} match &#35201;&#31227;&#38500;&#30340;&#39033;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.array.removeAt</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#31227;&#38500;&#21518;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> match<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","        ","    <span class=\"k\">while</span> <span class=\"k\">(</span>len<span class=\"k\">--)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>len <span class=\"k\">in</span> source <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">[</span>len<span class=\"k\">]</span> <span class=\"k\">===</span> match<span class=\"k\">)</span> <span class=\"k\">{</span>","            source<span class=\"k\">.</span>splice<span class=\"k\">(</span>len<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/removeAt.js'] && (_$jscoverage['baidu/array/removeAt.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/removeAt.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#31227;&#38500;&#25968;&#32452;&#20013;&#30340;&#39033;</span>","<span class=\"c\"> * @name baidu.array.removeAt</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.removeAt(source, index)</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#31227;&#38500;&#39033;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {number} index &#35201;&#31227;&#38500;&#39033;&#30340;&#32034;&#24341;&#20301;&#32622;</span>","<span class=\"c\"> * @see baidu.array.remove</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {Any} &#34987;&#31227;&#38500;&#30340;&#25968;&#32452;&#39033;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>removeAt <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> index<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> source<span class=\"k\">.</span>splice<span class=\"k\">(</span>index<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/some.js'] && (_$jscoverage['baidu/array/some.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#19968;&#20010;&#25968;&#32452;&#20013;&#26159;&#21542;&#26377;&#37096;&#20998;&#20803;&#32032;&#28385;&#36275;&#32473;&#23450;&#26465;&#20214;</span>","<span class=\"c\"> * @name baidu.array.some</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.some(source, iterator[,thisObject])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#21028;&#26029;&#30340;&#25968;&#32452;.</span>","<span class=\"c\"> * @param {Function} iterator &#21028;&#26029;&#20989;&#25968;.</span>","<span class=\"c\"> * @param {Object} [thisObject] &#20989;&#25968;&#35843;&#29992;&#26102;&#30340;this&#25351;&#38024;&#65292;&#22914;&#26524;&#27809;&#26377;&#27492;&#21442;&#25968;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @return {boolean} &#21028;&#26029;&#32467;&#26524;.</span>","<span class=\"c\"> * @see baidu.array.every</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>some <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">,</span> thisObject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> source <span class=\"k\">&amp;&amp;</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject <span class=\"k\">||</span> source<span class=\"k\">,</span> source<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/array/unique.js'] && (_$jscoverage['baidu/array/unique.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/array/unique.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36807;&#28388;&#25968;&#32452;&#20013;&#30340;&#30456;&#21516;&#39033;&#12290;&#22914;&#26524;&#20004;&#20010;&#20803;&#32032;&#30456;&#21516;&#65292;&#20250;&#21024;&#38500;&#21518;&#19968;&#20010;&#20803;&#32032;&#12290;</span>","<span class=\"c\"> * @name baidu.array.unique</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.array.unique(source[, compareFn])</span>","<span class=\"c\"> * @param {Array} source &#38656;&#35201;&#36807;&#28388;&#30456;&#21516;&#39033;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @param {Function} [compareFn] &#27604;&#36739;&#20004;&#20010;&#25968;&#32452;&#39033;&#26159;&#21542;&#30456;&#21516;&#30340;&#20989;&#25968;,&#20004;&#20010;&#25968;&#32452;&#39033;&#20316;&#20026;&#20989;&#25968;&#30340;&#21442;&#25968;&#12290;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#36807;&#28388;&#21518;&#30340;&#26032;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>unique <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> compareFn<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span>","        result <span class=\"k\">=</span> source<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">),</span>","        i<span class=\"k\">,</span> datum<span class=\"k\">;</span>","        ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">!=</span> <span class=\"k\">typeof</span> compareFn<span class=\"k\">)</span> <span class=\"k\">{</span>","        compareFn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>item1<span class=\"k\">,</span> item2<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> item1 <span class=\"k\">===</span> item2<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#20174;&#21518;&#24448;&#21069;&#21452;&#37325;&#24490;&#29615;&#27604;&#36739;</span>","    <span class=\"c\">// &#22914;&#26524;&#20004;&#20010;&#20803;&#32032;&#30456;&#21516;&#65292;&#21024;&#38500;&#21518;&#19968;&#20010;</span>","    <span class=\"k\">while</span> <span class=\"k\">(--</span>len <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        datum <span class=\"k\">=</span> result<span class=\"k\">[</span>len<span class=\"k\">];</span>","        i <span class=\"k\">=</span> len<span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>i<span class=\"k\">--)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>compareFn<span class=\"k\">(</span>datum<span class=\"k\">,</span> result<span class=\"k\">[</span>i<span class=\"k\">]))</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>splice<span class=\"k\">(</span>len<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async/Deferred.js'] && (_$jscoverage['baidu/async/Deferred.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.async;</span>","<span class=\"c\">///import baidu.object.extend;</span>","<span class=\"c\">///import baidu.async._isDeferred;</span>","<span class=\"c\">///import baidu.fn.blank;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#29992;&#20110;&#25903;&#25345;&#24322;&#27493;&#22788;&#29702;, &#20351;&#21516;&#27493;&#24322;&#27493;&#30340;&#35843;&#29992;&#39118;&#26684;&#32479;&#19968;.</span>","<span class=\"c\"> * @class</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @grammar new baidu.async.Deferred()</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#31034;&#20363;:</span>","<span class=\"c\">    function someAsync(){</span>","<span class=\"c\">        var deferred = new baidu.async.Deferred();</span>","<span class=\"c\">        setTimeout(function(){</span>","<span class=\"c\">            afterSomeOperation();</span>","<span class=\"c\">            if(someReason){</span>","<span class=\"c\">                deferred.resolve(someValue);</span>","<span class=\"c\">            } else {</span>","<span class=\"c\">                deferred.reject(someError);</span>","<span class=\"c\">            }</span>","<span class=\"c\">        },100);</span>","<span class=\"c\">        return deferred;</span>","<span class=\"c\">    }</span>","<span class=\"c\">    //&#29992;&#31867;&#20284;&#21516;&#27493;&#30340;&#26041;&#24335;&#35843;&#29992;&#24322;&#27493;&#25805;&#20316;.</span>","<span class=\"c\">    someAsync().then(onSuccess, onFail);</span>","<span class=\"c\">    //onSuccess&#25110;onFail&#21487;&#20197;&#30830;&#20445;&#22312;&#27491;&#30830;&#30340;&#26102;&#38388;&#28857;&#25191;&#34892;.</span>","","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>Deferred <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">{</span>","        _fired<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        _firing<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        _cancelled<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        _resolveChain<span class=\"k\">:</span> <span class=\"k\">[],</span>","        _rejectChain<span class=\"k\">:</span> <span class=\"k\">[],</span>","        _result<span class=\"k\">:</span> <span class=\"k\">[],</span>","        _isError<span class=\"k\">:</span> <span class=\"s\">0</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> fire<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>_cancelled <span class=\"k\">||</span> me<span class=\"k\">.</span>_firing<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#22914;&#26524;&#24050;&#26377;nextDeferred&#23545;&#35937;,&#21017;&#36716;&#31227;&#21040;nextDeferred&#19978;.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>_nextDeferred<span class=\"k\">)</span> <span class=\"k\">{</span>","            me<span class=\"k\">.</span>_nextDeferred<span class=\"k\">.</span>then<span class=\"k\">(</span>me<span class=\"k\">.</span>_resolveChain<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> me<span class=\"k\">.</span>_rejectChain<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        me<span class=\"k\">.</span>_firing <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> chain <span class=\"k\">=</span> me<span class=\"k\">.</span>_isError <span class=\"k\">?</span> me<span class=\"k\">.</span>_rejectChain <span class=\"k\">:</span> me<span class=\"k\">.</span>_resolveChain<span class=\"k\">,</span>","            result <span class=\"k\">=</span> me<span class=\"k\">.</span>_result<span class=\"k\">[</span>me<span class=\"k\">.</span>_isError <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">];</span>","        <span class=\"c\">// &#27492;&#22788;&#20351;&#29992;while&#32780;&#38750;for&#24490;&#29615;,&#26159;&#20026;&#20102;&#36991;&#20813;firing&#26102;&#25554;&#20837;&#26032;&#20989;&#25968;.</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>chain<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span> me<span class=\"k\">.</span>_cancelled<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#25152;&#26377;&#20989;&#25968;&#20165;&#35843;&#29992;&#19968;&#27425;.</span>","            <span class=\"c\">//TODO: &#25903;&#25345;&#20256;&#20837; this &#21644; arguments, &#32780;&#19981;&#26159;&#20165;&#20165;&#19968;&#20010;&#20540;.</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> chainResult <span class=\"k\">=</span> chain<span class=\"k\">.</span>shift<span class=\"k\">().</span>call<span class=\"k\">(</span>me<span class=\"k\">,</span> result<span class=\"k\">);</span>","                <span class=\"c\">//&#33509;&#26041;&#27861;&#36820;&#22238;Deferred,&#21017;&#23558;&#21097;&#20313;&#26041;&#27861;&#24310;&#33267;Deferred&#20013;&#25191;&#34892;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>_isDeferred<span class=\"k\">(</span>chainResult<span class=\"k\">))</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>_nextDeferred <span class=\"k\">=</span> chainResult<span class=\"k\">;</span>","                    <span class=\"k\">[].</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span>chainResult<span class=\"k\">.</span>_resolveChain<span class=\"k\">,</span> me<span class=\"k\">.</span>_resolveChain<span class=\"k\">);</span>","                    <span class=\"k\">[].</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span>chainResult<span class=\"k\">.</span>_rejectChain<span class=\"k\">,</span> me<span class=\"k\">.</span>_rejectChain<span class=\"k\">);</span>","                    chain <span class=\"k\">=</span> me<span class=\"k\">.</span>_resolveChain <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    me<span class=\"k\">.</span>_rejectChain <span class=\"k\">=</span> <span class=\"k\">[];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">throw</span> error<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>_fired <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>_firing <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35843;&#29992;onSuccess&#38142;.&#20351;&#29992;&#32473;&#23450;&#30340;value&#20316;&#20026;&#20989;&#25968;&#21442;&#25968;.</span>","<span class=\"c\">     * @param {*} value &#25104;&#21151;&#32467;&#26524;.</span>","<span class=\"c\">     * @return {baidu.async.Deferred} this.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>resolve <span class=\"k\">=</span> me<span class=\"k\">.</span>fireSuccess <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        me<span class=\"k\">.</span>_result<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","        fire<span class=\"k\">();</span>","        <span class=\"k\">return</span> me<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35843;&#29992;onFail&#38142;. &#20351;&#29992;&#32473;&#23450;&#30340;error&#20316;&#20026;&#20989;&#25968;&#21442;&#25968;.</span>","<span class=\"c\">     * @param {Error} error &#22833;&#36133;&#21407;&#22240;.</span>","<span class=\"c\">     * @return {baidu.async.Deferred} this.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>reject <span class=\"k\">=</span> me<span class=\"k\">.</span>fireFail <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","        me<span class=\"k\">.</span>_result<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> error<span class=\"k\">;</span>","        me<span class=\"k\">.</span>_isError <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        fire<span class=\"k\">();</span>","        <span class=\"k\">return</span> me<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#28155;&#21152;onSuccess&#21644;onFail&#26041;&#27861;&#21040;&#21508;&#33258;&#30340;&#38142;&#19978;. &#22914;&#26524;&#35813;deferred&#24050;&#35302;&#21457;,&#21017;&#31435;&#21363;&#25191;&#34892;.</span>","<span class=\"c\">     * @param {Function} onSuccess &#35813;deferred&#25104;&#21151;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.&#31532;&#19968;&#20010;&#24418;&#21442;&#20026;&#25104;&#21151;&#26102;&#32467;&#26524;.</span>","<span class=\"c\">     * @param {Function} onFail &#35813;deferred&#22833;&#36133;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.&#31532;&#19968;&#20010;&#24418;&#21442;&#20026;&#22833;&#36133;&#26102;&#32467;&#26524;.</span>","<span class=\"c\">     * @return {baidu.async.Deferred} this.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>then <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>onSuccess<span class=\"k\">,</span> onFail<span class=\"k\">)</span> <span class=\"k\">{</span>","        me<span class=\"k\">.</span>_resolveChain<span class=\"k\">.</span>push<span class=\"k\">(</span>onSuccess<span class=\"k\">);</span>","        me<span class=\"k\">.</span>_rejectChain<span class=\"k\">.</span>push<span class=\"k\">(</span>onFail<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>_fired<span class=\"k\">)</span> <span class=\"k\">{</span>","            fire<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> me<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#28155;&#21152;&#26041;&#27861;&#21040;onSuccess&#38142;&#19978;. &#22914;&#26524;&#35813;deferred&#24050;&#35302;&#21457;,&#21017;&#31435;&#21363;&#25191;&#34892;.</span>","<span class=\"c\">     * @param {Function} onSuccess &#35813;deferred&#25104;&#21151;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.&#31532;&#19968;&#20010;&#24418;&#21442;&#20026;&#25104;&#21151;&#26102;&#32467;&#26524;.</span>","<span class=\"c\">     * @return {baidu.async.Deferred} this.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>success <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>onSuccess<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> me<span class=\"k\">.</span>then<span class=\"k\">(</span>onSuccess<span class=\"k\">,</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>blank<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#28155;&#21152;&#26041;&#27861;&#21040;onFail&#38142;&#19978;. &#22914;&#26524;&#35813;deferred&#24050;&#35302;&#21457;,&#21017;&#31435;&#21363;&#25191;&#34892;.</span>","<span class=\"c\">     * @param {Function} onFail &#35813;deferred&#22833;&#36133;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.&#31532;&#19968;&#20010;&#24418;&#21442;&#20026;&#22833;&#36133;&#26102;&#32467;&#26524;.</span>","<span class=\"c\">     * @return {baidu.async.Deferred} this.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>fail <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>onFail<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> me<span class=\"k\">.</span>then<span class=\"k\">(</span>baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>blank<span class=\"k\">,</span> onFail<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","     ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#20013;&#26029;&#35813;deferred, &#20351;&#20854;&#22833;&#25928;.</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>cancel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        me<span class=\"k\">.</span>_cancelled <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async/get.js'] && (_$jscoverage['baidu/async/get.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.ajax.request;</span>","<span class=\"c\">///import baidu.async.Deferred;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25903;&#25345;&#24322;&#27493;&#30340;ajax.get&#23553;&#35013;.</span>","<span class=\"c\"> * @grammar baidu.async.Deferred(url)</span>","<span class=\"c\"> * @param {String} url &#35831;&#27714;&#22320;&#22336;.</span>","<span class=\"c\"> * @version 1.3.9 </span>","<span class=\"c\"> * @return {baidu.async.Deferred} Deferred&#23545;&#35937;,&#25903;&#25345;&#38142;&#24335;&#35843;&#29992;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>get <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>url<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> deferred <span class=\"k\">=</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>Deferred<span class=\"k\">();</span>","    baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request<span class=\"k\">(</span>url<span class=\"k\">,</span> <span class=\"k\">{</span>","        onsuccess<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>xhr<span class=\"k\">,</span> responseText<span class=\"k\">)</span> <span class=\"k\">{</span>","            deferred<span class=\"k\">.</span>resolve<span class=\"k\">(</span><span class=\"k\">{</span>xhr<span class=\"k\">:</span> xhr<span class=\"k\">,</span> responseText<span class=\"k\">:</span> responseText<span class=\"k\">}</span><span class=\"k\">);</span> ","        <span class=\"k\">}</span><span class=\"k\">,</span>","        onfailure<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>xhr<span class=\"k\">)</span> <span class=\"k\">{</span>","            deferred<span class=\"k\">.</span>reject<span class=\"k\">(</span><span class=\"k\">{</span>xhr<span class=\"k\">:</span> xhr<span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> deferred<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async/post.js'] && (_$jscoverage['baidu/async/post.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.ajax.request;</span>","<span class=\"c\">///import baidu.async.Deferred;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25903;&#25345;&#24322;&#27493;&#30340;ajax.post&#23553;&#35013;.</span>","<span class=\"c\"> * @grammar baidu.async.post(url, data)</span>","<span class=\"c\"> * @param {String} url &#35831;&#27714;&#22320;&#22336;.</span>","<span class=\"c\"> * @param {String} data &#35831;&#27714;&#25968;&#25454;.</span>","<span class=\"c\"> * @version 1.3.9 </span>","<span class=\"c\"> * @return {baidu.async.Deferred} Deferred&#23545;&#35937;,&#25903;&#25345;&#38142;&#24335;&#35843;&#29992;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>post <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>url<span class=\"k\">,</span> data<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> deferred <span class=\"k\">=</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>Deferred<span class=\"k\">();</span>","    baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>request<span class=\"k\">(</span>url<span class=\"k\">,</span> <span class=\"k\">{</span>","        method<span class=\"k\">:</span> <span class=\"s\">'POST'</span><span class=\"k\">,</span>","        data<span class=\"k\">:</span> data<span class=\"k\">,</span>","        onsuccess<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>xhr<span class=\"k\">,</span> responseText<span class=\"k\">)</span> <span class=\"k\">{</span>","            deferred<span class=\"k\">.</span>resolve<span class=\"k\">(</span><span class=\"k\">{</span>xhr<span class=\"k\">:</span> xhr<span class=\"k\">,</span> responseText<span class=\"k\">:</span> responseText<span class=\"k\">}</span><span class=\"k\">);</span> ","        <span class=\"k\">}</span><span class=\"k\">,</span>","        onfailure<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>xhr<span class=\"k\">)</span> <span class=\"k\">{</span>","            deferred<span class=\"k\">.</span>reject<span class=\"k\">(</span><span class=\"k\">{</span>xhr<span class=\"k\">:</span> xhr<span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> deferred<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async/when.js'] && (_$jscoverage['baidu/async/when.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.async;</span>","<span class=\"c\">///import baidu.async._isDeferred;</span>","<span class=\"c\">///import baidu.async.Deferred;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20445;&#35777;onResolve&#25110;onReject&#21487;&#20197;&#25353;&#24207;&#25191;&#34892;. &#33509;&#31532;&#19968;&#20010;&#21442;&#25968;&#20026;deferred,&#21017;deferred&#23436;&#25104;&#21518;&#25191;&#34892;.&#21542;&#21017;&#31435;&#21363;&#25191;&#34892;onResolve,&#24182;&#20256;&#20837;&#31532;&#19968;&#20010;&#21442;&#25968;.</span>","<span class=\"c\"> * @grammar baidu.async.when(deferredOrValue, onResolve, onReject)</span>","<span class=\"c\"> * @param {baidu.async.Deferred|*} deferredOrValue deferred&#23454;&#20363;&#25110;&#20219;&#24847;&#20540;.</span>","<span class=\"c\"> * @param {Function} onResolve &#25104;&#21151;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.&#33509;&#31532;&#19968;&#20010;&#21442;&#25968;&#19981;&#26159;Deferred&#23454;&#20363;,&#21017;&#31435;&#21363;&#25191;&#34892;&#27492;&#26041;&#27861;.</span>","<span class=\"c\"> * @param {Function} onReject &#22833;&#36133;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;.</span>","<span class=\"c\"> * @version 1.3.9 </span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#31034;&#20363;&#19968;:&#24322;&#27493;&#35843;&#29992;: baidu.async.when(asyncLoad(), onResolve, onReject).then(nextSuccess, nextFail);</span>","<span class=\"c\"> * &#31034;&#20363;&#20108;:&#21516;&#27493;&#24322;&#27493;&#19981;&#30830;&#23450;&#30340;&#35843;&#29992;: baidu.async.when(syncOrNot(), onResolve, onReject).then(nextSuccess, nextFail);</span>","<span class=\"c\"> * &#31034;&#20363;&#19977;:&#21516;&#27493;&#25509;&#24322;&#27493;&#30340;&#35843;&#29992;: baidu.async.when(sync(), onResolve, onReject).then(asyncSuccess, asyncFail).then(afterAllSuccess, afterAllFail);</span>","<span class=\"c\"> * @return {baidu.async.Deferred} deferred.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>when <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>deferredOrValue<span class=\"k\">,</span> onResolve<span class=\"k\">,</span> onReject<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>_isDeferred<span class=\"k\">(</span>deferredOrValue<span class=\"k\">))</span> <span class=\"k\">{</span>","        deferredOrValue<span class=\"k\">.</span>then<span class=\"k\">(</span>onResolve<span class=\"k\">,</span> onReject<span class=\"k\">);</span>","        <span class=\"k\">return</span> deferredOrValue<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> deferred <span class=\"k\">=</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>Deferred<span class=\"k\">();</span>","    deferred<span class=\"k\">.</span>then<span class=\"k\">(</span>onResolve<span class=\"k\">,</span> onReject<span class=\"k\">).</span>resolve<span class=\"k\">(</span>deferredOrValue<span class=\"k\">);</span>","    <span class=\"k\">return</span> deferred<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/async/_isDeferred.js'] && (_$jscoverage['baidu/async/_isDeferred.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.async;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;object&#26159;&#21542;&#21253;&#21547;Deferred&#20027;&#35201;&#29305;&#24449;.</span>","<span class=\"c\"> * @param {Object} obj &#24453;&#21028;&#23450;object.</span>","<span class=\"c\"> * @return {Boolean} &#21028;&#23450;&#32467;&#26524;, true &#21017;&#35813;object&#31526;&#21512;Deferred&#29305;&#24449;.</span>","<span class=\"c\"> * @private </span>","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>async<span class=\"k\">.</span>_isDeferred <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> isFn <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">;</span>","    <span class=\"k\">return</span> obj <span class=\"k\">&amp;&amp;</span> isFn<span class=\"k\">(</span>obj<span class=\"k\">.</span>success<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> isFn<span class=\"k\">(</span>obj<span class=\"k\">.</span>then<span class=\"k\">)</span>","        <span class=\"k\">&amp;&amp;</span> isFn<span class=\"k\">(</span>obj<span class=\"k\">.</span>fail<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> isFn<span class=\"k\">(</span>obj<span class=\"k\">.</span>cancel<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/chrome.js'] && (_$jscoverage['baidu/browser/chrome.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;chrome&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * @grammar baidu.browser.chrome</span>","<span class=\"c\"> * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.safari,baidu.browser.opera   </span>","<span class=\"c\"> * @property chrome chrome&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @return {Number} chrome&#29256;&#26412;&#21495;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>chrome <span class=\"k\">=</span> <span class=\"s\">/chrome\\/(\\d+\\.\\d+)/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">+</span> RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span><span class=\"k\">]</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/firefox.js'] && (_$jscoverage['baidu/browser/firefox.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;firefox&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * @property firefox firefox&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @grammar baidu.browser.firefox</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.browser.ie,baidu.browser.safari,baidu.browser.opera,baidu.browser.chrome</span>","<span class=\"c\"> * @return {Number} firefox&#29256;&#26412;&#21495;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>firefox <span class=\"k\">=</span> <span class=\"s\">/firefox\\/(\\d+\\.\\d+)/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">+</span> RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span><span class=\"k\">]</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/ie.js'] && (_$jscoverage['baidu/browser/ie.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">//IE 8&#19979;&#65292;&#20197;documentMode&#20026;&#20934;</span>","<span class=\"c\">//&#22312;&#30334;&#24230;&#27169;&#26495;&#20013;&#65292;&#21487;&#33021;&#20250;&#26377;$&#65292;&#38450;&#27490;&#20914;&#31361;&#65292;&#23558;$1 &#20889;&#25104; \\x241</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;ie&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * @name baidu.browser.ie</span>","<span class=\"c\"> * @field</span>","<span class=\"c\"> * @grammar baidu.browser.ie</span>","<span class=\"c\"> * @returns {Number} IE&#29256;&#26412;&#21495;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">=</span> baidu<span class=\"k\">.</span>ie <span class=\"k\">=</span> <span class=\"s\">/msie (\\d+\\.\\d+)/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>documentMode <span class=\"k\">||</span> <span class=\"k\">+</span> RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span><span class=\"k\">])</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/isGecko.js'] && (_$jscoverage['baidu/browser/isGecko.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser/isGecko.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;gecko&#20869;&#26680;</span>","<span class=\"c\"> * @property isGecko </span>","<span class=\"c\"> * @grammar baidu.browser.isGecko</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.browser.isWebkit</span>","<span class=\"c\"> * @returns {Boolean} &#24067;&#23572;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>isGecko <span class=\"k\">=</span> <span class=\"s\">/gecko/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"s\">/like gecko/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/browser/isStrict.js'] && (_$jscoverage['baidu/browser/isStrict.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser/isStrict.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20005;&#26684;&#26631;&#20934;&#30340;&#28210;&#26579;&#27169;&#24335;</span>","<span class=\"c\"> * @property isStrict </span>","<span class=\"c\"> * @grammar baidu.browser.isStrict</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {Boolean} &#24067;&#23572;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>isStrict <span class=\"k\">=</span> document<span class=\"k\">.</span>compatMode <span class=\"k\">==</span> <span class=\"s\">\"CSS1Compat\"</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/isWebkit.js'] && (_$jscoverage['baidu/browser/isWebkit.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser/isWebkit.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;webkit&#20869;&#26680;</span>","<span class=\"c\"> * @property isWebkit </span>","<span class=\"c\"> * @grammar baidu.browser.isWebkit</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.browser.isGecko</span>","<span class=\"c\"> * @returns {Boolean} &#24067;&#23572;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>isWebkit <span class=\"k\">=</span> <span class=\"s\">/webkit/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/browser/maxthon.js'] && (_$jscoverage['baidu/browser/maxthon.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser/maxthon.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"k\">try</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/(\\d+\\.\\d+)/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>external<span class=\"k\">.</span>max_version<span class=\"k\">))</span> <span class=\"k\">{</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;maxthon&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * @property maxthon maxthon&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @grammar baidu.browser.maxthon</span>","<span class=\"c\"> * @see baidu.browser.ie</span>","<span class=\"c\"> * @returns {Number} maxthon&#29256;&#26412;&#21495;</span>","<span class=\"c\"> */</span>","        baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>maxthon <span class=\"k\">=</span> <span class=\"k\">+</span> RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>"]);
_$jscoverage['baidu/browser/opera.js'] && (_$jscoverage['baidu/browser/opera.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/browser/opera.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;opera&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * @property opera opera&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @grammar baidu.browser.opera</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.safari,baidu.browser.chrome</span>","<span class=\"c\"> * @returns {Number} opera&#29256;&#26412;&#21495;</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * opera &#20174;10&#24320;&#22987;&#19981;&#26159;&#29992;opera&#21518;&#38754;&#30340;&#23383;&#31526;&#20018;&#36827;&#34892;&#29256;&#26412;&#30340;&#21028;&#26029;</span>","<span class=\"c\"> * &#22312;Browser identification&#26368;&#21518;&#28155;&#21152;Version + &#25968;&#23383;&#36827;&#34892;&#29256;&#26412;&#26631;&#35782;</span>","<span class=\"c\"> * opera&#21518;&#38754;&#30340;&#25968;&#23383;&#20445;&#25345;&#22312;9.80&#19981;&#21464;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>opera <span class=\"k\">=</span> <span class=\"s\">/opera(\\/| )(\\d+(\\.\\d+)?)(.+?(version\\/(\\d+(\\.\\d+)?)))?/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">)</span> <span class=\"k\">?</span>  <span class=\"k\">+</span> <span class=\"k\">(</span> RegExp<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">246\"</span><span class=\"k\">]</span> <span class=\"k\">||</span> RegExp<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">242\"</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>"]);
_$jscoverage['baidu/browser/safari.js'] && (_$jscoverage['baidu/browser/safari.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser;</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> ua <span class=\"k\">=</span> navigator<span class=\"k\">.</span>userAgent<span class=\"k\">;</span>","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#20860;&#23481;&#27983;&#35272;&#22120;&#20026;safari&#25110;ipad,&#20854;&#20013;,&#19968;&#27573;&#20856;&#22411;&#30340;ipad UA &#22914;&#19979;:</span>","<span class=\"c\">     * Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10</span>","<span class=\"c\">     */</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21028;&#26029;&#26159;&#21542;&#20026;safari&#27983;&#35272;&#22120;, &#25903;&#25345;ipad</span>","<span class=\"c\">     * @property safari safari&#29256;&#26412;&#21495;</span>","<span class=\"c\">     * @grammar baidu.browser.safari</span>","<span class=\"c\">     * @meta standard</span>","<span class=\"c\">     * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.opera,baidu.browser.chrome   </span>","<span class=\"c\">     */</span>","    baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>safari <span class=\"k\">=</span> <span class=\"s\">/(\\d+\\.\\d)?(?:\\.\\d)?\\s+safari\\/?(\\d+\\.\\d+)?/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>ua<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"s\">/chrome/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>ua<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">+</span> <span class=\"k\">(</span>RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span><span class=\"k\">]</span> <span class=\"k\">||</span> RegExp<span class=\"k\">[</span><span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">242'</span><span class=\"k\">])</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/cookie/get.js'] && (_$jscoverage['baidu/cookie/get.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/get.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie.getRaw;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;cookie&#30340;&#20540;&#65292;&#29992;decodeURIComponent&#36827;&#34892;&#35299;&#30721;</span>","<span class=\"c\"> * @name baidu.cookie.get</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.cookie.get(key)</span>","<span class=\"c\"> * @param {string} key &#38656;&#35201;&#33719;&#21462;Cookie&#30340;&#38190;&#21517;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &lt;b&gt;&#27880;&#24847;&#65306;&lt;/b&gt;&#35813;&#26041;&#27861;&#20250;&#23545;cookie&#20540;&#36827;&#34892;decodeURIComponent&#35299;&#30721;&#12290;&#22914;&#26524;&#24819;&#33719;&#24471;cookie&#28304;&#23383;&#31526;&#20018;&#65292;&#35831;&#20351;&#29992;getRaw&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.cookie.getRaw,baidu.cookie.set</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string|null} cookie&#30340;&#20540;&#65292;&#33719;&#21462;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>get <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> value <span class=\"k\">=</span> baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>getRaw<span class=\"k\">(</span>key<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'string'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        value <span class=\"k\">=</span> decodeURIComponent<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">return</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie/getRaw.js'] && (_$jscoverage['baidu/cookie/getRaw.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/getRaw.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie._isValidKey;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;cookie&#30340;&#20540;&#65292;&#19981;&#23545;&#20540;&#36827;&#34892;&#35299;&#30721;</span>","<span class=\"c\"> * @name baidu.cookie.getRaw</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.cookie.getRaw(key)</span>","<span class=\"c\"> * @param {string} key &#38656;&#35201;&#33719;&#21462;Cookie&#30340;&#38190;&#21517;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.cookie.get,baidu.cookie.setRaw</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string|null} &#33719;&#21462;&#30340;Cookie&#20540;&#65292;&#33719;&#21462;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>getRaw <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>_isValidKey<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"(^| )\"</span> <span class=\"k\">+</span> key <span class=\"k\">+</span> <span class=\"s\">\"=([^;]*)(;|</span><span class=\"t\">\\x</span><span class=\"s\">24)\"</span><span class=\"k\">),</span>","            result <span class=\"k\">=</span> reg<span class=\"k\">.</span>exec<span class=\"k\">(</span>document<span class=\"k\">.</span>cookie<span class=\"k\">);</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>result<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> result<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie/remove.js'] && (_$jscoverage['baidu/cookie/remove.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/remove.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie.setRaw;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21024;&#38500;cookie&#30340;&#20540;</span>","<span class=\"c\"> * @name baidu.cookie.remove</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.cookie.remove(key, options)</span>","<span class=\"c\"> * @param {string} key &#38656;&#35201;&#21024;&#38500;Cookie&#30340;&#38190;&#21517;</span>","<span class=\"c\"> * @param {Object} options &#38656;&#35201;&#21024;&#38500;&#30340;cookie&#23545;&#24212;&#30340; path domain &#31561;&#20540;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    options<span class=\"k\">.</span>expires <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","    baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>setRaw<span class=\"k\">(</span>key<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie/set.js'] && (_$jscoverage['baidu/cookie/set.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/set.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie.setRaw;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;cookie&#30340;&#20540;&#65292;&#29992;encodeURIComponent&#36827;&#34892;&#32534;&#30721;</span>","<span class=\"c\"> * @name baidu.cookie.set</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.cookie.set(key, value[, options])</span>","<span class=\"c\"> * @param {string} key &#38656;&#35201;&#35774;&#32622;Cookie&#30340;&#38190;&#21517;</span>","<span class=\"c\"> * @param {string} value &#38656;&#35201;&#35774;&#32622;Cookie&#30340;&#20540;</span>","<span class=\"c\"> * @param {Object} [options] &#35774;&#32622;Cookie&#30340;&#20854;&#20182;&#21487;&#36873;&#21442;&#25968;</span>","<span class=\"c\"> * @config {string} [path] cookie&#36335;&#24452;</span>","<span class=\"c\"> * @config {Date|number} [expires] cookie&#36807;&#26399;&#26102;&#38388;,&#22914;&#26524;&#31867;&#22411;&#26159;&#25968;&#23383;&#30340;&#35805;, &#21333;&#20301;&#26159;&#27627;&#31186;</span>","<span class=\"c\"> * @config {string} [domain] cookie&#22495;&#21517;</span>","<span class=\"c\"> * @config {string} [secure] cookie&#26159;&#21542;&#23433;&#20840;&#20256;&#36755;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">1. &lt;b&gt;&#27880;&#24847;&#65306;&lt;/b&gt;&#35813;&#26041;&#27861;&#20250;&#23545;cookie&#20540;&#36827;&#34892;encodeURIComponent&#32534;&#30721;&#12290;&#22914;&#26524;&#24819;&#35774;&#32622;cookie&#28304;&#23383;&#31526;&#20018;&#65292;&#35831;&#20351;&#29992;setRaw&#26041;&#27861;&#12290;&lt;br&gt;&lt;br&gt;</span>","<span class=\"c\">2. &lt;b&gt;options&#21442;&#25968;&#21253;&#25324;&#65306;&lt;/b&gt;&lt;br&gt;</span>","<span class=\"c\">path:cookie&#36335;&#24452;&lt;br&gt;</span>","<span class=\"c\">expires:cookie&#36807;&#26399;&#26102;&#38388;&#65292;Number&#22411;&#65292;&#21333;&#20301;&#20026;&#27627;&#31186;&#12290;&lt;br&gt;</span>","<span class=\"c\">domain:cookie&#22495;&#21517;&lt;br&gt;</span>","<span class=\"c\">secure:cookie&#26159;&#21542;&#23433;&#20840;&#20256;&#36755;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.cookie.setRaw,baidu.cookie.get</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>set <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>setRaw<span class=\"k\">(</span>key<span class=\"k\">,</span> encodeURIComponent<span class=\"k\">(</span>value<span class=\"k\">),</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie/setRaw.js'] && (_$jscoverage['baidu/cookie/setRaw.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/setRaw.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie._isValidKey;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;cookie&#30340;&#20540;&#65292;&#19981;&#23545;&#20540;&#36827;&#34892;&#32534;&#30721;</span>","<span class=\"c\"> * @name baidu.cookie.setRaw</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.cookie.setRaw(key, value[, options])</span>","<span class=\"c\"> * @param {string} key &#38656;&#35201;&#35774;&#32622;Cookie&#30340;&#38190;&#21517;</span>","<span class=\"c\"> * @param {string} value &#38656;&#35201;&#35774;&#32622;Cookie&#30340;&#20540;</span>","<span class=\"c\"> * @param {Object} [options] &#35774;&#32622;Cookie&#30340;&#20854;&#20182;&#21487;&#36873;&#21442;&#25968;</span>","<span class=\"c\"> * @config {string} [path] cookie&#36335;&#24452;</span>","<span class=\"c\"> * @config {Date|number} [expires] cookie&#36807;&#26399;&#26102;&#38388;,&#22914;&#26524;&#31867;&#22411;&#26159;&#25968;&#23383;&#30340;&#35805;, &#21333;&#20301;&#26159;&#27627;&#31186;</span>","<span class=\"c\"> * @config {string} [domain] cookie&#22495;&#21517;</span>","<span class=\"c\"> * @config {string} [secure] cookie&#26159;&#21542;&#23433;&#20840;&#20256;&#36755;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&lt;b&gt;options&#21442;&#25968;&#21253;&#25324;&#65306;&lt;/b&gt;&lt;br&gt;</span>","<span class=\"c\">path:cookie&#36335;&#24452;&lt;br&gt;</span>","<span class=\"c\">expires:cookie&#36807;&#26399;&#26102;&#38388;&#65292;Number&#22411;&#65292;&#21333;&#20301;&#20026;&#27627;&#31186;&#12290;&lt;br&gt;</span>","<span class=\"c\">domain:cookie&#22495;&#21517;&lt;br&gt;</span>","<span class=\"c\">secure:cookie&#26159;&#21542;&#23433;&#20840;&#20256;&#36755;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.cookie.set,baidu.cookie.getRaw</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>setRaw <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>_isValidKey<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"c\">//options.path = options.path || \"/\"; // meizz 20100402 &#35774;&#23450;&#19968;&#20010;&#21021;&#22987;&#20540;&#65292;&#26041;&#20415;&#21518;&#32493;&#30340;&#25805;&#20316;</span>","    <span class=\"c\">//berg 20100409 &#21435;&#25481;&#65292;&#22240;&#20026;&#29992;&#25143;&#24076;&#26395;&#40664;&#35748;&#30340;path&#26159;&#24403;&#21069;&#36335;&#24452;&#65292;&#36825;&#26679;&#21644;&#27983;&#35272;&#22120;&#23545;cookie&#30340;&#23450;&#20041;&#20063;&#26159;&#19968;&#33268;&#30340;</span>","    ","    <span class=\"c\">// &#35745;&#31639;cookie&#36807;&#26399;&#26102;&#38388;</span>","    <span class=\"k\">var</span> expires <span class=\"k\">=</span> options<span class=\"k\">.</span>expires<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'number'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> options<span class=\"k\">.</span>expires<span class=\"k\">)</span> <span class=\"k\">{</span>","        expires <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">();</span>","        expires<span class=\"k\">.</span>setTime<span class=\"k\">(</span>expires<span class=\"k\">.</span>getTime<span class=\"k\">()</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>expires<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    document<span class=\"k\">.</span>cookie <span class=\"k\">=</span>","        key <span class=\"k\">+</span> <span class=\"s\">\"=\"</span> <span class=\"k\">+</span> value","        <span class=\"k\">+</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>path <span class=\"k\">?</span> <span class=\"s\">\"; path=\"</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>path <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span>","        <span class=\"k\">+</span> <span class=\"k\">(</span>expires <span class=\"k\">?</span> <span class=\"s\">\"; expires=\"</span> <span class=\"k\">+</span> expires<span class=\"k\">.</span>toGMTString<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span>","        <span class=\"k\">+</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>domain <span class=\"k\">?</span> <span class=\"s\">\"; domain=\"</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>domain <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span>","        <span class=\"k\">+</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>secure <span class=\"k\">?</span> <span class=\"s\">\"; secure\"</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span> ","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/cookie/_isValidKey.js'] && (_$jscoverage['baidu/cookie/_isValidKey.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/cookie/_isValidKey.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.cookie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#39564;&#35777;&#23383;&#31526;&#20018;&#26159;&#21542;&#21512;&#27861;&#30340;cookie&#38190;&#21517;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {string} source &#38656;&#35201;&#36941;&#21382;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @return {boolean} &#26159;&#21542;&#21512;&#27861;&#30340;cookie&#38190;&#21517;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>cookie<span class=\"k\">.</span>_isValidKey <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// http://www.w3.org/Protocols/rfc2109/rfc2109</span>","    <span class=\"c\">// Syntax:  General</span>","    <span class=\"c\">// The two state management headers, Set-Cookie and Cookie, have common</span>","    <span class=\"c\">// syntactic properties involving attribute-value pairs.  The following</span>","    <span class=\"c\">// grammar uses the notation, and tokens DIGIT (decimal digits) and</span>","    <span class=\"c\">// token (informally, a sequence of non-special, non-white space</span>","    <span class=\"c\">// characters) from the HTTP/1.1 specification [RFC 2068] to describe</span>","    <span class=\"c\">// their syntax.</span>","    <span class=\"c\">// av-pairs   = av-pair *(\";\" av-pair)</span>","    <span class=\"c\">// av-pair    = attr [\"=\" value] ; optional value</span>","    <span class=\"c\">// attr       = token</span>","    <span class=\"c\">// value      = word</span>","    <span class=\"c\">// word       = token | quoted-string</span>","    ","    <span class=\"c\">// http://www.ietf.org/rfc/rfc2068.txt</span>","    <span class=\"c\">// token      = 1*&lt;any CHAR except CTLs or tspecials&gt;</span>","    <span class=\"c\">// CHAR       = &lt;any US-ASCII character (octets 0 - 127)&gt;</span>","    <span class=\"c\">// CTL        = &lt;any US-ASCII control character</span>","    <span class=\"c\">//              (octets 0 - 31) and DEL (127)&gt;</span>","    <span class=\"c\">// tspecials  = \"(\" | \")\" | \"&lt;\" | \"&gt;\" | \"@\"</span>","    <span class=\"c\">//              | \",\" | \";\" | \":\" | \"\\\" | &lt;\"&gt;</span>","    <span class=\"c\">//              | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"</span>","    <span class=\"c\">//              | \"{\" | \"}\" | SP | HT</span>","    <span class=\"c\">// SP         = &lt;US-ASCII SP, space (32)&gt;</span>","    <span class=\"c\">// HT         = &lt;US-ASCII HT, horizontal-tab (9)&gt;</span>","        ","    <span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"^[^</span><span class=\"t\">\\\\</span><span class=\"s\">x00-</span><span class=\"t\">\\\\</span><span class=\"s\">x20</span><span class=\"t\">\\\\</span><span class=\"s\">x7f</span><span class=\"t\">\\\\</span><span class=\"s\">(</span><span class=\"t\">\\\\</span><span class=\"s\">)&lt;&gt;@,;:</span><span class=\"t\">\\\\\\\\\\\\\\\"\\\\</span><span class=\"s\">[</span><span class=\"t\">\\\\</span><span class=\"s\">]</span><span class=\"t\">\\\\</span><span class=\"s\">?=</span><span class=\"t\">\\\\</span><span class=\"s\">{</span><span class=\"t\">\\\\</span><span class=\"s\">}</span><span class=\"t\">\\\\</span><span class=\"s\">/</span><span class=\"t\">\\\\</span><span class=\"s\">u0080-</span><span class=\"t\">\\\\</span><span class=\"s\">uffff]+</span><span class=\"t\">\\x</span><span class=\"s\">24\"</span><span class=\"k\">)).</span>test<span class=\"k\">(</span>key<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/date/format.js'] && (_$jscoverage['baidu/date/format.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/date/format.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/04</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.date;</span>","<span class=\"c\">///import baidu.number.pad;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#26085;&#26399;&#23545;&#35937;&#36827;&#34892;&#26684;&#24335;&#21270;</span>","<span class=\"c\"> * @name baidu.date.format</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.date.format(source, pattern)</span>","<span class=\"c\"> * @param {Date} source &#30446;&#26631;&#26085;&#26399;&#23545;&#35937;</span>","<span class=\"c\"> * @param {string} pattern &#26085;&#26399;&#26684;&#24335;&#21270;&#35268;&#21017;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&lt;b&gt;&#26684;&#24335;&#34920;&#36798;&#24335;&#65292;&#21464;&#37327;&#21547;&#20041;&#65306;&lt;/b&gt;&lt;br&gt;&lt;br&gt;</span>","<span class=\"c\">hh: &#24102; 0 &#34917;&#40784;&#30340;&#20004;&#20301; 12 &#36827;&#21046;&#26102;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">h: &#19981;&#24102; 0 &#34917;&#40784;&#30340; 12 &#36827;&#21046;&#26102;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">HH: &#24102; 0 &#34917;&#40784;&#30340;&#20004;&#20301; 24 &#36827;&#21046;&#26102;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">H: &#19981;&#24102; 0 &#34917;&#40784;&#30340; 24 &#36827;&#21046;&#26102;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">mm: &#24102; 0 &#34917;&#40784;&#20004;&#20301;&#20998;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">m: &#19981;&#24102; 0 &#34917;&#40784;&#20998;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">ss: &#24102; 0 &#34917;&#40784;&#20004;&#20301;&#31186;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">s: &#19981;&#24102; 0 &#34917;&#40784;&#31186;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">yyyy: &#24102; 0 &#34917;&#40784;&#30340;&#22235;&#20301;&#24180;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">yy: &#24102; 0 &#34917;&#40784;&#30340;&#20004;&#20301;&#24180;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">MM: &#24102; 0 &#34917;&#40784;&#30340;&#20004;&#20301;&#26376;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">M: &#19981;&#24102; 0 &#34917;&#40784;&#30340;&#26376;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">dd: &#24102; 0 &#34917;&#40784;&#30340;&#20004;&#20301;&#26085;&#34920;&#31034;&lt;br&gt;</span>","<span class=\"c\">d: &#19981;&#24102; 0 &#34917;&#40784;&#30340;&#26085;&#34920;&#31034;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#26684;&#24335;&#21270;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>date<span class=\"k\">.</span>format <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> pattern<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'string'</span> <span class=\"k\">!=</span> <span class=\"k\">typeof</span> pattern<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> source<span class=\"k\">.</span>toString<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> replacer<span class=\"k\">(</span>patternPart<span class=\"k\">,</span> result<span class=\"k\">)</span> <span class=\"k\">{</span>","        pattern <span class=\"k\">=</span> pattern<span class=\"k\">.</span>replace<span class=\"k\">(</span>patternPart<span class=\"k\">,</span> result<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> pad     <span class=\"k\">=</span> baidu<span class=\"k\">.</span>number<span class=\"k\">.</span>pad<span class=\"k\">,</span>","        year    <span class=\"k\">=</span> source<span class=\"k\">.</span>getFullYear<span class=\"k\">(),</span>","        month   <span class=\"k\">=</span> source<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        date2   <span class=\"k\">=</span> source<span class=\"k\">.</span>getDate<span class=\"k\">(),</span>","        hours   <span class=\"k\">=</span> source<span class=\"k\">.</span>getHours<span class=\"k\">(),</span>","        minutes <span class=\"k\">=</span> source<span class=\"k\">.</span>getMinutes<span class=\"k\">(),</span>","        seconds <span class=\"k\">=</span> source<span class=\"k\">.</span>getSeconds<span class=\"k\">();</span>","","    replacer<span class=\"k\">(</span><span class=\"s\">/yyyy/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>year<span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/yy/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>year<span class=\"k\">.</span>toString<span class=\"k\">().</span>slice<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">),</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/MM/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>month<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/M/g</span><span class=\"k\">,</span> month<span class=\"k\">);</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/dd/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>date2<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/d/g</span><span class=\"k\">,</span> date2<span class=\"k\">);</span>","","    replacer<span class=\"k\">(</span><span class=\"s\">/HH/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>hours<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/H/g</span><span class=\"k\">,</span> hours<span class=\"k\">);</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/hh/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>hours <span class=\"k\">%</span> <span class=\"s\">12</span><span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/h/g</span><span class=\"k\">,</span> hours <span class=\"k\">%</span> <span class=\"s\">12</span><span class=\"k\">);</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/mm/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>minutes<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/m/g</span><span class=\"k\">,</span> minutes<span class=\"k\">);</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/ss/g</span><span class=\"k\">,</span> pad<span class=\"k\">(</span>seconds<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","    replacer<span class=\"k\">(</span><span class=\"s\">/s/g</span><span class=\"k\">,</span> seconds<span class=\"k\">);</span>","","    <span class=\"k\">return</span> pattern<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/date/parse.js'] && (_$jscoverage['baidu/date/parse.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/date/parse.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/04</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.date;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#23383;&#31526;&#20018;&#36716;&#25442;&#25104;&#26085;&#26399;&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.date.parse</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.date.parse(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&#23545;&#20110;&#30446;&#26631;&#23383;&#31526;&#20018;&#65292;&#19979;&#38754;&#36825;&#20123;&#35268;&#21017;&#20915;&#23450;&#20102; parse &#26041;&#27861;&#33021;&#22815;&#25104;&#21151;&#22320;&#35299;&#26512;&#65306; &lt;br&gt;</span>","<span class=\"c\">&lt;ol&gt;</span>","<span class=\"c\">&lt;li&gt;&#30701;&#26085;&#26399;&#21487;&#20197;&#20351;&#29992;&#8220;/&#8221;&#25110;&#8220;-&#8221;&#20316;&#20026;&#26085;&#26399;&#20998;&#38548;&#31526;&#65292;&#20294;&#26159;&#24517;&#39035;&#29992;&#26376;/&#26085;/&#24180;&#30340;&#26684;&#24335;&#26469;&#34920;&#31034;&#65292;&#20363;&#22914;\"7/20/96\"&#12290;&lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#20197; \"July 10 1995\" &#24418;&#24335;&#34920;&#31034;&#30340;&#38271;&#26085;&#26399;&#20013;&#30340;&#24180;&#12289;&#26376;&#12289;&#26085;&#21487;&#20197;&#25353;&#20219;&#20309;&#39034;&#24207;&#25490;&#21015;&#65292;&#24180;&#20221;&#20540;&#21487;&#20197;&#29992; 2 &#20301;&#25968;&#23383;&#34920;&#31034;&#20063;&#21487;&#20197;&#29992; 4 &#20301;&#25968;&#23383;&#34920;&#31034;&#12290;&#22914;&#26524;&#20351;&#29992; 2 &#20301;&#25968;&#23383;&#26469;&#34920;&#31034;&#24180;&#20221;&#65292;&#37027;&#20040;&#35813;&#24180;&#20221;&#24517;&#39035;&#22823;&#20110;&#25110;&#31561;&#20110; 70&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#25324;&#21495;&#20013;&#30340;&#20219;&#20309;&#25991;&#26412;&#37117;&#34987;&#35270;&#20026;&#27880;&#37322;&#12290;&#36825;&#20123;&#25324;&#21495;&#21487;&#20197;&#23884;&#22871;&#20351;&#29992;&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#36887;&#21495;&#21644;&#31354;&#26684;&#34987;&#35270;&#20026;&#20998;&#38548;&#31526;&#12290;&#20801;&#35768;&#20351;&#29992;&#22810;&#20010;&#20998;&#38548;&#31526;&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#26376;&#21644;&#26085;&#30340;&#21517;&#31216;&#24517;&#39035;&#20855;&#26377;&#20004;&#20010;&#25110;&#20004;&#20010;&#20197;&#19978;&#30340;&#23383;&#31526;&#12290;&#22914;&#26524;&#20004;&#20010;&#23383;&#31526;&#25152;&#32452;&#25104;&#30340;&#21517;&#31216;&#19981;&#26159;&#29420;&#19968;&#26080;&#20108;&#30340;&#65292;&#37027;&#20040;&#35813;&#21517;&#31216;&#23601;&#34987;&#35299;&#26512;&#25104;&#26368;&#21518;&#19968;&#20010;&#31526;&#21512;&#26465;&#20214;&#30340;&#26376;&#25110;&#26085;&#12290;&#20363;&#22914;&#65292;\"Ju\" &#34987;&#35299;&#37322;&#20026;&#19971;&#26376;&#32780;&#19981;&#26159;&#20845;&#26376;&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#22312;&#25152;&#25552;&#20379;&#30340;&#26085;&#26399;&#20013;&#65292;&#22914;&#26524;&#25152;&#25351;&#23450;&#30340;&#26143;&#26399;&#20960;&#30340;&#20540;&#19982;&#25353;&#29031;&#35813;&#26085;&#26399;&#20013;&#21097;&#20313;&#37096;&#20998;&#25152;&#30830;&#23450;&#30340;&#26143;&#26399;&#20960;&#30340;&#20540;&#19981;&#31526;&#21512;&#65292;&#37027;&#20040;&#35813;&#25351;&#23450;&#20540;&#23601;&#20250;&#34987;&#24573;&#30053;&#12290;&#20363;&#22914;&#65292;&#23613;&#31649; 1996 &#24180; 11 &#26376; 9 &#26085;&#23454;&#38469;&#19978;&#26159;&#26143;&#26399;&#20116;&#65292;\"Tuesday November 9 1996\" &#20063;&#36824;&#26159;&#21487;&#20197;&#34987;&#25509;&#21463;&#24182;&#36827;&#34892;&#35299;&#26512;&#30340;&#12290;&#20294;&#26159;&#32467;&#26524; date &#23545;&#35937;&#20013;&#21253;&#21547;&#30340;&#26159; \"Friday November 9 1996\"&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;JScript &#22788;&#29702;&#25152;&#26377;&#30340;&#26631;&#20934;&#26102;&#21306;&#65292;&#20197;&#21450;&#20840;&#29699;&#26631;&#20934;&#26102;&#38388; (UTC) &#21644;&#26684;&#26519;&#23041;&#27835;&#26631;&#20934;&#26102;&#38388; (GMT)&#12290;&lt;/li&gt; </span>","<span class=\"c\">&lt;li&gt;&#23567;&#26102;&#12289;&#20998;&#38047;&#12289;&#21644;&#31186;&#38047;&#20043;&#38388;&#29992;&#20882;&#21495;&#20998;&#38548;&#65292;&#23613;&#31649;&#19981;&#26159;&#36825;&#19977;&#39033;&#37117;&#38656;&#35201;&#25351;&#26126;&#12290;\"10:\"&#12289;\"10:11\"&#12289;&#21644; \"10:11:12\" &#37117;&#26159;&#26377;&#25928;&#30340;&#12290; &lt;/li&gt;</span>","<span class=\"c\">&lt;li&gt;&#22914;&#26524;&#20351;&#29992; 24 &#23567;&#26102;&#35745;&#26102;&#30340;&#26102;&#38047;&#65292;&#37027;&#20040;&#20026;&#20013;&#21320; 12 &#28857;&#20043;&#21518;&#30340;&#26102;&#38388;&#25351;&#23450; \"PM\" &#26159;&#38169;&#35823;&#30340;&#12290;&#20363;&#22914; \"23:15 PM\" &#23601;&#26159;&#38169;&#35823;&#30340;&#12290;&lt;/li&gt; </span>","<span class=\"c\">&lt;li&gt;&#21253;&#21547;&#26080;&#25928;&#26085;&#26399;&#30340;&#23383;&#31526;&#20018;&#26159;&#38169;&#35823;&#30340;&#12290;&#20363;&#22914;&#65292;&#19968;&#20010;&#21253;&#21547;&#26377;&#20004;&#20010;&#24180;&#20221;&#25110;&#20004;&#20010;&#26376;&#20221;&#30340;&#23383;&#31526;&#20018;&#23601;&#26159;&#38169;&#35823;&#30340;&#12290;&lt;/li&gt;</span>","<span class=\"c\">&lt;/ol&gt;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Date} &#36716;&#25442;&#21518;&#30340;&#26085;&#26399;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>date<span class=\"k\">.</span>parse <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"^</span><span class=\"t\">\\\\</span><span class=\"s\">d+(</span><span class=\"t\">\\\\</span><span class=\"s\">-|</span><span class=\"t\">\\\\</span><span class=\"s\">/)</span><span class=\"t\">\\\\</span><span class=\"s\">d+(</span><span class=\"t\">\\\\</span><span class=\"s\">-|</span><span class=\"t\">\\\\</span><span class=\"s\">/)</span><span class=\"t\">\\\\</span><span class=\"s\">d+</span><span class=\"t\">\\x</span><span class=\"s\">24\"</span><span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'string'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>reg<span class=\"k\">.</span>test<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">||</span> isNaN<span class=\"k\">(</span>Date<span class=\"k\">.</span>parse<span class=\"k\">(</span>source<span class=\"k\">)))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> d <span class=\"k\">=</span> source<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/ |T/</span><span class=\"k\">),</span>","                d1 <span class=\"k\">=</span> d<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> ","                        <span class=\"k\">?</span> d<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">/[^\\d]/</span><span class=\"k\">)</span> ","                        <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">],</span>","                d0 <span class=\"k\">=</span> d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">/[^\\d]/</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>d0<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">,</span> ","                            d0<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span> ","                            d0<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">,</span> ","                            d1<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">,</span> ","                            d1<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">,</span> ","                            d1<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>source<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">new</span> Date<span class=\"k\">();</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/addClass.js'] && (_$jscoverage['baidu/dom/addClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All right reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/addClass.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/2</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.string.trim;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#20803;&#32032;&#28155;&#21152;className</span>","<span class=\"c\"> * @name baidu.dom.addClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.addClass(element, className)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} className &#35201;&#28155;&#21152;&#30340;className&#65292;&#20801;&#35768;&#21516;&#26102;&#28155;&#21152;&#22810;&#20010;class&#65292;&#20013;&#38388;&#20351;&#29992;&#31354;&#30333;&#31526;&#20998;&#38548;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#20351;&#29992;&#32773;&#24212;&#20445;&#35777;&#25552;&#20379;&#30340;className&#21512;&#27861;&#24615;&#65292;&#19981;&#24212;&#21253;&#21547;&#19981;&#21512;&#27861;&#23383;&#31526;&#65292;className&#21512;&#27861;&#23383;&#31526;&#21442;&#32771;&#65306;http://www.w3.org/TR/CSS2/syndata.html&#12290;</span>","<span class=\"c\"> * @shortcut addClass</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.removeClass</span>","<span class=\"c\"> * \t</span>","<span class=\"c\"> * \t            </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>addClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> classArray <span class=\"k\">=</span> className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/\\s+/</span><span class=\"k\">),</span>","        result <span class=\"k\">=</span> element<span class=\"k\">.</span>className<span class=\"k\">,</span>","        classMatch <span class=\"k\">=</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> result <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">,</span>","        i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        l <span class=\"k\">=</span> classArray<span class=\"k\">.</span>length<span class=\"k\">;</span>","","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","         <span class=\"k\">if</span> <span class=\"k\">(</span> classMatch<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> classArray<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","             result <span class=\"k\">+=</span> <span class=\"k\">(</span>result <span class=\"k\">?</span> <span class=\"s\">' '</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span> classArray<span class=\"k\">[</span>i<span class=\"k\">];</span>","         <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    element<span class=\"k\">.</span>className <span class=\"k\">=</span> result<span class=\"k\">;</span>","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>addClass <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>addClass<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/children.js'] && (_$jscoverage['baidu/dom/children.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/children.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#30452;&#25509;&#23376;&#20803;&#32032;&#21015;&#34920;</span>","<span class=\"c\"> * @name baidu.dom.children</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.children(element)</span>","<span class=\"c\"> * @param {HTMLElement|String} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#30446;&#26631;&#20803;&#32032;&#30340;&#23376;&#20803;&#32032;&#21015;&#34920;&#65292;&#27809;&#26377;&#23376;&#20803;&#32032;&#26102;&#36820;&#22238;&#31354;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>children <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> children <span class=\"k\">=</span> <span class=\"k\">[],</span> tmpEl <span class=\"k\">=</span> element<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> tmpEl<span class=\"k\">;</span> tmpEl <span class=\"k\">=</span> tmpEl<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>tmpEl<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            children<span class=\"k\">.</span>push<span class=\"k\">(</span>tmpEl<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> children<span class=\"k\">;</span>    ","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/contains.js'] && (_$jscoverage['baidu/dom/contains.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/contains.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#19968;&#20010;&#20803;&#32032;&#26159;&#21542;&#21253;&#21547;&#21478;&#19968;&#20010;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.contains</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.contains(container, contained)</span>","<span class=\"c\"> * @param {HTMLElement|string} container &#21253;&#21547;&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {HTMLElement|string} contained &#34987;&#21253;&#21547;&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.intersect</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} contained&#20803;&#32032;&#26159;&#21542;&#34987;&#21253;&#21547;&#20110;container&#20803;&#32032;&#30340;DOM&#33410;&#28857;&#19978;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>container<span class=\"k\">,</span> contained<span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"k\">var</span> g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">;</span>","    container <span class=\"k\">=</span> g<span class=\"k\">(</span>container<span class=\"k\">);</span>","    contained <span class=\"k\">=</span> g<span class=\"k\">(</span>contained<span class=\"k\">);</span>","","    <span class=\"c\">//fixme: &#26080;&#27861;&#22788;&#29702;&#25991;&#26412;&#33410;&#28857;&#30340;&#24773;&#20917;(IE)</span>","    <span class=\"k\">return</span> container<span class=\"k\">.</span>contains","        <span class=\"k\">?</span> container <span class=\"k\">!=</span> contained <span class=\"k\">&amp;&amp;</span> container<span class=\"k\">.</span>contains<span class=\"k\">(</span>contained<span class=\"k\">)</span>","        <span class=\"k\">:</span> <span class=\"k\">!!(</span>container<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span>contained<span class=\"k\">)</span> <span class=\"k\">&amp;</span> <span class=\"s\">16</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/create.js'] && (_$jscoverage['baidu/dom/create.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All right reserved.</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.dom.setAttrs;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21019;&#24314; Element &#23545;&#35937;&#12290;</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.dom.create</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.create(tagName[, options])</span>","<span class=\"c\"> * @param {string} tagName &#26631;&#31614;&#21517;&#31216;.</span>","<span class=\"c\"> * @param {Object} opt_attributes &#20803;&#32032;&#21019;&#24314;&#26102;&#25317;&#26377;&#30340;&#23646;&#24615;&#65292;&#22914;style&#21644;className.</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {HTMLElement} &#21019;&#24314;&#30340; Element &#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>tagName<span class=\"k\">,</span> opt_attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> el <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tagName<span class=\"k\">),</span>","        attributes <span class=\"k\">=</span> opt_attributes <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttrs<span class=\"k\">(</span>el<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/ddManager.js'] && (_$jscoverage['baidu/dom/ddManager.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/dragManager.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.4.0</span>","<span class=\"c\"> * date: 2010/10/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang.createSingle;</span>","<span class=\"c\">///import baidu.lang.Event;</span>","<span class=\"c\">///import baidu.lang.Class.$removeEventListener;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25302;&#26355;&#31649;&#29702;&#22120;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @param   {HTMLElement|ID}    element &#34987;&#25302;&#26355;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> * @param   {JSON}              options &#25302;&#26355;&#37197;&#32622;&#39033; {toggle, autoStop, interval, capture, range, ondragstart, ondragend, ondrag}</span>","<span class=\"c\"> * @return {DOMElement}                 &#21487;&#25302;&#25341;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>ddManager <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>createSingle<span class=\"k\">(</span><span class=\"k\">{</span>","\t_targetsDroppingOver<span class=\"k\">:</span><span class=\"k\">{}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"]);
_$jscoverage['baidu/dom/drag.js'] && (_$jscoverage['baidu/dom/drag.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/dom/drag.js</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * modify: linlingyu</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/06/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25302;&#21160;&#25351;&#23450;&#30340;DOM&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.drag</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.drag(element, options)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#20803;&#32032;&#25110;&#32773;&#20803;&#32032;&#30340;id.</span>","<span class=\"c\"> * @param {Object} options &#25302;&#26355;&#37197;&#32622;&#39033;.</span>","","<span class=\"c\"> * @param {Array} options.range &#38480;&#21046;drag&#30340;&#25302;&#25341;&#33539;&#22260;&#65292;&#25968;&#32452;&#20013;&#24517;&#39035;&#21253;&#21547;&#22235;&#20010;&#20540;&#65292;&#20998;&#21035;&#26159;&#19978;&#12289;&#21491;&#12289;&#19979;&#12289;&#24038;&#36793;&#32536;&#30456;&#23545;&#19978;&#26041;&#25110;&#24038;&#26041;&#30340;&#20687;&#32032;&#36317;&#31163;&#12290;&#40664;&#35748;&#26080;&#38480;&#21046;.</span>","<span class=\"c\"> * @param {Number} options.interval &#25302;&#26355;&#34892;&#20026;&#30340;&#35302;&#21457;&#39057;&#24230;&#65288;&#26102;&#38388;&#65306;&#27627;&#31186;&#65289;.</span>","<span class=\"c\"> * @param {Boolean} options.capture &#40736;&#26631;&#25302;&#26355;&#31896;&#28382;.</span>","<span class=\"c\"> * @param {Object} options.mouseEvent &#38190;&#21517;&#20026;clientX&#21644;clientY&#30340;object&#65292;&#33509;&#19981;&#35774;&#32622;&#27492;&#39033;&#65292;&#40664;&#35748;&#20250;&#33719;&#21462;&#24403;&#21069;&#40736;&#26631;&#20301;&#32622;.</span>","<span class=\"c\"> * @param {Function} options.ondragstart drag&#24320;&#22987;&#26102;&#35302;&#21457;.</span>","<span class=\"c\"> * @param {Function} options.ondrag drag&#36827;&#34892;&#20013;&#35302;&#21457;.</span>","<span class=\"c\"> * @param {Function} options.ondragend drag&#32467;&#26463;&#26102;&#35302;&#21457;.</span>","<span class=\"c\"> * @param {function} options.autoStop &#26159;&#21542;&#22312;onmouseup&#26102;&#33258;&#21160;&#20572;&#27490;&#25302;&#25341;&#12290;&#40664;&#35748;&#20026;true.</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#35201;&#25302;&#25341;&#30340;&#20803;&#32032;&#24517;&#39035;&#20107;&#20808;&#35774;&#23450;&#26679;&#24335;&#30340;postion&#20540;&#65292;&#22914;&#26524;postion&#20026;absloute&#65292;&#24182;&#19988;&#27809;&#26377;&#35774;&#23450;top&#21644;left&#65292;&#25302;&#25341;&#24320;&#22987;&#26102;&#65292;&#26080;&#27861;&#21462;&#24471;&#20803;&#32032;&#30340;top&#21644;left&#20540;&#65292;&#36825;&#26102;&#20250;&#20174;[0,0]&#28857;&#24320;&#22987;&#25302;&#25341;</span>","","<span class=\"c\"> * @see baidu.dom.draggable</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.object.extend;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.page.getMousePosition;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.event.preventDefault;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">///import baidu.lang.isObject;</span>","<span class=\"c\">///import baidu.page.getScrollLeft;</span>","<span class=\"c\">///import baidu.page.getScrollTop;</span>","","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> target<span class=\"k\">,</span> <span class=\"c\">// &#34987;&#25302;&#26355;&#30340;DOM&#20803;&#32032;</span>","        op<span class=\"k\">,</span> ox<span class=\"k\">,</span> oy<span class=\"k\">,</span> timer<span class=\"k\">,</span> left<span class=\"k\">,</span> top<span class=\"k\">,</span> lastLeft<span class=\"k\">,</span> lastTop<span class=\"k\">,</span> mozUserSelect<span class=\"k\">;</span>","    baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>drag <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!(</span>target <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">)))</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">}</span>","        op <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","            autoStop<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"c\">// false &#29992;&#25143;&#25163;&#21160;&#32467;&#26463;&#25302;&#26355; &#65372; true &#22312;mouseup&#26102;&#33258;&#21160;&#20572;&#27490;&#25302;&#26355;</span>","            capture<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>  <span class=\"c\">// &#40736;&#26631;&#25302;&#26355;&#31896;&#28382;</span>","            interval<span class=\"k\">:</span> <span class=\"s\">16</span>    <span class=\"c\">// &#25302;&#26355;&#34892;&#20026;&#30340;&#35302;&#21457;&#39057;&#24230;&#65288;&#26102;&#38388;&#65306;&#27627;&#31186;&#65289;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","        lastLeft <span class=\"k\">=</span> left <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">'left'</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        lastTop <span class=\"k\">=</span> top <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> mouse <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getMousePosition<span class=\"k\">();</span>  <span class=\"c\">// &#24471;&#21040;&#24403;&#21069;&#40736;&#26631;&#22352;&#26631;&#20540;</span>","            ox <span class=\"k\">=</span> op<span class=\"k\">.</span>mouseEvent <span class=\"k\">?</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollLeft<span class=\"k\">()</span> <span class=\"k\">+</span> op<span class=\"k\">.</span>mouseEvent<span class=\"k\">.</span>clientX<span class=\"k\">)</span> <span class=\"k\">:</span> mouse<span class=\"k\">.</span>x<span class=\"k\">;</span>","            oy <span class=\"k\">=</span> op<span class=\"k\">.</span>mouseEvent <span class=\"k\">?</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollTop<span class=\"k\">()</span> <span class=\"k\">+</span> op<span class=\"k\">.</span>mouseEvent<span class=\"k\">.</span>clientY<span class=\"k\">)</span> <span class=\"k\">:</span> mouse<span class=\"k\">.</span>y<span class=\"k\">;</span>","            clearInterval<span class=\"k\">(</span>timer<span class=\"k\">);</span>","            timer <span class=\"k\">=</span> setInterval<span class=\"k\">(</span>render<span class=\"k\">,</span> op<span class=\"k\">.</span>interval<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        <span class=\"c\">// &#36825;&#39033;&#20026; true&#65292;&#32570;&#30465;&#22312; onmouseup &#20107;&#20214;&#32456;&#27490;&#25302;&#26355;</span>","        op<span class=\"k\">.</span>autoStop <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span> stop<span class=\"k\">);</span>","        <span class=\"c\">// &#22312;&#25302;&#26355;&#36807;&#31243;&#20013;&#39029;&#38754;&#37324;&#30340;&#25991;&#23383;&#20250;&#34987;&#36873;&#20013;&#39640;&#20142;&#26174;&#31034;&#65292;&#22312;&#36825;&#37324;&#20462;&#27491;</span>","        baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'selectstart'</span><span class=\"k\">,</span> unselect<span class=\"k\">);</span>","        <span class=\"c\">// &#35774;&#32622;&#40736;&#26631;&#31896;&#28382;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>op<span class=\"k\">.</span>capture <span class=\"k\">&amp;&amp;</span> target<span class=\"k\">.</span>setCapture<span class=\"k\">)</span> <span class=\"k\">{</span>","            target<span class=\"k\">.</span>setCapture<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>op<span class=\"k\">.</span>capture <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>captureEvents<span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>captureEvents<span class=\"k\">(</span>Event<span class=\"k\">.</span>MOUSEMOVE<span class=\"k\">|</span>Event<span class=\"k\">.</span>MOUSEUP<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"c\">// fixed for firefox</span>","        mozUserSelect <span class=\"k\">=</span> document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect<span class=\"k\">;</span>","        document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>ondragstart<span class=\"k\">)</span>","            <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>ondragstart<span class=\"k\">(</span>target<span class=\"k\">,</span> op<span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            stop<span class=\"k\">:</span> stop<span class=\"k\">,</span> dispose<span class=\"k\">:</span> stop<span class=\"k\">,</span>","            update<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","                baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span>op<span class=\"k\">,</span> options<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// &#20572;&#27490;&#25302;&#26355;</span>","    <span class=\"k\">function</span> stop<span class=\"k\">()</span> <span class=\"k\">{</span>","        clearInterval<span class=\"k\">(</span>timer<span class=\"k\">);</span>","        <span class=\"c\">// &#35299;&#38500;&#40736;&#26631;&#31896;&#28382;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>op<span class=\"k\">.</span>capture <span class=\"k\">&amp;&amp;</span> target<span class=\"k\">.</span>releaseCapture<span class=\"k\">)</span> <span class=\"k\">{</span>","            target<span class=\"k\">.</span>releaseCapture<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>op<span class=\"k\">.</span>capture <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>captureEvents<span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>captureEvents<span class=\"k\">(</span>Event<span class=\"k\">.</span>MOUSEMOVE<span class=\"k\">|</span>Event<span class=\"k\">.</span>MOUSEUP<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"c\">// &#25302;&#26355;&#26102;&#32593;&#39029;&#20869;&#23481;&#34987;&#26694;&#36873;</span>","        document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect <span class=\"k\">=</span> mozUserSelect<span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'selectstart'</span><span class=\"k\">,</span> unselect<span class=\"k\">);</span>","        op<span class=\"k\">.</span>autoStop <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span> stop<span class=\"k\">);</span>","        <span class=\"c\">// ondragend &#20107;&#20214;</span>","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>ondragend<span class=\"k\">)</span>","            <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>ondragend<span class=\"k\">(</span>target<span class=\"k\">,</span> op<span class=\"k\">,</span> <span class=\"k\">{</span>left<span class=\"k\">:</span> lastLeft<span class=\"k\">,</span> top<span class=\"k\">:</span> lastTop<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// &#23545;DOM&#20803;&#32032;&#36827;&#34892;top/left&#36171;&#26032;&#20540;&#20197;&#23454;&#29616;&#25302;&#26355;&#30340;&#25928;&#26524;</span>","    <span class=\"k\">function</span> render<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> rg <span class=\"k\">=</span> op<span class=\"k\">.</span>range <span class=\"k\">||</span> <span class=\"k\">[],</span>","            mouse <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getMousePosition<span class=\"k\">(),</span>","            el <span class=\"k\">=</span> left <span class=\"k\">+</span> mouse<span class=\"k\">.</span>x <span class=\"k\">-</span> ox<span class=\"k\">,</span>","            et <span class=\"k\">=</span> top  <span class=\"k\">+</span> mouse<span class=\"k\">.</span>y <span class=\"k\">-</span> oy<span class=\"k\">;</span>","","        <span class=\"c\">// &#22914;&#26524;&#29992;&#25143;&#38480;&#23450;&#20102;&#21487;&#25302;&#21160;&#30340;&#33539;&#22260;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isObject<span class=\"k\">(</span>rg<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> rg<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">4</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            el <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>rg<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> el<span class=\"k\">);</span>","            el <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>rg<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">-</span> target<span class=\"k\">.</span>offsetWidth<span class=\"k\">,</span> el<span class=\"k\">);</span>","            et <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>rg<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> et<span class=\"k\">);</span>","            et <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>rg<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">-</span> target<span class=\"k\">.</span>offsetHeight<span class=\"k\">,</span> et<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        target<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> el <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","        target<span class=\"k\">.</span>style<span class=\"k\">.</span>top  <span class=\"k\">=</span> et <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","        lastLeft <span class=\"k\">=</span> el<span class=\"k\">;</span>","        lastTop <span class=\"k\">=</span> et<span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>ondrag<span class=\"k\">)</span>","            <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>ondrag<span class=\"k\">(</span>target<span class=\"k\">,</span> op<span class=\"k\">,</span> <span class=\"k\">{</span>left<span class=\"k\">:</span> lastLeft<span class=\"k\">,</span> top<span class=\"k\">:</span> lastTop<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// &#23545;document.body.onselectstart&#20107;&#20214;&#36827;&#34892;&#30417;&#21548;&#65292;&#36991;&#20813;&#25302;&#26355;&#26102;&#25991;&#23383;&#34987;&#36873;&#20013;</span>","    <span class=\"k\">function</span> unselect<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","<span class=\"c\">// [TODO] 20100625 &#28155;&#21152;cursorAt&#23646;&#24615;&#65292;absolute&#23450;&#20301;&#30340;&#23450;&#20301;&#30340;&#20803;&#32032;&#22312;&#19981;&#35774;&#32622;top|left&#20540;&#26102;&#65292;&#21021;&#22987;&#20540;&#26377;&#38382;&#39064;&#65292;&#24471;&#21160;&#24577;&#35745;&#31639;</span>","<span class=\"c\">// [TODO] 20101101 &#22312;drag&#26041;&#27861;&#30340;&#36820;&#22238;&#23545;&#35937;&#20013;&#28155;&#21152; dispose() &#26041;&#27861;&#26512;&#26500;drag</span>"]);
_$jscoverage['baidu/dom/draggable.js'] && (_$jscoverage['baidu/dom/draggable.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.drag;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.dom.setStyle;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.event.preventDefault;</span>","<span class=\"c\">///import baidu.object.extend;</span>","","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">///import baidu.lang.Class;</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35753;&#19968;&#20010;DOM&#20803;&#32032;&#21487;&#25302;&#25341;</span>","<span class=\"c\"> * @name baidu.dom.draggable</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.draggable(element[, options])</span>","<span class=\"c\"> * @param  {string|HTMLElement}   element \t\t        &#20803;&#32032;&#25110;&#32773;&#20803;&#32032;&#30340;ID.</span>","<span class=\"c\"> * @param  {Object} \t\t      [options] \t\t\t&#36873;&#39033;.</span>","<span class=\"c\"> * @config {Array} \t\t          [range] \t\t        &#38480;&#21046;drag&#30340;&#25302;&#25341;&#33539;&#22260;&#65292;&#25968;&#32452;&#20013;&#24517;&#39035;&#21253;&#21547;&#22235;&#20010;&#20540;&#65292;&#20998;&#21035;&#26159;&#19978;&#12289;&#21491;&#12289;&#19979;&#12289;&#24038;&#36793;&#32536;&#30456;&#23545;&#19978;&#26041;&#25110;&#24038;&#26041;&#30340;&#20687;&#32032;&#36317;&#31163;&#12290;&#40664;&#35748;&#26080;&#38480;&#21046;.</span>","<span class=\"c\"> * @config {Number} \t          [interval] \t        &#25302;&#26355;&#34892;&#20026;&#30340;&#35302;&#21457;&#39057;&#24230;&#65288;&#26102;&#38388;&#65306;&#27627;&#31186;&#65289;.</span>","<span class=\"c\"> * @config {Boolean} \t          [capture] \t        &#40736;&#26631;&#25302;&#26355;&#31896;&#28382;.</span>","<span class=\"c\"> * @config {Object} \t          [mouseEvent] \t        &#38190;&#21517;&#20026;clientX&#21644;clientY&#30340;object&#65292;&#33509;&#19981;&#35774;&#32622;&#27492;&#39033;&#65292;&#40664;&#35748;&#20250;&#33719;&#21462;&#24403;&#21069;&#40736;&#26631;&#20301;&#32622;.</span>","<span class=\"c\"> * @config {Function} \t          [onbeforedragstart]   drag&#24320;&#22987;&#21069;&#35302;&#21457;&#65288;&#21363;&#40736;&#26631;&#25353;&#19979;&#26102;&#65289;.</span>","<span class=\"c\"> * @config {Function} \t          [ondragstart]         drag&#24320;&#22987;&#26102;&#35302;&#21457;.</span>","<span class=\"c\"> * @config {Function} \t          [ondrag] \t\t        drag&#36827;&#34892;&#20013;&#35302;&#21457;.</span>","<span class=\"c\"> * @config {Function} \t          [ondragend] \t        drag&#32467;&#26463;&#26102;&#35302;&#21457;.</span>","<span class=\"c\"> * @config {HTMLElement}          [handler] \t        &#29992;&#20110;&#25302;&#25341;&#30340;&#25163;&#26564;&#65292;&#27604;&#22914;dialog&#30340;title.</span>","<span class=\"c\"> * @config {Function} \t          [toggle] \t\t        &#22312;&#27599;&#27425;ondrag&#30340;&#26102;&#20505;&#65292;&#20250;&#35843;&#29992;&#36825;&#20010;&#26041;&#27861;&#21028;&#26029;&#26159;&#21542;&#24212;&#35813;&#20572;&#27490;&#25302;&#25341;&#12290;&#22914;&#26524;&#27492;&#20989;&#25968;&#36820;&#22238;&#20540;&#20026;false&#65292;&#21017;&#20572;&#27490;&#25302;&#25341;.</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark    &#35201;&#25302;&#25341;&#30340;&#20803;&#32032;&#24517;&#39035;&#20107;&#20808;&#35774;&#23450;&#26679;&#24335;&#30340;postion&#20540;&#65292;&#22914;&#26524;postion&#20026;absloute&#65292;&#24182;&#19988;&#27809;&#26377;&#35774;&#23450;top&#21644;left&#65292;&#25302;&#25341;&#24320;&#22987;&#26102;&#65292;&#26080;&#27861;&#21462;&#24471;&#20803;&#32032;&#30340;top&#21644;left&#20540;&#65292;&#36825;&#26102;&#20250;&#20174;[0,0]&#28857;&#24320;&#22987;&#25302;&#25341;.</span>","<span class=\"c\"> * @see baidu.dom.drag</span>","<span class=\"c\"> * @returns {Draggable Instance} &#25302;&#25341;&#23454;&#20363;&#65292;&#21253;&#21547;cancel&#26041;&#27861;&#65292;&#21487;&#20197;&#20572;&#27490;&#25302;&#25341;.</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>draggable <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>toggle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","    options<span class=\"k\">.</span>autoStop <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    options<span class=\"k\">.</span>handler <span class=\"k\">=</span> options<span class=\"k\">.</span>handler <span class=\"k\">||</span> element<span class=\"k\">;</span>","    <span class=\"k\">var</span> manager<span class=\"k\">,</span>","        events <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'ondragstart'</span><span class=\"k\">,</span> <span class=\"s\">'ondrag'</span><span class=\"k\">,</span> <span class=\"s\">'ondragend'</span><span class=\"k\">],</span>","        i <span class=\"k\">=</span> events<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        eventName<span class=\"k\">,</span>","        dragSingle<span class=\"k\">,</span>","        draggableSingle <span class=\"k\">=</span> <span class=\"k\">{</span>","            dispose<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                dragSingle <span class=\"k\">&amp;&amp;</span> dragSingle<span class=\"k\">.</span>stop<span class=\"k\">();</span>","                baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un<span class=\"k\">(</span>options<span class=\"k\">.</span>handler<span class=\"k\">,</span> <span class=\"s\">'onmousedown'</span><span class=\"k\">,</span> handlerMouseDown<span class=\"k\">);</span>","                baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>dispose<span class=\"k\">.</span>call<span class=\"k\">(</span>draggableSingle<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"c\">//&#22914;&#26524;&#23384;&#22312;ddManager, &#23558;&#20107;&#20214;&#36716;&#21457;&#21040;ddManager&#20013;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>manager <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>ddManager<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","            eventName <span class=\"k\">=</span> events<span class=\"k\">[</span>i<span class=\"k\">];</span>","            options<span class=\"k\">[</span>eventName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>eventName<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> fn <span class=\"k\">=</span> options<span class=\"k\">[</span>eventName<span class=\"k\">];</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>fn<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","                    manager<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>eventName<span class=\"k\">,</span> <span class=\"k\">{</span>DOM<span class=\"k\">:</span> element<span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">)(</span>eventName<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","","    <span class=\"c\">// &#25302;&#26355;&#21482;&#38024;&#23545;&#26377; position &#23450;&#20301;&#30340;&#20803;&#32032;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> handlerMouseDown<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> event <span class=\"k\">=</span> options<span class=\"k\">.</span>mouseEvent <span class=\"k\">=</span> window<span class=\"k\">.</span>event <span class=\"k\">||</span> e<span class=\"k\">;</span>","            options<span class=\"k\">.</span>mouseEvent <span class=\"k\">=</span> <span class=\"k\">{</span>clientX<span class=\"k\">:</span> event<span class=\"k\">.</span>clientX<span class=\"k\">,</span> clientY<span class=\"k\">:</span> event<span class=\"k\">.</span>clientY<span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>button <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"c\">//&#21482;&#25903;&#25345;&#40736;&#26631;&#24038;&#38190;&#25302;&#25341;; &#24038;&#38190;&#20195;&#30721;: IE&#20026;1,W3C&#20026;0</span>","                <span class=\"c\">// &#21487;&#20197;&#36890;&#36807;&#37197;&#32622;&#39033;&#37324;&#30340;&#36825;&#20010;&#24320;&#20851;&#20989;&#25968;&#26242;&#20572;&#25110;&#21551;&#29992;&#25302;&#26355;&#21151;&#33021;</span>","                <span class=\"k\">||</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>options<span class=\"k\">.</span>toggle<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>options<span class=\"k\">.</span>toggle<span class=\"k\">()))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","<span class=\"c\">//            if (baidu.dom.getStyle(element, 'position') == 'static') {</span>","<span class=\"c\">//                baidu.dom.setStyle(element, 'position', 'relative');</span>","<span class=\"c\">//            }</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>options<span class=\"k\">.</span>onbeforedragstart<span class=\"k\">))</span> <span class=\"k\">{</span>","                options<span class=\"k\">.</span>onbeforedragstart<span class=\"k\">(</span>element<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            dragSingle <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>drag<span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">);</span>","            draggableSingle<span class=\"k\">.</span>stop <span class=\"k\">=</span> dragSingle<span class=\"k\">.</span>stop<span class=\"k\">;</span>","            draggableSingle<span class=\"k\">.</span>update <span class=\"k\">=</span> dragSingle<span class=\"k\">.</span>update<span class=\"k\">;</span>","            <span class=\"c\">//&#38450;&#27490;ff&#19979;&#20986;&#29616;&#31105;&#27490;&#25302;&#25341;&#30340;&#22270;&#26631;</span>","            baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>event<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// &#23545;&#25302;&#26355;&#30340;&#25203;&#26426;&#20803;&#32032;&#30417;&#21548; onmousedown &#20107;&#20214;&#65292;&#20197;&#20415;&#36827;&#34892;&#25302;&#26355;&#34892;&#20026;</span>","        baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">(</span>options<span class=\"k\">.</span>handler<span class=\"k\">,</span> <span class=\"s\">'onmousedown'</span><span class=\"k\">,</span> handlerMouseDown<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">{</span>","        cancel<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            draggableSingle<span class=\"k\">.</span>dispose<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/droppable.js'] && (_$jscoverage['baidu/dom/droppable.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/droppable.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.4.0</span>","<span class=\"c\"> * date: 2010/10/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.ddManager;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","<span class=\"c\">///import baidu.page.getMousePosition;</span>","<span class=\"c\">///import baidu.dom.intersect;</span>","<span class=\"c\">///import baidu.lang.guid;</span>","","<span class=\"c\">//TODO: &#28155;&#21152;&#23545; accept, hoverclass &#31561;&#21442;&#25968;&#30340;&#25903;&#25345;.</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35753;&#19968;&#20010;DOM&#20803;&#32032;&#21487;&#20197;&#23481;&#32435;&#34987;&#25302;&#25341;&#30340;DOM&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.droppable</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.droppable(element[, options])</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#23481;&#22120;&#20803;&#32032;&#25110;&#32773;&#23481;&#22120;&#20803;&#32032;&#30340;ID</span>","<span class=\"c\"> * @param {Object} [options] &#36873;&#39033;&#65292;&#25302;&#25341;&#20803;&#32032;&#23545;&#20110;&#23481;&#22120;&#20803;&#32032;&#30340;&#20107;&#20214;</span>","<span class=\"c\">                </span>","<span class=\"c\"> * @config {Function} [ondrop] &#24403;&#20803;&#32032;&#25918;&#21040;&#23481;&#22120;&#20803;&#32032;&#20869;&#37096;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [ondropover] &#24403;&#20803;&#32032;&#22312;&#23481;&#22120;&#20803;&#32032;&#19978;&#26041;&#26102;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [ondropout] &#24403;&#20803;&#32032;&#31227;&#38500;&#23481;&#22120;&#20803;&#32032;&#26102;&#35302;&#21457;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">            &#38656;&#35201;&#23558;&#20803;&#32032;&#21644;&#23481;&#22120;&#20803;&#32032;&#30340;&#23450;&#20301;&#37117;&#35774;&#32622;&#20026;absolute</span>","<span class=\"c\">        </span>","<span class=\"c\"> * @see baidu.dom.droppable</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Function} cancel&#21462;&#28040;&#25302;&#25341;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>droppable <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span>","\toptions <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> manager <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>ddManager<span class=\"k\">,</span>","\t\ttarget <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">),</span>","\t    guid <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>guid<span class=\"k\">(),</span>","\t\t<span class=\"c\">//&#25302;&#25341;&#36827;&#34892;&#26102;&#21028;&#26029;</span>","\t\t_dragging <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> _targetsDroppingOver <span class=\"k\">=</span> manager<span class=\"k\">.</span>_targetsDroppingOver<span class=\"k\">,</span>","\t\t\t    eventData <span class=\"k\">=</span> <span class=\"k\">{</span>trigger<span class=\"k\">:</span>event<span class=\"k\">.</span>DOM<span class=\"k\">,</span>reciever<span class=\"k\">:</span> target<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">//&#21028;&#26029;&#34987;&#25302;&#25341;&#20803;&#32032;&#21644;&#23481;&#22120;&#26159;&#21542;&#30456;&#25758;</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>intersect<span class=\"k\">(</span>target<span class=\"k\">,</span> event<span class=\"k\">.</span>DOM<span class=\"k\">))</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">//&#36827;&#20837;&#23481;&#22120;&#21306;&#22495;</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span> _targetsDroppingOver<span class=\"k\">[</span>guid<span class=\"k\">])</span><span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">//&#21021;&#27425;&#36827;&#20837;</span>","\t\t\t\t\t<span class=\"k\">(</span><span class=\"k\">typeof</span> options<span class=\"k\">.</span>ondropover <span class=\"k\">==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>ondropover<span class=\"k\">.</span>call<span class=\"k\">(</span>target<span class=\"k\">,</span>eventData<span class=\"k\">);</span>","\t\t\t\t\tmanager<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span><span class=\"s\">\"ondropover\"</span><span class=\"k\">,</span> eventData<span class=\"k\">);</span>","\t\t\t\t\t_targetsDroppingOver<span class=\"k\">[</span>guid<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">//&#20986;&#20102;&#23481;&#22120;&#21306;&#22495;</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>_targetsDroppingOver<span class=\"k\">[</span>guid<span class=\"k\">])</span><span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">(</span><span class=\"k\">typeof</span> options<span class=\"k\">.</span>ondropout <span class=\"k\">==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>ondropout<span class=\"k\">.</span>call<span class=\"k\">(</span>target<span class=\"k\">,</span>eventData<span class=\"k\">);</span>","\t\t\t\t\tmanager<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span><span class=\"s\">\"ondropout\"</span><span class=\"k\">,</span> eventData<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">delete</span> _targetsDroppingOver<span class=\"k\">[</span>guid<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">//&#25302;&#25341;&#32467;&#26463;&#26102;&#21028;&#26029;</span>","\t\t_dragend <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> eventData <span class=\"k\">=</span> <span class=\"k\">{</span>trigger<span class=\"k\">:</span>event<span class=\"k\">.</span>DOM<span class=\"k\">,</span>reciever<span class=\"k\">:</span> target<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>intersect<span class=\"k\">(</span>target<span class=\"k\">,</span> event<span class=\"k\">.</span>DOM<span class=\"k\">))</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">typeof</span> options<span class=\"k\">.</span>ondrop <span class=\"k\">==</span> <span class=\"s\">'function'</span> <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>ondrop<span class=\"k\">.</span>call<span class=\"k\">(</span>target<span class=\"k\">,</span> eventData<span class=\"k\">);</span>","\t\t\t\tmanager<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span><span class=\"s\">\"ondrop\"</span><span class=\"k\">,</span> eventData<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">delete</span> manager<span class=\"k\">.</span>_targetsDroppingOver<span class=\"k\">[</span>guid<span class=\"k\">];</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"c\">//&#20107;&#20214;&#27880;&#20876;,return object&#25552;&#20379;&#20107;&#20214;&#35299;&#38500;</span>","\tmanager<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"ondrag\"</span><span class=\"k\">,</span> _dragging<span class=\"k\">);</span>","\tmanager<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"ondragend\"</span><span class=\"k\">,</span> _dragend<span class=\"k\">);</span>","\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\tcancel <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\t\tmanager<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">\"ondrag\"</span><span class=\"k\">,</span> _dragging<span class=\"k\">);</span>","\t\t\tmanager<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">\"ondragend\"</span><span class=\"k\">,</span>_dragend<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/empty.js'] && (_$jscoverage['baidu/dom/empty.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/empty.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010-07-06</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21024;&#38500;&#19968;&#20010;&#33410;&#28857;&#19979;&#38754;&#30340;&#25152;&#26377;&#23376;&#33410;&#28857;&#12290;</span>","<span class=\"c\"> * @name baidu.dom.empty</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.empty(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\">        </span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.g;</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>empty <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    ","    <span class=\"k\">while</span><span class=\"k\">(</span>element<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","        element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>element<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">//todo&#65306;&#21024;&#38500;&#20803;&#32032;&#19978;&#32465;&#23450;&#30340;&#20107;&#20214;&#31561;?</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/first.js'] && (_$jscoverage['baidu/dom/first.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/first.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._matchNode;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;&#33410;&#28857;</span>","<span class=\"c\"> * @name baidu.dom.first</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.first(element)</span>","<span class=\"c\"> * @param {HTMLElement|String} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.last,baidu.dom.prev,baidu.dom.next</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {HTMLElement|null} &#30446;&#26631;&#20803;&#32032;&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;&#33410;&#28857;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>first <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_matchNode<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'nextSibling'</span><span class=\"k\">,</span> <span class=\"s\">'firstChild'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/fixable.js'] && (_$jscoverage['baidu/dom/fixable.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All right reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getAttr;</span>","<span class=\"c\">///import baidu.dom.setAttr;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","<span class=\"c\">///import baidu.dom.setStyle;</span>","<span class=\"c\">///import baidu.dom.setStyles;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.object.extend;</span>","<span class=\"c\">///import baidu.page.getViewHeight;</span>","<span class=\"c\">///import baidu.page.getViewWidth;</span>","<span class=\"c\">///import baidu.dom._styleFilter.px;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20351;&#30446;&#26631;&#20803;&#32032;&#25317;&#26377;&#21487;&#36827;&#34892;&#19982;&#39029;&#38754;&#21487;&#35265;&#21306;&#22495;&#30456;&#23545;&#20301;&#32622;&#20445;&#25345;&#19981;&#21464;&#30340;&#31227;&#21160;&#30340;&#33021;&#21147;</span>","<span class=\"c\"> * @name baidu.dom.fixable</span>","<span class=\"c\"> * @grammar baidu.dom.fixable(element, options)</span>","<span class=\"c\"> * @param {HTMLElement|String} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {Object} options &#37197;&#32622;&#39033;</span>","<span class=\"c\"> * @config {String} [vertival] &#21462;&#20540;[top|bottom] &#40664;&#35748;&#20540; top</span>","<span class=\"c\"> * @config {Strgin} [horizontal] &#21462;&#20540;[left|right] &#40664;&#35748;&#20540; left</span>","<span class=\"c\"> * @config {Object} [offset] {x:String|Number, y:String|Number}} &#27178;&#21521;&#19982;&#32437;&#21521;&#30340;&#21462;&#20540;</span>","<span class=\"c\"> * @config {Boolean} [autofix] &#26159;&#21542;&#33258;&#21160;&#36827;&#34892;fix&#65292;&#40664;&#35748;&#20540;&#20026;true</span>","<span class=\"c\"> * @config {Function} [onrender] &#24403;&#34987;&#28210;&#26579;&#26102;&#20505;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [onupdate] &#24403;&#20301;&#32622;&#34987;&#26356;&#26032;&#30340;&#26102;&#20505;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [onrelease] &#24403;&#34987;&#37322;&#25918;&#30340;&#26102;&#20505;&#35302;&#21457;</span>","<span class=\"c\"> * @returns {Object} &#36820;&#22238;&#20540;&#19968;&#20010;&#23545;&#35937;&#65292;&#26377;&#19977;&#20010;&#26041;&#27861;&#65306;render&#12289;update&#12289;release</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>fixable <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span>","","    <span class=\"k\">var</span> target  <span class=\"k\">=</span> baidu<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">),</span>","        isUnderIE7 <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&lt;=</span> <span class=\"s\">7</span> <span class=\"k\">?</span> <span class=\"k\">true</span> <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        vertival <span class=\"k\">=</span> options<span class=\"k\">.</span>vertival <span class=\"k\">||</span> <span class=\"s\">'top'</span><span class=\"k\">,</span>","        horizontal <span class=\"k\">=</span> options<span class=\"k\">.</span>horizontal <span class=\"k\">||</span> <span class=\"s\">'left'</span><span class=\"k\">,</span>","        autofix <span class=\"k\">=</span> <span class=\"k\">typeof</span> options<span class=\"k\">.</span>autofix <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">?</span> options<span class=\"k\">.</span>autofix <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        origPos<span class=\"k\">,</span>offset<span class=\"k\">,</span>isRender <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        onrender <span class=\"k\">=</span> options<span class=\"k\">.</span>onrender <span class=\"k\">||</span> <span class=\"k\">new</span> Function<span class=\"k\">(),</span>","        onupdate <span class=\"k\">=</span> options<span class=\"k\">.</span>onupdate <span class=\"k\">||</span> <span class=\"k\">new</span> Function<span class=\"k\">(),</span>","        onrelease <span class=\"k\">=</span> options<span class=\"k\">.</span>onrelease <span class=\"k\">||</span> <span class=\"k\">new</span> Function<span class=\"k\">();</span>","","    <span class=\"k\">if</span><span class=\"k\">(!</span>target<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"c\">//&#33719;&#21462;target&#21407;&#22987;&#20540;</span>","    origPos <span class=\"k\">=</span> _getOriginalStyle<span class=\"k\">();</span>","    <span class=\"c\">//&#35774;&#32622;offset&#20540;</span>","    offset <span class=\"k\">=</span> <span class=\"k\">{</span>","        y<span class=\"k\">:</span> isUnderIE7 <span class=\"k\">?</span> <span class=\"k\">(</span>origPos<span class=\"k\">.</span>position <span class=\"k\">==</span> <span class=\"s\">\"static\"</span> <span class=\"k\">?</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>top <span class=\"k\">:</span>  baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>top <span class=\"k\">-</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">.</span>parentNode<span class=\"k\">).</span>top<span class=\"k\">)</span> <span class=\"k\">:</span> target<span class=\"k\">.</span>offsetTop<span class=\"k\">,</span>","        x<span class=\"k\">:</span> isUnderIE7 <span class=\"k\">?</span> <span class=\"k\">(</span>origPos<span class=\"k\">.</span>position <span class=\"k\">==</span> <span class=\"s\">\"static\"</span> <span class=\"k\">?</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>left <span class=\"k\">:</span>  baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>left <span class=\"k\">-</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">.</span>parentNode<span class=\"k\">).</span>left<span class=\"k\">)</span> <span class=\"k\">:</span> target<span class=\"k\">.</span>offsetLeft","    <span class=\"k\">}</span><span class=\"k\">;</span>","    baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span>offset<span class=\"k\">,</span> options<span class=\"k\">.</span>offset <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","    autofix <span class=\"k\">&amp;&amp;</span> render<span class=\"k\">();</span>","   ","    <span class=\"k\">function</span> _convert<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            top <span class=\"k\">:</span> vertival <span class=\"k\">==</span> <span class=\"s\">\"top\"</span> <span class=\"k\">?</span> offset<span class=\"k\">.</span>y <span class=\"k\">:</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getViewHeight<span class=\"k\">()</span> <span class=\"k\">-</span> offset<span class=\"k\">.</span>y <span class=\"k\">-</span> origPos<span class=\"k\">.</span>height<span class=\"k\">,</span>","            left<span class=\"k\">:</span> horizontal <span class=\"k\">==</span> <span class=\"s\">\"left\"</span> <span class=\"k\">?</span> offset<span class=\"k\">.</span>x <span class=\"k\">:</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getViewWidth<span class=\"k\">()</span> <span class=\"k\">-</span> offset<span class=\"k\">.</span>x <span class=\"k\">-</span> origPos<span class=\"k\">.</span>width","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * </span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> _handleOnMove<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> p <span class=\"k\">=</span> _convert<span class=\"k\">();</span> ","        ","        target<span class=\"k\">.</span>style<span class=\"k\">.</span>setExpression<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">,</span><span class=\"s\">\"eval((document.body.scrollLeft || document.documentElement.scrollLeft) + \"</span> <span class=\"k\">+</span> p<span class=\"k\">.</span>left <span class=\"k\">+</span> <span class=\"s\">\") + 'px'\"</span><span class=\"k\">);</span>","        target<span class=\"k\">.</span>style<span class=\"k\">.</span>setExpression<span class=\"k\">(</span><span class=\"s\">\"top\"</span><span class=\"k\">,</span> <span class=\"s\">\"eval((document.body.scrollTop || document.documentElement.scrollTop) + \"</span> <span class=\"k\">+</span> p<span class=\"k\">.</span>top <span class=\"k\">+</span> <span class=\"s\">\") + 'px'\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#36820;&#22238;target&#21407;&#22987;position&#20540;</span>","<span class=\"c\">     * @return {Object}</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> _getOriginalStyle<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{</span>","            position<span class=\"k\">:</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"position\"</span><span class=\"k\">),</span>","            height<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> h <span class=\"k\">=</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"height\"</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span>h <span class=\"k\">!=</span> <span class=\"s\">\"auto\"</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">(</span><span class=\"s\">/\\d+/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>h<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">:</span> target<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">(),</span>","            width<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>\t\t\t","                <span class=\"k\">var</span> w <span class=\"k\">=</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span>w <span class=\"k\">!=</span> <span class=\"s\">\"auto\"</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">(</span><span class=\"s\">/\\d+/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>w<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">:</span> target<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">()</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        _getValue<span class=\"k\">(</span><span class=\"s\">'top'</span><span class=\"k\">,</span> result<span class=\"k\">);</span>","        _getValue<span class=\"k\">(</span><span class=\"s\">'left'</span><span class=\"k\">,</span> result<span class=\"k\">);</span>","        _getValue<span class=\"k\">(</span><span class=\"s\">'bottom'</span><span class=\"k\">,</span> result<span class=\"k\">);</span>","        _getValue<span class=\"k\">(</span><span class=\"s\">'right'</span><span class=\"k\">,</span> result<span class=\"k\">);</span>","        ","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> _getValue<span class=\"k\">(</span>position<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> result<span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>options<span class=\"k\">.</span>position <span class=\"k\">==</span> <span class=\"s\">'static'</span><span class=\"k\">)</span><span class=\"k\">{</span>","            options<span class=\"k\">[</span>position<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>   ","        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","            result <span class=\"k\">=</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span> position<span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>result <span class=\"k\">==</span> <span class=\"s\">'auto'</span> <span class=\"k\">||</span> result <span class=\"k\">==</span> <span class=\"s\">'0px'</span> <span class=\"k\">)</span><span class=\"k\">{</span>","                options<span class=\"k\">[</span>position<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                options<span class=\"k\">[</span>position<span class=\"k\">]</span> <span class=\"k\">=</span> result<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> render<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>isRender<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","        baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"k\">{</span>top<span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> left<span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> bottom<span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> right<span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">}</span><span class=\"k\">);</span>","        ","        <span class=\"k\">if</span><span class=\"k\">(!</span>isUnderIE7<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> style <span class=\"k\">=</span> <span class=\"k\">{</span>position<span class=\"k\">:</span><span class=\"s\">\"fixed\"</span><span class=\"k\">}</span><span class=\"k\">;</span>","            style<span class=\"k\">[</span>vertival <span class=\"k\">==</span> <span class=\"s\">\"top\"</span> <span class=\"k\">?</span> <span class=\"s\">\"top\"</span> <span class=\"k\">:</span> <span class=\"s\">\"bottom\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> offset<span class=\"k\">.</span>y <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","            style<span class=\"k\">[</span>horizontal <span class=\"k\">==</span> <span class=\"s\">\"left\"</span> <span class=\"k\">?</span> <span class=\"s\">\"left\"</span> <span class=\"k\">:</span> <span class=\"s\">\"right\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> offset<span class=\"k\">.</span>x <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","","            baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>target<span class=\"k\">,</span> style<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","            baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"position\"</span><span class=\"k\">,</span><span class=\"s\">\"absolute\"</span><span class=\"k\">);</span>","            _handleOnMove<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        onrender<span class=\"k\">();</span>","        isRender <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> release<span class=\"k\">()</span><span class=\"k\">{</span>","       <span class=\"k\">if</span><span class=\"k\">(!</span>isRender<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","       <span class=\"k\">var</span> style <span class=\"k\">=</span> <span class=\"k\">{</span>","           position<span class=\"k\">:</span> origPos<span class=\"k\">.</span>position<span class=\"k\">,</span>","           left<span class=\"k\">:</span> origPos<span class=\"k\">.</span>left <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">?</span> <span class=\"s\">'auto'</span> <span class=\"k\">:</span> origPos<span class=\"k\">.</span>left<span class=\"k\">,</span>","           top<span class=\"k\">:</span> origPos<span class=\"k\">.</span>top <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">?</span> <span class=\"s\">'auto'</span> <span class=\"k\">:</span> origPos<span class=\"k\">.</span>top<span class=\"k\">,</span>","           bottom<span class=\"k\">:</span> origPos<span class=\"k\">.</span>bottom <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">?</span> <span class=\"s\">'auto'</span> <span class=\"k\">:</span> origPos<span class=\"k\">.</span>bottom<span class=\"k\">,</span>","           right<span class=\"k\">:</span> origPos<span class=\"k\">.</span>right <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">?</span>  <span class=\"s\">'auto'</span> <span class=\"k\">:</span> origPos<span class=\"k\">.</span>right","       <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>isUnderIE7<span class=\"k\">)</span><span class=\"k\">{</span>","            target<span class=\"k\">.</span>style<span class=\"k\">.</span>removeExpression<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">);</span>","            target<span class=\"k\">.</span>style<span class=\"k\">.</span>removeExpression<span class=\"k\">(</span><span class=\"s\">\"top\"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>target<span class=\"k\">,</span> style<span class=\"k\">);</span>","","        onrelease<span class=\"k\">();</span>","        isRender <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> update<span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>options<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","        <span class=\"c\">//&#26356;&#26032;&#20107;&#20214;</span>","        onrender <span class=\"k\">=</span> options<span class=\"k\">.</span>onrender <span class=\"k\">||</span> onrender<span class=\"k\">;</span>","        onupdate <span class=\"k\">=</span> options<span class=\"k\">.</span>onupdate <span class=\"k\">||</span> onupdate<span class=\"k\">;</span>","        onrelease <span class=\"k\">=</span> options<span class=\"k\">.</span>onrelease <span class=\"k\">||</span> onrelease<span class=\"k\">;</span>","        ","        <span class=\"c\">//&#26356;&#26032;&#35774;&#32622;</span>","        vertival <span class=\"k\">=</span> options<span class=\"k\">.</span>vertival <span class=\"k\">||</span> <span class=\"s\">'top'</span><span class=\"k\">;</span>","        horizontal <span class=\"k\">=</span> options<span class=\"k\">.</span>horizontal <span class=\"k\">||</span> <span class=\"s\">'left'</span><span class=\"k\">;</span>","","        <span class=\"c\">//&#26356;&#26032;offset</span>","        baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span>offset<span class=\"k\">,</span> options<span class=\"k\">.</span>offset <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","        onupdate<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">{</span>render<span class=\"k\">:</span> render<span class=\"k\">,</span> update<span class=\"k\">:</span> update<span class=\"k\">,</span> release<span class=\"k\">:</span>release<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/g.js'] && (_$jscoverage['baidu/dom/g.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/dom/g.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#25991;&#26723;&#20013;&#33719;&#21462;&#25351;&#23450;&#30340;DOM&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.g</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.g(id)</span>","<span class=\"c\"> * @param {string|HTMLElement} id &#20803;&#32032;&#30340;id&#25110;DOM&#20803;&#32032;.</span>","<span class=\"c\"> * @shortcut g,T.G</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.q</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {HTMLElement|null} &#33719;&#21462;&#30340;&#20803;&#32032;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null,&#22914;&#26524;&#21442;&#25968;&#19981;&#21512;&#27861;&#65292;&#30452;&#25509;&#36820;&#22238;&#21442;&#25968;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>id<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>id<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span> <span class=\"c\">//&#20462;&#25913;IE&#19979;baidu.dom.g(baidu.dom.g('dose_not_exist_id'))&#25253;&#38169;&#30340;bug&#65292;by Meizz, dengping</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'string'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> id <span class=\"k\">||</span> id <span class=\"k\">instanceof</span> String<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>id<span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>id<span class=\"k\">.</span>nodeName <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>id<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">||</span> id<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">9</span><span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> id<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>G <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getAncestorBy.js'] && (_$jscoverage['baidu/dom/getAncestorBy.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getAncestorBy.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#31526;&#21512;&#26465;&#20214;&#30340;&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.getAncestorBy</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getAncestorBy(element, method)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {Function} method &#21028;&#26029;&#31062;&#20808;&#20803;&#32032;&#26465;&#20214;&#30340;&#20989;&#25968;&#65292;function (element)</span>","<span class=\"c\"> * @see baidu.dom.getAncestorByTag,baidu.dom.getAncestorByClass</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|null} &#31526;&#21512;&#26465;&#20214;&#30340;&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getAncestorBy <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> method<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">while</span> <span class=\"k\">((</span>element <span class=\"k\">=</span> element<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>method<span class=\"k\">(</span>element<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> element<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getAncestorByClass.js'] && (_$jscoverage['baidu/dom/getAncestorByClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getAncestorByClass.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.string.trim;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#25351;&#23450;&#20803;&#32032;className&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.getAncestorByClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getAncestorByClass(element, className)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} className &#31062;&#20808;&#20803;&#32032;&#30340;class&#65292;&#21482;&#25903;&#25345;&#21333;&#20010;class</span>","<span class=\"c\"> * @remark &#20351;&#29992;&#32773;&#24212;&#20445;&#35777;&#25552;&#20379;&#30340;className&#21512;&#27861;&#24615;&#65292;&#19981;&#24212;&#21253;&#21547;&#19981;&#21512;&#27861;&#23383;&#31526;&#65292;className&#21512;&#27861;&#23383;&#31526;&#21442;&#32771;&#65306;http://www.w3.org/TR/CSS2/syndata.html&#12290;</span>","<span class=\"c\"> * @see baidu.dom.getAncestorBy,baidu.dom.getAncestorByTag</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|null} &#25351;&#23450;&#20803;&#32032;className&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getAncestorByClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    className <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"(^|</span><span class=\"t\">\\\\</span><span class=\"s\">s)\"</span> <span class=\"k\">+</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>trim<span class=\"k\">(</span>className<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">s|</span><span class=\"t\">\\x</span><span class=\"s\">24)\"</span><span class=\"k\">);</span>","","    <span class=\"k\">while</span> <span class=\"k\">((</span>element <span class=\"k\">=</span> element<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>className<span class=\"k\">.</span>test<span class=\"k\">(</span>element<span class=\"k\">.</span>className<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> element<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getAncestorByTag.js'] && (_$jscoverage['baidu/dom/getAncestorByTag.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getAncestorByTag.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#25351;&#23450;&#26631;&#31614;&#30340;&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.getAncestorByTag</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getAncestorByTag(element, tagName)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} tagName &#31062;&#20808;&#20803;&#32032;&#30340;&#26631;&#31614;&#21517;</span>","<span class=\"c\"> * @see baidu.dom.getAncestorBy,baidu.dom.getAncestorByClass</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|null} &#25351;&#23450;&#26631;&#31614;&#30340;&#26368;&#36817;&#30340;&#31062;&#20808;&#20803;&#32032;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getAncestorByTag <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    tagName <span class=\"k\">=</span> tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","","    <span class=\"k\">while</span> <span class=\"k\">((</span>element <span class=\"k\">=</span> element<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>tagName <span class=\"k\">==</span> tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> element<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getAttr.js'] && (_$jscoverage['baidu/dom/getAttr.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getAttr.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom._NAME_ATTRS;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#23646;&#24615;&#20540;</span>","<span class=\"c\"> * @name baidu.dom.getAttr</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getAttr(element, key)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#33719;&#21462;&#30340;attribute&#38190;&#21517;</span>","<span class=\"c\"> * @shortcut getAttr</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.setAttr,baidu.dom.setAttrs</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string|null} &#30446;&#26631;&#20803;&#32032;&#30340;attribute&#20540;&#65292;&#33719;&#21462;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getAttr <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'style'</span> <span class=\"k\">==</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> element<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    key <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_NAME_ATTRS<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">||</span> key<span class=\"k\">;</span>","    <span class=\"k\">return</span> element<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span>key<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>getAttr <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getAttr<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getComputedStyle.js'] && (_$jscoverage['baidu/dom/getComputedStyle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","<span class=\"c\">///import baidu.dom.getDocument;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;computed style&#20540;&#12290;&#22914;&#26524;&#20803;&#32032;&#30340;&#26679;&#24335;&#20540;&#19981;&#33021;&#34987;&#27983;&#35272;&#22120;&#35745;&#31639;&#65292;&#21017;&#20250;&#36820;&#22238;&#31354;&#23383;&#31526;&#20018;&#65288;IE&#65289;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.dom.getComputedStyle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getComputedStyle(element, key)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#33719;&#21462;&#30340;&#26679;&#24335;&#21517;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @see baidu.dom.getStyle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#30446;&#26631;&#20803;&#32032;&#30340;computed style&#20540;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getComputedStyle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getDocument<span class=\"k\">(</span>element<span class=\"k\">),</span>","        styles<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>defaultView <span class=\"k\">&amp;&amp;</span> doc<span class=\"k\">.</span>defaultView<span class=\"k\">.</span>getComputedStyle<span class=\"k\">)</span> <span class=\"k\">{</span>","        styles <span class=\"k\">=</span> doc<span class=\"k\">.</span>defaultView<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>styles<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> styles<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">||</span> styles<span class=\"k\">.</span>getPropertyValue<span class=\"k\">(</span>key<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span> ","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// 20111204 meizz   &#21435;&#25481;&#19968;&#20010;&#26080;&#29992;&#30340;import baidu.browser.ie</span>"]);
_$jscoverage['baidu/dom/getCurrentStyle.js'] && (_$jscoverage['baidu/dom/getCurrentStyle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * create: 20111204</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getComputedStyle;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340; currentStyle &#20540;&#65292;&#20860;&#23481;&#38750;IE&#27983;&#35272;&#22120;</span>","<span class=\"c\"> * &#26576;&#20123;&#26679;&#24335;&#21517;&#31216;&#25110;&#32773;&#20540;&#38656;&#35201;hack&#30340;&#35805;&#65292;&#38656;&#35201;&#21035;&#22806;&#22788;&#29702;&#65281;</span>","<span class=\"c\"> * @author meizz</span>","<span class=\"c\"> * @name baidu.dom.getCurrentStyle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.currentStyle(element, key)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#33719;&#21462;&#30340;&#26679;&#24335;&#21517;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @see baidu.dom.getStyle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#30446;&#26631;&#20803;&#32032;&#30340;computed style&#20540;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getCurrentStyle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">return</span> element<span class=\"k\">.</span>style<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">||</span>","        <span class=\"k\">(</span>element<span class=\"k\">.</span>currentStyle <span class=\"k\">?</span> element<span class=\"k\">.</span>currentStyle<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> ","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getDocument.js'] && (_$jscoverage['baidu/dom/getDocument.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getDocument.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#25152;&#23646;&#30340;document&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.dom.getDocument</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getDocument(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.getWindow</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLDocument} &#30446;&#26631;&#20803;&#32032;&#25152;&#23646;&#30340;document&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getDocument <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">return</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">9</span> <span class=\"k\">?</span> element <span class=\"k\">:</span> element<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> element<span class=\"k\">.</span>document<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getParent.js'] && (_$jscoverage['baidu/dom/getParent.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All right reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getParent.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#24471;&#20803;&#32032;&#30340;&#29238;&#33410;&#28857;</span>","<span class=\"c\"> * @name baidu.dom.getParent</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getParent(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element   &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @returns {HTMLElement|null} &#29238;&#20803;&#32032;&#65292;&#22914;&#26524;&#25214;&#19981;&#21040;&#29238;&#20803;&#32032;&#65292;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getParent <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"c\">//parentElement&#22312;IE&#19979;&#20934;&#30830;&#65292;parentNode&#22312;ie&#19979;&#21487;&#33021;&#19981;&#20934;&#30830;</span>","    <span class=\"k\">return</span> element<span class=\"k\">.</span>parentElement <span class=\"k\">||</span> element<span class=\"k\">.</span>parentNode <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getPosition.js'] && (_$jscoverage['baidu/dom/getPosition.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getPosition.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.2.0</span>","<span class=\"c\"> * date: 2010/12/16</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * thanks google closure &amp; jquery</span>","<span class=\"c\"> * &#26412;&#20989;&#25968;&#37096;&#20998;&#24605;&#24819;&#26469;&#33258;&#65306;http://code.google.com/p/doctype/wiki/ArticlePageOffset</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.getDocument;</span>","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.browser.opera;</span>","<span class=\"c\">///import baidu.browser.isWebkit;</span>","<span class=\"c\">///import baidu.browser.isGecko;</span>","<span class=\"c\">///import baidu.browser.isStrict;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30456;&#23545;&#20110;&#25972;&#20010;&#25991;&#26723;&#24038;&#19978;&#35282;&#30340;&#20301;&#32622;</span>","<span class=\"c\"> * @name baidu.dom.getPosition</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getPosition(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#30446;&#26631;&#20803;&#32032;&#30340;&#20301;&#32622;&#65292;&#38190;&#20540;&#20026;top&#21644;left&#30340;Object&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getDocument<span class=\"k\">(</span>element<span class=\"k\">),</span> ","        browser <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">,</span>","        getStyle <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">,</span>","    <span class=\"c\">// Gecko 1.9&#29256;&#26412;&#20197;&#19979;&#29992;getBoxObjectFor&#35745;&#31639;&#20301;&#32622;</span>","    <span class=\"c\">// &#20294;&#26159;&#26576;&#20123;&#24773;&#20917;&#19979;&#26159;&#26377;bug&#30340;</span>","    <span class=\"c\">// &#23545;&#20110;&#36825;&#20123;&#26377;bug&#30340;&#24773;&#20917;</span>","    <span class=\"c\">// &#20351;&#29992;&#36882;&#24402;&#26597;&#25214;&#30340;&#26041;&#24335;</span>","        BUGGY_GECKO_BOX_OBJECT <span class=\"k\">=</span> browser<span class=\"k\">.</span>isGecko <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> ","                                 doc<span class=\"k\">.</span>getBoxObjectFor <span class=\"k\">&amp;&amp;</span>","                                 getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'position'</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'absolute'</span> <span class=\"k\">&amp;&amp;</span>","                                 <span class=\"k\">(</span>element<span class=\"k\">.</span>style<span class=\"k\">.</span>top <span class=\"k\">===</span> <span class=\"s\">''</span> <span class=\"k\">||</span> element<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">===</span> <span class=\"s\">''</span><span class=\"k\">),</span>","        pos <span class=\"k\">=</span> <span class=\"k\">{</span><span class=\"s\">\"left\"</span><span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">\"top\"</span><span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">,</span>","        viewport <span class=\"k\">=</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>browser<span class=\"k\">.</span>isStrict<span class=\"k\">)</span> <span class=\"k\">?</span> doc<span class=\"k\">.</span>body <span class=\"k\">:</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>","        parent<span class=\"k\">,</span>","        box<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span><span class=\"k\">(</span>element <span class=\"k\">==</span> viewport<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> pos<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">if</span><span class=\"k\">(</span>element<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// IE and Gecko 1.9+</span>","        ","    \t<span class=\"c\">//&#24403;HTML&#25110;&#32773;BODY&#26377;border width&#26102;, &#21407;&#29983;&#30340;getBoundingClientRect&#36820;&#22238;&#20540;&#26159;&#19981;&#31526;&#21512;&#39044;&#26399;&#30340;</span>","    \t<span class=\"c\">//&#32771;&#34385;&#21040;&#36890;&#24120;&#24773;&#20917;&#19979; HTML&#21644;BODY&#30340;border&#21482;&#20250;&#35774;&#25104;0px,&#25152;&#20197;&#24573;&#30053;&#35813;&#38382;&#39064;.</span>","        box <span class=\"k\">=</span> element<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">();</span>","","        pos<span class=\"k\">.</span>left <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>box<span class=\"k\">.</span>left<span class=\"k\">)</span> <span class=\"k\">+</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollLeft<span class=\"k\">,</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft<span class=\"k\">);</span>","        pos<span class=\"k\">.</span>top  <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>box<span class=\"k\">.</span>top<span class=\"k\">)</span>  <span class=\"k\">+</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollTop<span class=\"k\">,</span>  doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop<span class=\"k\">);</span>","\t    ","        <span class=\"c\">// IE&#20250;&#32473;HTML&#20803;&#32032;&#28155;&#21152;&#19968;&#20010;border&#65292;&#40664;&#35748;&#26159;medium&#65288;2px&#65289;</span>","        <span class=\"c\">// &#20294;&#26159;&#22312;IE 6 7 &#30340;&#24618;&#24322;&#27169;&#24335;&#19979;&#65292;&#21487;&#20197;&#34987;html { border: 0; } &#36825;&#26465;css&#35268;&#21017;&#35206;&#30422;</span>","        <span class=\"c\">// &#22312;IE7&#30340;&#26631;&#20934;&#27169;&#24335;&#19979;&#65292;border&#27704;&#36828;&#26159;2px&#65292;&#36825;&#20010;&#20540;&#36890;&#36807;clientLeft &#21644; clientTop&#21462;&#24471;</span>","        <span class=\"c\">// &#20294;&#26159;&#12290;&#12290;&#12290;&#22312;IE 6 7&#30340;&#24618;&#24322;&#27169;&#24335;&#65292;&#22914;&#26524;&#29992;&#25143;&#20351;&#29992;css&#35206;&#30422;&#20102;&#40664;&#35748;&#30340;medium</span>","        <span class=\"c\">// clientTop&#21644;clientLeft&#19981;&#20250;&#26356;&#26032;</span>","        pos<span class=\"k\">.</span>left <span class=\"k\">-=</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>clientLeft<span class=\"k\">;</span>","        pos<span class=\"k\">.</span>top  <span class=\"k\">-=</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>clientTop<span class=\"k\">;</span>","        ","        <span class=\"k\">var</span> htmlDom <span class=\"k\">=</span> doc<span class=\"k\">.</span>body<span class=\"k\">,</span>","            <span class=\"c\">// &#22312;&#36825;&#37324;&#65292;&#19981;&#20351;&#29992;element.style.borderLeftWidth&#65292;&#21482;&#26377;computedStyle&#26159;&#21487;&#20449;&#30340;</span>","            htmlBorderLeftWidth <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>getStyle<span class=\"k\">(</span>htmlDom<span class=\"k\">,</span> <span class=\"s\">'borderLeftWidth'</span><span class=\"k\">)),</span>","            htmlBorderTopWidth <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>getStyle<span class=\"k\">(</span>htmlDom<span class=\"k\">,</span> <span class=\"s\">'borderTopWidth'</span><span class=\"k\">));</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>browser<span class=\"k\">.</span>isStrict<span class=\"k\">)</span><span class=\"k\">{</span>","            pos<span class=\"k\">.</span>left <span class=\"k\">-=</span> isNaN<span class=\"k\">(</span>htmlBorderLeftWidth<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">2</span> <span class=\"k\">:</span> htmlBorderLeftWidth<span class=\"k\">;</span>","            pos<span class=\"k\">.</span>top  <span class=\"k\">-=</span> isNaN<span class=\"k\">(</span>htmlBorderTopWidth<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">2</span> <span class=\"k\">:</span> htmlBorderTopWidth<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#22240;&#20026;firefox 3.6&#21644;4.0&#22312;&#29305;&#23450;&#39029;&#38754;&#19979;(&#22330;&#26223;&#24453;&#34917;&#20805;)&#37117;&#20250;&#20986;&#29616;1px&#20559;&#31227;,&#25152;&#20197;&#26242;&#26102;&#31227;&#38500;&#35813;&#36923;&#36753;&#20998;&#25903;</span>","<span class=\"c\">     * &#22914;&#26524; 2.0&#29256;&#26412;&#26102;firefox&#20173;&#23384;&#22312;&#38382;&#39064;,&#35813;&#36923;&#36753;&#20998;&#25903;&#23558;&#24443;&#24213;&#31227;&#38500;. by rocy 2011-01-20</span>","<span class=\"c\">    } else if (doc.getBoxObjectFor &amp;&amp; !BUGGY_GECKO_BOX_OBJECT){ // gecko 1.9-</span>","","<span class=\"c\">        // 1.9&#20197;&#19979;&#30340;Gecko&#65292;&#20250;&#24573;&#30053;ancestors&#30340;scroll&#20540;</span>","<span class=\"c\">        // https://bugzilla.mozilla.org/show_bug.cgi?id=328881 and</span>","<span class=\"c\">        // https://bugzilla.mozilla.org/show_bug.cgi?id=330619</span>","","<span class=\"c\">        box = doc.getBoxObjectFor(element);</span>","<span class=\"c\">        var vpBox = doc.getBoxObjectFor(viewport);</span>","<span class=\"c\">        pos.left = box.screenX - vpBox.screenX;</span>","<span class=\"c\">        pos.top  = box.screenY - vpBox.screenY;</span>","<span class=\"c\">        */</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"c\">// safari/opera/firefox</span>","        parent <span class=\"k\">=</span> element<span class=\"k\">;</span>","","        <span class=\"k\">do</span> <span class=\"k\">{</span>","            pos<span class=\"k\">.</span>left <span class=\"k\">+=</span> parent<span class=\"k\">.</span>offsetLeft<span class=\"k\">;</span>","            pos<span class=\"k\">.</span>top  <span class=\"k\">+=</span> parent<span class=\"k\">.</span>offsetTop<span class=\"k\">;</span>","      ","            <span class=\"c\">// safari&#37324;&#38754;&#65292;&#22914;&#26524;&#36941;&#21382;&#21040;&#20102;&#19968;&#20010;fixed&#30340;&#20803;&#32032;&#65292;&#21518;&#38754;&#30340;offset&#37117;&#19981;&#20934;&#20102;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>isWebkit <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> getStyle<span class=\"k\">(</span>parent<span class=\"k\">,</span> <span class=\"s\">'position'</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'fixed'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                pos<span class=\"k\">.</span>left <span class=\"k\">+=</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft<span class=\"k\">;</span>","                pos<span class=\"k\">.</span>top  <span class=\"k\">+=</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop<span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","            parent <span class=\"k\">=</span> parent<span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span>parent <span class=\"k\">&amp;&amp;</span> parent <span class=\"k\">!=</span> element<span class=\"k\">);</span>","","        <span class=\"c\">// &#23545;body offsetTop&#30340;&#20462;&#27491;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>opera <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">||</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>isWebkit <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'position'</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'absolute'</span><span class=\"k\">))</span><span class=\"k\">{</span>","            pos<span class=\"k\">.</span>top  <span class=\"k\">-=</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetTop<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// &#35745;&#31639;&#38500;&#20102;body&#30340;scroll</span>","        parent <span class=\"k\">=</span> element<span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>parent <span class=\"k\">&amp;&amp;</span> parent <span class=\"k\">!=</span> doc<span class=\"k\">.</span>body<span class=\"k\">)</span> <span class=\"k\">{</span>","            pos<span class=\"k\">.</span>left <span class=\"k\">-=</span> parent<span class=\"k\">.</span>scrollLeft<span class=\"k\">;</span>","            <span class=\"c\">// see https://bugs.opera.com/show_bug.cgi?id=249965</span>","<span class=\"c\">//            if (!b.opera || parent.tagName != 'TR') {</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>browser<span class=\"k\">.</span>opera <span class=\"k\">||</span> parent<span class=\"k\">.</span>tagName <span class=\"k\">!=</span> <span class=\"s\">'TR'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                pos<span class=\"k\">.</span>top <span class=\"k\">-=</span> parent<span class=\"k\">.</span>scrollTop<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            parent <span class=\"k\">=</span> parent<span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> pos<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getStyle.js'] && (_$jscoverage['baidu/dom/getStyle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getComputedStyle;</span>","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.dom._styleFilter.filter;</span>","<span class=\"c\">///import baidu.string.toCamelCase;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#26679;&#24335;&#20540;</span>","<span class=\"c\"> * @name baidu.dom.getStyle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getStyle(element, key)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#33719;&#21462;&#30340;&#26679;&#24335;&#21517;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * &#20026;&#20102;&#31934;&#31616;&#20195;&#30721;&#65292;&#26412;&#27169;&#22359;&#40664;&#35748;&#19981;&#23545;&#20219;&#20309;&#27983;&#35272;&#22120;&#36820;&#22238;&#20540;&#36827;&#34892;&#24402;&#19968;&#21270;&#22788;&#29702;&#65288;&#22914;&#20351;&#29992;getStyle&#26102;&#65292;&#19981;&#21516;&#27983;&#35272;&#22120;&#19979;&#21487;&#33021;&#36820;&#22238;rgb&#39068;&#33394;&#25110;hex&#39068;&#33394;&#65289;&#65292;&#20063;&#19981;&#20250;&#20462;&#22797;&#27983;&#35272;&#22120;&#30340;bug&#21644;&#24046;&#24322;&#24615;&#65288;&#22914;&#35774;&#32622;IE&#30340;float&#23646;&#24615;&#21483;styleFloat&#65292;firefox&#21017;&#26159;cssFloat&#65289;&#12290;&lt;br /&gt;</span>","<span class=\"c\"> * baidu.dom._styleFixer&#21644;baidu.dom._styleFilter&#21487;&#20197;&#20026;&#26412;&#27169;&#22359;&#25552;&#20379;&#25903;&#25345;&#12290;&lt;br /&gt;</span>","<span class=\"c\"> * &#20854;&#20013;_styleFilter&#33021;&#23545;&#39068;&#33394;&#21644;px&#36827;&#34892;&#24402;&#19968;&#21270;&#22788;&#29702;&#65292;_styleFixer&#33021;&#23545;display&#65292;float&#65292;opacity&#65292;textOverflow&#30340;&#27983;&#35272;&#22120;&#20860;&#23481;&#24615;bug&#36827;&#34892;&#22788;&#29702;&#12290;\t</span>","<span class=\"c\"> * @shortcut getStyle</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.setStyle,baidu.dom.setStyles, baidu.dom.getComputedStyle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#30446;&#26631;&#20803;&#32032;&#30340;&#26679;&#24335;&#20540;</span>","<span class=\"c\"> */</span>","<span class=\"c\">// TODO</span>","<span class=\"c\">// 1. &#26080;&#27861;&#35299;&#20915;px/em&#21333;&#20301;&#32479;&#19968;&#30340;&#38382;&#39064;&#65288;IE&#65289;</span>","<span class=\"c\">// 2. &#26080;&#27861;&#35299;&#20915;&#26679;&#24335;&#20540;&#20026;&#38750;&#25968;&#23383;&#20540;&#30340;&#24773;&#20917;&#65288;medium&#31561; IE&#65289;</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> dom <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">;</span>","","    element <span class=\"k\">=</span> dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    key <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>toCamelCase<span class=\"k\">(</span>key<span class=\"k\">);</span>","    <span class=\"c\">//computed style, then cascaded style, then explicitly set style.</span>","    <span class=\"k\">var</span> value <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">||</span>","                <span class=\"k\">(</span>element<span class=\"k\">.</span>currentStyle <span class=\"k\">?</span> element<span class=\"k\">.</span>currentStyle<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> ","                dom<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">);</span>","","    <span class=\"c\">// &#22312;&#21462;&#19981;&#21040;&#20540;&#30340;&#26102;&#20505;&#65292;&#29992;fixer&#36827;&#34892;&#20462;&#27491;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>value <span class=\"k\">||</span> value <span class=\"k\">==</span> <span class=\"s\">'auto'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fixer <span class=\"k\">=</span> dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">[</span>key<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>fixer<span class=\"k\">)</span><span class=\"k\">{</span>","            value <span class=\"k\">=</span> fixer<span class=\"k\">.</span>get <span class=\"k\">?</span> fixer<span class=\"k\">.</span>get<span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">:</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> fixer<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/* &#26816;&#26597;&#32467;&#26524;&#36807;&#28388;&#22120; */</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>fixer <span class=\"k\">=</span> dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">)</span> <span class=\"k\">{</span>","        value <span class=\"k\">=</span> fixer<span class=\"k\">.</span>filter<span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> <span class=\"s\">'get'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> value<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>getStyle <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getText.js'] && (_$jscoverage['baidu/dom/getText.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getText.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010/07/16 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#24471;&#20803;&#32032;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#12290;</span>","<span class=\"c\"> * @name baidu.dom.getText</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getText(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {String} &#20803;&#32032;&#20013;&#25991;&#26412;&#30340;&#20869;&#23481;      </span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getText <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> ret <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> childs<span class=\"k\">,</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> l<span class=\"k\">;</span>","","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"c\">//  text &#21644; CDATA &#33410;&#28857;&#65292;&#21462;nodeValue</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        ret <span class=\"k\">+=</span> element<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> element<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">8</span> <span class=\"k\">)</span> <span class=\"k\">{</span><span class=\"c\">// 8 &#26159; comment Node</span>","        childs <span class=\"k\">=</span> element<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span>l <span class=\"k\">=</span> childs<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            ret <span class=\"k\">+=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getText<span class=\"k\">(</span>childs<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> ret<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/getWindow.js'] && (_$jscoverage['baidu/dom/getWindow.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/getWindow.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getDocument;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#25152;&#23646;&#30340;window&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.dom.getWindow</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.getWindow(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.getDocument</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {window} &#30446;&#26631;&#20803;&#32032;&#25152;&#23646;&#30340;window&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getWindow <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getDocument<span class=\"k\">(</span>element<span class=\"k\">);</span>","    ","    <span class=\"c\">// &#27809;&#26377;&#32771;&#34385;&#29256;&#26412;&#20302;&#20110;safari2&#30340;&#24773;&#20917;</span>","    <span class=\"c\">// @see goog/dom/dom.js#goog.dom.DomHelper.prototype.getWindow</span>","    <span class=\"k\">return</span> doc<span class=\"k\">.</span>parentWindow <span class=\"k\">||</span> doc<span class=\"k\">.</span>defaultView <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/hasAttr.js'] && (_$jscoverage['baidu/dom/hasAttr.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/hasAttr.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010/07/16 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26597;&#35810;&#19968;&#20010;&#20803;&#32032;&#26159;&#21542;&#21253;&#21547;&#25351;&#23450;&#30340;&#23646;&#24615;</span>","<span class=\"c\"> * @name baidu.dom.hasAttr</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.hasAttr(element, name)</span>","<span class=\"c\"> * @param {DOMElement|string} element DOM&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} name &#35201;&#26597;&#25214;&#30340;&#23646;&#24615;&#21517;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Boolean} &#26159;&#21542;&#21253;&#21547;&#27492;&#23646;&#24615;        </span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hasAttr <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> name<span class=\"k\">)</span><span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> attr <span class=\"k\">=</span> element<span class=\"k\">.</span>attributes<span class=\"k\">.</span>getNamedItem<span class=\"k\">(</span>name<span class=\"k\">);</span>","    <span class=\"k\">return</span> <span class=\"k\">!!(</span> attr <span class=\"k\">&amp;&amp;</span> attr<span class=\"k\">.</span>specified <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/hasClass.js'] && (_$jscoverage['baidu/dom/hasClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/hasClass.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010-07-06</span>","<span class=\"c\"> */</span>","","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.string.trim;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#20803;&#32032;&#26159;&#21542;&#25317;&#26377;&#25351;&#23450;&#30340;className</span>","<span class=\"c\"> * @name baidu.dom.hasClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.hasClass(element, className)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} className &#35201;&#21028;&#26029;&#30340;className&#65292;&#21487;&#20197;&#26159;&#29992;&#31354;&#26684;&#25340;&#25509;&#30340;&#22810;&#20010;className</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#23545;&#20110;&#21442;&#25968;className&#65292;&#25903;&#25345;&#31354;&#26684;&#20998;&#38548;&#30340;&#22810;&#20010;className</span>","<span class=\"c\"> * @see baidu.dom.addClass, baidu.dom.removeClass</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {Boolean} &#26159;&#21542;&#25317;&#26377;&#25351;&#23450;&#30340;className&#65292;&#22914;&#26524;&#35201;&#26597;&#35810;&#30340;classname&#26377;&#19968;&#20010;&#25110;&#22810;&#20010;&#19981;&#22312;&#20803;&#32032;&#30340;className&#20013;&#65292;&#36820;&#22238;false</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hasClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"c\">// &#23545;&#20110; textNode &#33410;&#28857;&#26469;&#35828;&#27809;&#26377; className</span>","    <span class=\"k\">if</span><span class=\"k\">(!</span>element <span class=\"k\">||</span> <span class=\"k\">!</span>element<span class=\"k\">.</span>className<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> classArray <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>trim<span class=\"k\">(</span>className<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">/\\s+/</span><span class=\"k\">),</span> ","        len <span class=\"k\">=</span> classArray<span class=\"k\">.</span>length<span class=\"k\">;</span>","","    className <span class=\"k\">=</span> element<span class=\"k\">.</span>className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/\\s+/</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\" \"</span><span class=\"k\">);</span>","","    <span class=\"k\">while</span> <span class=\"k\">(</span>len<span class=\"k\">--)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"(^| )\"</span> <span class=\"k\">+</span> classArray<span class=\"k\">[</span>len<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"( |</span><span class=\"t\">\\x</span><span class=\"s\">24)\"</span><span class=\"k\">)).</span>test<span class=\"k\">(</span>className<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/hide.js'] && (_$jscoverage['baidu/dom/hide.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/hide.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#38544;&#34255;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.hide</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.hide(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @shortcut hide</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.show,baidu.dom.toggle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hide <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"none\"</span><span class=\"k\">;</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>hide <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hide<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/insertAfter.js'] && (_$jscoverage['baidu/dom/insertAfter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/insertAfter.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#20803;&#32032;&#28155;&#21152;&#21040;&#22522;&#20934;&#20803;&#32032;&#20043;&#21518;</span>","<span class=\"c\"> * @name baidu.dom.insertAfter</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.insertAfter(newElement, existElement)</span>","<span class=\"c\"> * @param {HTMLElement|string} newElement &#34987;&#28155;&#21152;&#30340;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> * @param {HTMLElement|string} existElement &#22522;&#20934;&#20803;&#32032;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.insertBefore</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#34987;&#28155;&#21152;&#30340;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertAfter <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>newElement<span class=\"k\">,</span> existElement<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> g<span class=\"k\">,</span> existParent<span class=\"k\">;</span>","    g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">;</span>","    newElement <span class=\"k\">=</span> g<span class=\"k\">(</span>newElement<span class=\"k\">);</span>","    existElement <span class=\"k\">=</span> g<span class=\"k\">(</span>existElement<span class=\"k\">);</span>","    existParent <span class=\"k\">=</span> existElement<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>existParent<span class=\"k\">)</span> <span class=\"k\">{</span>","        existParent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> existElement<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> newElement<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/insertBefore.js'] && (_$jscoverage['baidu/dom/insertBefore.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/insertBefore.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#20803;&#32032;&#28155;&#21152;&#21040;&#22522;&#20934;&#20803;&#32032;&#20043;&#21069;</span>","<span class=\"c\"> * @name baidu.dom.insertBefore</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.insertBefore(newElement, existElement)</span>","<span class=\"c\"> * @param {HTMLElement|string} newElement &#34987;&#28155;&#21152;&#30340;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> * @param {HTMLElement|string} existElement &#22522;&#20934;&#20803;&#32032;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.insertAfter</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#34987;&#28155;&#21152;&#30340;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertBefore <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>newElement<span class=\"k\">,</span> existElement<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> g<span class=\"k\">,</span> existParent<span class=\"k\">;</span>","    g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">;</span>","    newElement <span class=\"k\">=</span> g<span class=\"k\">(</span>newElement<span class=\"k\">);</span>","    existElement <span class=\"k\">=</span> g<span class=\"k\">(</span>existElement<span class=\"k\">);</span>","    existParent <span class=\"k\">=</span> existElement<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>existParent<span class=\"k\">)</span> <span class=\"k\">{</span>","        existParent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> existElement<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> newElement<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/insertHTML.js'] && (_$jscoverage['baidu/dom/insertHTML.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.browser.opera;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#22312;&#30446;&#26631;&#20803;&#32032;&#30340;&#25351;&#23450;&#20301;&#32622;&#25554;&#20837;HTML&#20195;&#30721;</span>","<span class=\"c\"> * @name baidu.dom.insertHTML</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.insertHTML(element, position, html)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} position &#25554;&#20837;html&#30340;&#20301;&#32622;&#20449;&#24687;&#65292;&#21462;&#20540;&#20026;beforeBegin,afterBegin,beforeEnd,afterEnd</span>","<span class=\"c\"> * @param {string} html &#35201;&#25554;&#20837;&#30340;html</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * &#23545;&#20110;position&#21442;&#25968;&#65292;&#22823;&#23567;&#20889;&#19981;&#25935;&#24863;&lt;br&gt;</span>","<span class=\"c\"> * &#21442;&#25968;&#30340;&#24847;&#24605;&#65306;beforeBegin&amp;lt;span&amp;gt;afterBegin   this is span! beforeEnd&amp;lt;/span&amp;gt; afterEnd &lt;br /&gt;</span>","<span class=\"c\"> * &#27492;&#22806;&#65292;&#22914;&#26524;&#20351;&#29992;&#26412;&#20989;&#25968;&#25554;&#20837;&#24102;&#26377;script&#26631;&#31614;&#30340;HTML&#23383;&#31526;&#20018;&#65292;script&#26631;&#31614;&#23545;&#24212;&#30340;&#33050;&#26412;&#23558;&#19981;&#20250;&#34987;&#25191;&#34892;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @shortcut insertHTML</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertHTML <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> position<span class=\"k\">,</span> html<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> range<span class=\"k\">,</span>begin<span class=\"k\">;</span>","","    <span class=\"c\">//&#22312;opera&#20013;insertAdjacentHTML&#26041;&#27861;&#23454;&#29616;&#19981;&#26631;&#20934;&#65292;&#22914;&#26524;DOMNodeInserted&#26041;&#27861;&#34987;&#30417;&#21548;&#21017;&#26080;&#27861;&#19968;&#27425;&#25554;&#20837;&#22810;element</span>","    <span class=\"c\">//by lixiaopeng @ 2011-8-19</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>insertAdjacentHTML <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>opera<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>insertAdjacentHTML<span class=\"k\">(</span>position<span class=\"k\">,</span> html<span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"c\">// &#36825;&#37324;&#19981;&#20570;\"undefined\" != typeof(HTMLElement) &amp;&amp; !window.opera&#21028;&#26029;&#65292;&#20854;&#23427;&#27983;&#35272;&#22120;&#23558;&#20986;&#38169;&#65311;&#65281;</span>","        <span class=\"c\">// &#20294;&#26159;&#20854;&#23454;&#20570;&#20102;&#21028;&#26029;&#65292;&#20854;&#23427;&#27983;&#35272;&#22120;&#19979;&#31561;&#20110;&#36825;&#20010;&#20989;&#25968;&#23601;&#19981;&#33021;&#25191;&#34892;&#20102;</span>","        range <span class=\"k\">=</span> element<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>createRange<span class=\"k\">();</span>","        <span class=\"c\">// FF&#19979;range&#30340;&#20301;&#32622;&#35774;&#32622;&#38169;&#35823;&#21487;&#33021;&#23548;&#33268;&#21019;&#24314;&#20986;&#26469;&#30340;fragment&#22312;&#25554;&#20837;dom&#26641;&#20043;&#21518;html&#32467;&#26500;&#20081;&#25481;</span>","        <span class=\"c\">// &#25913;&#29992;range.insertNode&#26469;&#25554;&#20837;html, by wenyuxiang @ 2010-12-14.</span>","        position <span class=\"k\">=</span> position<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>position <span class=\"k\">==</span> <span class=\"s\">'AFTERBEGIN'</span> <span class=\"k\">||</span> position <span class=\"k\">==</span> <span class=\"s\">'BEFOREEND'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>element<span class=\"k\">);</span>","            range<span class=\"k\">.</span>collapse<span class=\"k\">(</span>position <span class=\"k\">==</span> <span class=\"s\">'AFTERBEGIN'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            begin <span class=\"k\">=</span> position <span class=\"k\">==</span> <span class=\"s\">'BEFOREBEGIN'</span><span class=\"k\">;</span>","            range<span class=\"k\">[</span>begin <span class=\"k\">?</span> <span class=\"s\">'setStartBefore'</span> <span class=\"k\">:</span> <span class=\"s\">'setEndAfter'</span><span class=\"k\">](</span>element<span class=\"k\">);</span>","            range<span class=\"k\">.</span>collapse<span class=\"k\">(</span>begin<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>range<span class=\"k\">.</span>createContextualFragment<span class=\"k\">(</span>html<span class=\"k\">));</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","baidu<span class=\"k\">.</span>insertHTML <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertHTML<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/intersect.js'] && (_$jscoverage['baidu/dom/intersect.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/intersect.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26816;&#26597;&#20004;&#20010;&#20803;&#32032;&#26159;&#21542;&#30456;&#20132;</span>","<span class=\"c\"> * @name baidu.dom.intersect</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.intersect(element1, element2)</span>","<span class=\"c\"> * @param {HTMLElement|string} element1 &#35201;&#26816;&#26597;&#30340;&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {HTMLElement|string} element2 &#35201;&#26816;&#26597;&#30340;&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.contains</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#20004;&#20010;&#20803;&#32032;&#26159;&#21542;&#30456;&#20132;&#30340;&#26816;&#26597;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>intersect <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element1<span class=\"k\">,</span> element2<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">,</span> ","        getPosition <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">,</span> ","        max <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">,</span> ","        min <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">;</span>","","    element1 <span class=\"k\">=</span> g<span class=\"k\">(</span>element1<span class=\"k\">);</span>","    element2 <span class=\"k\">=</span> g<span class=\"k\">(</span>element2<span class=\"k\">);</span>","","    <span class=\"k\">var</span> pos1 <span class=\"k\">=</span> getPosition<span class=\"k\">(</span>element1<span class=\"k\">),</span>","        pos2 <span class=\"k\">=</span> getPosition<span class=\"k\">(</span>element2<span class=\"k\">);</span>","","    <span class=\"k\">return</span> max<span class=\"k\">(</span>pos1<span class=\"k\">.</span>left<span class=\"k\">,</span> pos2<span class=\"k\">.</span>left<span class=\"k\">)</span> <span class=\"k\">&lt;=</span> min<span class=\"k\">(</span>pos1<span class=\"k\">.</span>left <span class=\"k\">+</span> element1<span class=\"k\">.</span>offsetWidth<span class=\"k\">,</span> pos2<span class=\"k\">.</span>left <span class=\"k\">+</span> element2<span class=\"k\">.</span>offsetWidth<span class=\"k\">)</span>","        <span class=\"k\">&amp;&amp;</span> max<span class=\"k\">(</span>pos1<span class=\"k\">.</span>top<span class=\"k\">,</span> pos2<span class=\"k\">.</span>top<span class=\"k\">)</span> <span class=\"k\">&lt;=</span> min<span class=\"k\">(</span>pos1<span class=\"k\">.</span>top <span class=\"k\">+</span> element1<span class=\"k\">.</span>offsetHeight<span class=\"k\">,</span> pos2<span class=\"k\">.</span>top <span class=\"k\">+</span> element2<span class=\"k\">.</span>offsetHeight<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/last.js'] && (_$jscoverage['baidu/dom/last.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/last.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._matchNode;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#33410;&#28857;</span>","<span class=\"c\"> * @name baidu.dom.last</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.last(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.first,baidu.dom.prev,baidu.dom.next</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|null} &#30446;&#26631;&#20803;&#32032;&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#33410;&#28857;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>last <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_matchNode<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'previousSibling'</span><span class=\"k\">,</span> <span class=\"s\">'lastChild'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/next.js'] && (_$jscoverage['baidu/dom/next.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/next.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._matchNode;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#19979;&#19968;&#20010;&#20804;&#24351;&#20803;&#32032;&#33410;&#28857;</span>","<span class=\"c\"> * @name baidu.dom.next</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.next(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.first,baidu.dom.last,baidu.dom.prev</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {HTMLElement|null} &#30446;&#26631;&#20803;&#32032;&#30340;&#19979;&#19968;&#20010;&#20804;&#24351;&#20803;&#32032;&#33410;&#28857;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>next <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_matchNode<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'nextSibling'</span><span class=\"k\">,</span> <span class=\"s\">'nextSibling'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/opacity.js'] && (_$jscoverage['baidu/dom/opacity.js'].source = ["<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;HTML&#20803;&#32032;&#30340;&#19981;&#36879;&#26126;&#24615;&#65292;&#36328;&#27983;&#35272;&#22120;&#31181;&#31867;&#20860;&#23481;&#22788;&#29702;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author: meizz</span>","<span class=\"c\"> * @version: 2011-07-11</span>","<span class=\"c\"> * @namespace: baidu.dom.opacity</span>","<span class=\"c\"> * @grammar baidu.dom.opacity(element, opacity)</span>","<span class=\"c\"> * @param {String|HTMLElement}  element &#23450;&#20301;&#25554;&#20837;&#30340;HTML&#30340;&#30446;&#26631;DOM&#20803;&#32032;</span>","<span class=\"c\"> * @param {Number}              opacity &#19981;&#36879;&#26126;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>opacity <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> opacity<span class=\"k\">)</span><span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>opacity <span class=\"k\">=</span> opacity<span class=\"k\">;</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>KHTMLOpacity <span class=\"k\">=</span> opacity<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"s\">\"progid:DXImageTransform.Microsoft.Alpha(opacity:\"</span><span class=\"k\">+</span>","            Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>opacity <span class=\"k\">*</span> <span class=\"s\">100</span><span class=\"k\">)</span> <span class=\"k\">+</span><span class=\"s\">\")\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/prev.js'] && (_$jscoverage['baidu/dom/prev.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/prev.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._matchNode;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#20803;&#32032;&#30340;&#19978;&#19968;&#20010;&#20804;&#24351;&#20803;&#32032;&#33410;&#28857;</span>","<span class=\"c\"> * @name baidu.dom.prev</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.prev(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @see baidu.dom.first,baidu.dom.last,baidu.dom.next</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|null} &#30446;&#26631;&#20803;&#32032;&#30340;&#19978;&#19968;&#20010;&#20804;&#24351;&#20803;&#32032;&#33410;&#28857;&#65292;&#26597;&#25214;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>prev <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_matchNode<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'previousSibling'</span><span class=\"k\">,</span> <span class=\"s\">'previousSibling'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/q.js'] && (_$jscoverage['baidu/dom/q.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/q.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.string.trim;</span>","<span class=\"c\">///import baidu.string.escapeReg;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;className&#33719;&#21462;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.q</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.q(className[, element, tagName])</span>","<span class=\"c\"> * @param {string} className &#20803;&#32032;&#30340;class&#65292;&#21482;&#33021;&#25351;&#23450;&#21333;&#19968;&#30340;class&#65292;&#22914;&#26524;&#20026;&#31354;&#23383;&#31526;&#20018;&#25110;&#32773;&#32431;&#31354;&#30333;&#30340;&#23383;&#31526;&#20018;&#65292;&#36820;&#22238;&#31354;&#25968;&#32452;&#12290;</span>","<span class=\"c\"> * @param {string|HTMLElement} [element] &#24320;&#22987;&#25628;&#32034;&#30340;&#20803;&#32032;&#65292;&#40664;&#35748;&#26159;document&#12290;</span>","<span class=\"c\"> * @param {string} [tagName] &#35201;&#33719;&#21462;&#20803;&#32032;&#30340;&#26631;&#31614;&#21517;&#65292;&#22914;&#26524;&#27809;&#26377;&#20540;&#25110;&#32773;&#20540;&#20026;&#31354;&#23383;&#31526;&#20018;&#25110;&#32773;&#32431;&#31354;&#30333;&#30340;&#23383;&#31526;&#20018;&#65292;&#34920;&#31034;&#19981;&#38480;&#21046;&#26631;&#31614;&#21517;&#12290;</span>","<span class=\"c\"> * @remark &#19981;&#20445;&#35777;&#36820;&#22238;&#25968;&#32452;&#20013;DOM&#33410;&#28857;&#30340;&#39034;&#24207;&#21644;&#25991;&#26723;&#20013;DOM&#33410;&#28857;&#30340;&#39034;&#24207;&#19968;&#33268;&#12290;</span>","<span class=\"c\"> * @shortcut q,T.Q</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.g</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#33719;&#21462;&#30340;&#20803;&#32032;&#38598;&#21512;&#65292;&#26597;&#25214;&#19981;&#21040;&#25110;className&#21442;&#25968;&#38169;&#35823;&#26102;&#36820;&#22238;&#31354;&#25968;&#32452;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>q <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>className<span class=\"k\">,</span> element<span class=\"k\">,</span> tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span> ","    trim <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>trim<span class=\"k\">,</span> ","    len<span class=\"k\">,</span> i<span class=\"k\">,</span> elements<span class=\"k\">,</span> node<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!(</span>className <span class=\"k\">=</span> trim<span class=\"k\">(</span>className<span class=\"k\">)))</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#21021;&#22987;&#21270;element&#21442;&#25968;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'undefined'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","        element <span class=\"k\">=</span> document<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#21021;&#22987;&#21270;tagName&#21442;&#25968;</span>","    tagName <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>tagName <span class=\"k\">=</span> trim<span class=\"k\">(</span>tagName<span class=\"k\">).</span>toUpperCase<span class=\"k\">());</span>","    ","    <span class=\"c\">// &#26597;&#35810;&#20803;&#32032;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">)</span> <span class=\"k\">{</span>","        elements <span class=\"k\">=</span> element<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span>className<span class=\"k\">);</span> ","        len <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            node <span class=\"k\">=</span> elements<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>tagName <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>tagName <span class=\"k\">!=</span> tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            result<span class=\"k\">[</span>result<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> node<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        className <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>","                        <span class=\"s\">\"(^|</span><span class=\"t\">\\\\</span><span class=\"s\">s)\"</span> ","                        <span class=\"k\">+</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>escapeReg<span class=\"k\">(</span>className<span class=\"k\">)</span>","                        <span class=\"k\">+</span> <span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">s|</span><span class=\"t\">\\x</span><span class=\"s\">24)\"</span><span class=\"k\">);</span>","        elements <span class=\"k\">=</span> tagName ","                    <span class=\"k\">?</span> element<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>tagName<span class=\"k\">)</span> ","                    <span class=\"k\">:</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>all <span class=\"k\">||</span> element<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"*\"</span><span class=\"k\">));</span>","        len <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            node <span class=\"k\">=</span> elements<span class=\"k\">[</span>i<span class=\"k\">];</span>","            className<span class=\"k\">.</span>test<span class=\"k\">(</span>node<span class=\"k\">.</span>className<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>result<span class=\"k\">[</span>result<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> node<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>q <span class=\"k\">=</span> baidu<span class=\"k\">.</span>Q <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>q<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/query.js'] && (_$jscoverage['baidu/dom/query.js'].source = ["<span class=\"c\">///import baidu.dom;</span>","","<span class=\"c\">/*!</span>","<span class=\"c\"> * Sizzle CSS Selector Engine</span>","<span class=\"c\"> *  Copyright 2011, The Dojo Foundation</span>","<span class=\"c\"> *  Released under the MIT, BSD, and GPL Licenses.</span>","<span class=\"c\"> *  More information: http://sizzlejs.com/</span>","<span class=\"c\"> */</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;css&#36873;&#25321;&#22120;&#21151;&#33021;   &#36873;&#25321;&#22120;&#25903;&#25345;&#25152;&#26377;&#30340;&lt;a href=\"http://www.w3.org/TR/css3-selectors/\"&gt;css3&#36873;&#25321;&#22120;&lt;/a&gt; &#65292;&#26680;&#24515;&#23454;&#29616;&#37319;&#29992;sizzle&#12290;baidu.dom.query.matches &#35831;&#21442;&#32771;&lt;a href=\"http://wiki.github.com/jeresig/sizzle/\" target=\"_blank\"&gt;sizzle &#25991;&#26723;&lt;/a&gt; </span>","<span class=\"c\"> * @name baidu.dom.query</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.query(selector[, context, results])</span>","<span class=\"c\"> * @param {String} selector &#36873;&#25321;&#22120;&#23450;&#20041;</span>","<span class=\"c\"> * @param {HTMLElement | DOMDocument} [context] &#26597;&#25214;&#30340;&#19978;&#19979;&#25991;</span>","<span class=\"c\"> * @param {Array} [results] &#26597;&#25214;&#30340;&#32467;&#26524;&#20250;&#36861;&#21152;&#21040;&#36825;&#20010;&#25968;&#32452;&#20013;</span>","<span class=\"c\"> * @version 1.5</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">            &#36873;&#25321;&#22120;&#25903;&#25345;&#25152;&#26377;&#30340;&lt;a href=\"http://www.w3.org/TR/css3-selectors/\"&gt;css3&#36873;&#25321;&#22120;&lt;/a&gt; &#65292;&#26680;&#24515;&#23454;&#29616;&#37319;&#29992;sizzle&#12290;&#21487;&#21442;&#32771;&lt;a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\"&gt;sizzle &#25991;&#26723;&lt;/a&gt;</span>","<span class=\"c\">        </span>","<span class=\"c\"> * @see baidu.dom.g, baidu.dom.q,</span>","<span class=\"c\"> * @returns {Array}        &#21253;&#21547;&#25152;&#26377;&#31579;&#36873;&#20986;&#30340;DOM&#20803;&#32032;&#30340;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","<span class=\"k\">var</span> chunker <span class=\"k\">=</span> <span class=\"s\">/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ &gt;+~,(\\[\\\\]+)+|[&gt;+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g</span><span class=\"k\">,</span>","\texpando <span class=\"k\">=</span> <span class=\"s\">\"sizcache\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">),</span>","\tdone <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\ttoString <span class=\"k\">=</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">,</span>","\thasDuplicate <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\tbaseHasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\trBackslash <span class=\"k\">=</span> <span class=\"s\">/\\\\/g</span><span class=\"k\">,</span>","\trReturn <span class=\"k\">=</span> <span class=\"s\">/\\r\\n/g</span><span class=\"k\">,</span>","\trNonWord <span class=\"k\">=</span> <span class=\"s\">/\\W/</span><span class=\"k\">;</span>","","<span class=\"c\">// Here we check if the JavaScript engine is using some sort of</span>","<span class=\"c\">// optimization where it does not always call our comparision</span>","<span class=\"c\">// function. If that is the case, discard the hasDuplicate value.</span>","<span class=\"c\">//   Thus far that includes Google Chrome.</span>","<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">].</span>sort<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\tbaseHasDuplicate <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t<span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">var</span> Sizzle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context<span class=\"k\">,</span> results<span class=\"k\">,</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","\tresults <span class=\"k\">=</span> results <span class=\"k\">||</span> <span class=\"k\">[];</span>","\tcontext <span class=\"k\">=</span> context <span class=\"k\">||</span> document<span class=\"k\">;</span>","","\t<span class=\"k\">var</span> origContext <span class=\"k\">=</span> context<span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">[];</span>","\t<span class=\"k\">}</span>","\t","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>selector <span class=\"k\">||</span> <span class=\"k\">typeof</span> selector <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> results<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">var</span> m<span class=\"k\">,</span> set<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> extra<span class=\"k\">,</span> ret<span class=\"k\">,</span> cur<span class=\"k\">,</span> pop<span class=\"k\">,</span> i<span class=\"k\">,</span>","\t\tprune <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\tcontextXML <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>isXML<span class=\"k\">(</span> context <span class=\"k\">),</span>","\t\tparts <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\tsoFar <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t","\t<span class=\"c\">// Reset the position of the chunker regexp (start from head)</span>","\t<span class=\"k\">do</span> <span class=\"k\">{</span>","\t\tchunker<span class=\"k\">.</span>exec<span class=\"k\">(</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t\tm <span class=\"k\">=</span> chunker<span class=\"k\">.</span>exec<span class=\"k\">(</span> soFar <span class=\"k\">);</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> m <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tsoFar <span class=\"k\">=</span> m<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","\t\t","\t\t\tparts<span class=\"k\">.</span>push<span class=\"k\">(</span> m<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> m<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\textra <span class=\"k\">=</span> m<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span> m <span class=\"k\">);</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> origPOS<span class=\"k\">.</span>exec<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span> <span class=\"k\">&amp;&amp;</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tset <span class=\"k\">=</span> posProcess<span class=\"k\">(</span> parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> parts<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> context<span class=\"k\">,</span> seed <span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tset <span class=\"k\">=</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">?</span>","\t\t\t\t<span class=\"k\">[</span> context <span class=\"k\">]</span> <span class=\"k\">:</span>","\t\t\t\tSizzle<span class=\"k\">(</span> parts<span class=\"k\">.</span>shift<span class=\"k\">(),</span> context <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tselector <span class=\"k\">=</span> parts<span class=\"k\">.</span>shift<span class=\"k\">();</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> selector <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tselector <span class=\"k\">+=</span> parts<span class=\"k\">.</span>shift<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t","\t\t\t\tset <span class=\"k\">=</span> posProcess<span class=\"k\">(</span> selector<span class=\"k\">,</span> set<span class=\"k\">,</span> seed <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// Take a shortcut and set the context if the root selector is an ID</span>","\t\t<span class=\"c\">// (but not if it'll be faster if the inner selector is an ID)</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>seed <span class=\"k\">&amp;&amp;</span> parts<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>contextXML <span class=\"k\">&amp;&amp;</span>","\t\t\t\tExpr<span class=\"k\">.</span>match<span class=\"k\">.</span>ID<span class=\"k\">.</span>test<span class=\"k\">(</span>parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>ID<span class=\"k\">.</span>test<span class=\"k\">(</span>parts<span class=\"k\">[</span>parts<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\tret <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>find<span class=\"k\">(</span> parts<span class=\"k\">.</span>shift<span class=\"k\">(),</span> context<span class=\"k\">,</span> contextXML <span class=\"k\">);</span>","\t\t\tcontext <span class=\"k\">=</span> ret<span class=\"k\">.</span>expr <span class=\"k\">?</span>","\t\t\t\tSizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> ret<span class=\"k\">.</span>expr<span class=\"k\">,</span> ret<span class=\"k\">.</span>set <span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">:</span>","\t\t\t\tret<span class=\"k\">.</span>set<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tret <span class=\"k\">=</span> seed <span class=\"k\">?</span>","\t\t\t\t<span class=\"k\">{</span> expr<span class=\"k\">:</span> parts<span class=\"k\">.</span>pop<span class=\"k\">(),</span> set<span class=\"k\">:</span> makeArray<span class=\"k\">(</span>seed<span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">:</span>","\t\t\t\tSizzle<span class=\"k\">.</span>find<span class=\"k\">(</span> parts<span class=\"k\">.</span>pop<span class=\"k\">(),</span> parts<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"~\"</span> <span class=\"k\">||</span> parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"+\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>parentNode <span class=\"k\">?</span> context<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> context<span class=\"k\">,</span> contextXML <span class=\"k\">);</span>","","\t\t\tset <span class=\"k\">=</span> ret<span class=\"k\">.</span>expr <span class=\"k\">?</span>","\t\t\t\tSizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> ret<span class=\"k\">.</span>expr<span class=\"k\">,</span> ret<span class=\"k\">.</span>set <span class=\"k\">)</span> <span class=\"k\">:</span>","\t\t\t\tret<span class=\"k\">.</span>set<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcheckSet <span class=\"k\">=</span> makeArray<span class=\"k\">(</span> set <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tprune <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcur <span class=\"k\">=</span> parts<span class=\"k\">.</span>pop<span class=\"k\">();</span>","\t\t\t\tpop <span class=\"k\">=</span> cur<span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> cur <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcur <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\tpop <span class=\"k\">=</span> parts<span class=\"k\">.</span>pop<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> pop <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tpop <span class=\"k\">=</span> context<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tExpr<span class=\"k\">.</span>relative<span class=\"k\">[</span> cur <span class=\"k\">](</span> checkSet<span class=\"k\">,</span> pop<span class=\"k\">,</span> contextXML <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tcheckSet <span class=\"k\">=</span> parts <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>checkSet <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcheckSet <span class=\"k\">=</span> set<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>checkSet <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tSizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> cur <span class=\"k\">||</span> selector <span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span>checkSet<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"[object Array]\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>prune <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tresults<span class=\"k\">.</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> checkSet <span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> context <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>checkSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">||</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">].</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> Sizzle<span class=\"k\">.</span>contains<span class=\"k\">(</span>context<span class=\"k\">,</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">]))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tresults<span class=\"k\">.</span>push<span class=\"k\">(</span> set<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">].</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tresults<span class=\"k\">.</span>push<span class=\"k\">(</span> set<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\tmakeArray<span class=\"k\">(</span> checkSet<span class=\"k\">,</span> results <span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tSizzle<span class=\"k\">(</span> extra<span class=\"k\">,</span> origContext<span class=\"k\">,</span> results<span class=\"k\">,</span> seed <span class=\"k\">);</span>","\t\tSizzle<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span> results <span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> results<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>uniqueSort <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span> sortOrder <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\thasDuplicate <span class=\"k\">=</span> baseHasDuplicate<span class=\"k\">;</span>","\t\tresults<span class=\"k\">.</span>sort<span class=\"k\">(</span> sortOrder <span class=\"k\">);</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> hasDuplicate <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> results<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> results<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> results<span class=\"k\">[</span> i <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tresults<span class=\"k\">.</span>splice<span class=\"k\">(</span> i<span class=\"k\">--,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> results<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>matches <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> expr<span class=\"k\">,</span> set <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> Sizzle<span class=\"k\">(</span> expr<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> set <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>matchesSelector <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node<span class=\"k\">,</span> expr <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> Sizzle<span class=\"k\">(</span> expr<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">[</span>node<span class=\"k\">]</span> <span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>find <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> expr<span class=\"k\">,</span> context<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> set<span class=\"k\">,</span> i<span class=\"k\">,</span> len<span class=\"k\">,</span> match<span class=\"k\">,</span> type<span class=\"k\">,</span> left<span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>expr <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">[];</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> Expr<span class=\"k\">.</span>order<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\ttype <span class=\"k\">=</span> Expr<span class=\"k\">.</span>order<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> Expr<span class=\"k\">.</span>leftMatch<span class=\"k\">[</span> type <span class=\"k\">].</span>exec<span class=\"k\">(</span> expr <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tleft <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","\t\t\tmatch<span class=\"k\">.</span>splice<span class=\"k\">(</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> left<span class=\"k\">.</span>substr<span class=\"k\">(</span> left<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">).</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t\t\t\tset <span class=\"k\">=</span> Expr<span class=\"k\">.</span>find<span class=\"k\">[</span> type <span class=\"k\">](</span> match<span class=\"k\">,</span> context<span class=\"k\">,</span> isXML <span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> set <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\texpr <span class=\"k\">=</span> expr<span class=\"k\">.</span>replace<span class=\"k\">(</span> Expr<span class=\"k\">.</span>match<span class=\"k\">[</span> type <span class=\"k\">],</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>set <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tset <span class=\"k\">=</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span>","\t\t\tcontext<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> <span class=\"s\">\"*\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","\t\t\t<span class=\"k\">[];</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> <span class=\"k\">{</span> set<span class=\"k\">:</span> set<span class=\"k\">,</span> expr<span class=\"k\">:</span> expr <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> expr<span class=\"k\">,</span> set<span class=\"k\">,</span> inplace<span class=\"k\">,</span> not <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> match<span class=\"k\">,</span> anyFound<span class=\"k\">,</span>","\t\ttype<span class=\"k\">,</span> found<span class=\"k\">,</span> item<span class=\"k\">,</span> filter<span class=\"k\">,</span> left<span class=\"k\">,</span>","\t\ti<span class=\"k\">,</span> pass<span class=\"k\">,</span>","\t\told <span class=\"k\">=</span> expr<span class=\"k\">,</span>","\t\tresult <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\tcurLoop <span class=\"k\">=</span> set<span class=\"k\">,</span>","\t\tisXMLFilter <span class=\"k\">=</span> set <span class=\"k\">&amp;&amp;</span> set<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> Sizzle<span class=\"k\">.</span>isXML<span class=\"k\">(</span> set<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","","\t<span class=\"k\">while</span> <span class=\"k\">(</span> expr <span class=\"k\">&amp;&amp;</span> set<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> Expr<span class=\"k\">.</span>filter <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> Expr<span class=\"k\">.</span>leftMatch<span class=\"k\">[</span> type <span class=\"k\">].</span>exec<span class=\"k\">(</span> expr <span class=\"k\">))</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tfilter <span class=\"k\">=</span> Expr<span class=\"k\">.</span>filter<span class=\"k\">[</span> type <span class=\"k\">];</span>","\t\t\t\tleft <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t\t\t\tanyFound <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t\t\t\tmatch<span class=\"k\">.</span>splice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> left<span class=\"k\">.</span>substr<span class=\"k\">(</span> left<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">continue</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> curLoop <span class=\"k\">===</span> result <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tresult <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>preFilter<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tmatch <span class=\"k\">=</span> Expr<span class=\"k\">.</span>preFilter<span class=\"k\">[</span> type <span class=\"k\">](</span> match<span class=\"k\">,</span> curLoop<span class=\"k\">,</span> inplace<span class=\"k\">,</span> result<span class=\"k\">,</span> not<span class=\"k\">,</span> isXMLFilter <span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tanyFound <span class=\"k\">=</span> found <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">continue</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">(</span>item <span class=\"k\">=</span> curLoop<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> item <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tfound <span class=\"k\">=</span> filter<span class=\"k\">(</span> item<span class=\"k\">,</span> match<span class=\"k\">,</span> i<span class=\"k\">,</span> curLoop <span class=\"k\">);</span>","\t\t\t\t\t\t\tpass <span class=\"k\">=</span> not <span class=\"k\">^</span> found<span class=\"k\">;</span>","","\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> inplace <span class=\"k\">&amp;&amp;</span> found <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> pass <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t\tanyFound <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t\tcurLoop<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> pass <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\tresult<span class=\"k\">.</span>push<span class=\"k\">(</span> item <span class=\"k\">);</span>","\t\t\t\t\t\t\t\tanyFound <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> found <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>inplace <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcurLoop <span class=\"k\">=</span> result<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\texpr <span class=\"k\">=</span> expr<span class=\"k\">.</span>replace<span class=\"k\">(</span> Expr<span class=\"k\">.</span>match<span class=\"k\">[</span> type <span class=\"k\">],</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>anyFound <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">[];</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// Improper expression</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> expr <span class=\"k\">===</span> old <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> anyFound <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tSizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> expr <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t\told <span class=\"k\">=</span> expr<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> curLoop<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","Sizzle<span class=\"k\">.</span>error <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> msg <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">throw</span> <span class=\"s\">\"Syntax error, unrecognized expression: \"</span> <span class=\"k\">+</span> msg<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Utility function for retreiving the text value of an array of DOM nodes</span>","<span class=\"c\"> * @param {Array|Element} elem</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> getText <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>getText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i<span class=\"k\">,</span> node<span class=\"k\">,</span>","\t\tnodeType <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType<span class=\"k\">,</span>","\t\tret <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// Use textContent || innerText for elements</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>textContent <span class=\"k\">===</span> <span class=\"s\">'string'</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>textContent<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>innerText <span class=\"k\">===</span> <span class=\"s\">'string'</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// Replace IE's carriage returns</span>","\t\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>innerText<span class=\"k\">.</span>replace<span class=\"k\">(</span> rReturn<span class=\"k\">,</span> <span class=\"s\">''</span> <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// Traverse it's children</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> elem<span class=\"k\">;</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tret <span class=\"k\">+=</span> getText<span class=\"k\">(</span> elem <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> nodeType <span class=\"k\">===</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","\t\t<span class=\"c\">// If no nodeType, this is expected to be an array</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> elem<span class=\"k\">[</span>i<span class=\"k\">]);</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// Do not traverse comment nodes</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">8</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tret <span class=\"k\">+=</span> getText<span class=\"k\">(</span> node <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">return</span> ret<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> Expr <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>selectors <span class=\"k\">=</span> <span class=\"k\">{</span>","\torder<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">\"ID\"</span><span class=\"k\">,</span> <span class=\"s\">\"NAME\"</span><span class=\"k\">,</span> <span class=\"s\">\"TAG\"</span> <span class=\"k\">],</span>","","\tmatch<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tID<span class=\"k\">:</span> <span class=\"s\">/#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/</span><span class=\"k\">,</span>","\t\tCLASS<span class=\"k\">:</span> <span class=\"s\">/\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/</span><span class=\"k\">,</span>","\t\tNAME<span class=\"k\">:</span> <span class=\"s\">/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['\"]*\\]/</span><span class=\"k\">,</span>","\t\tATTR<span class=\"k\">:</span> <span class=\"s\">/\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(?:(['\"])(.*?)\\3|(#?(?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)*)|)|)\\s*\\]/</span><span class=\"k\">,</span>","\t\tTAG<span class=\"k\">:</span> <span class=\"s\">/^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/</span><span class=\"k\">,</span>","\t\tCHILD<span class=\"k\">:</span> <span class=\"s\">/:(only|nth|last|first)-child(?:\\(\\s*(even|odd|(?:[+\\-]?\\d+|(?:[+\\-]?\\d*)?n\\s*(?:[+\\-]\\s*\\d+)?))\\s*\\))?/</span><span class=\"k\">,</span>","\t\tPOS<span class=\"k\">:</span> <span class=\"s\">/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/</span><span class=\"k\">,</span>","\t\tPSEUDO<span class=\"k\">:</span> <span class=\"s\">/:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\tleftMatch<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","\tattrMap<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">\"class\"</span><span class=\"k\">:</span> <span class=\"s\">\"className\"</span><span class=\"k\">,</span>","\t\t<span class=\"s\">\"for\"</span><span class=\"k\">:</span> <span class=\"s\">\"htmlFor\"</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\tattrHandle<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\thref<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"href\"</span> <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\ttype<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span> <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\trelative<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">\"+\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>checkSet<span class=\"k\">,</span> part<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> isPartStr <span class=\"k\">=</span> <span class=\"k\">typeof</span> part <span class=\"k\">===</span> <span class=\"s\">\"string\"</span><span class=\"k\">,</span>","\t\t\t\tisTag <span class=\"k\">=</span> isPartStr <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rNonWord<span class=\"k\">.</span>test<span class=\"k\">(</span> part <span class=\"k\">),</span>","\t\t\t\tisPartStrNotTag <span class=\"k\">=</span> isPartStr <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isTag<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> isTag <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpart <span class=\"k\">=</span> part<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> checkSet<span class=\"k\">.</span>length<span class=\"k\">,</span> elem<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{}</span>","","\t\t\t\t\tcheckSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> isPartStrNotTag <span class=\"k\">||</span> elem <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> part <span class=\"k\">?</span>","\t\t\t\t\t\telem <span class=\"k\">||</span> <span class=\"k\">false</span> <span class=\"k\">:</span>","\t\t\t\t\t\telem <span class=\"k\">===</span> part<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> isPartStrNotTag <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tSizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> part<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t<span class=\"s\">\"&gt;\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> checkSet<span class=\"k\">,</span> part <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> elem<span class=\"k\">,</span>","\t\t\t\tisPartStr <span class=\"k\">=</span> <span class=\"k\">typeof</span> part <span class=\"k\">===</span> <span class=\"s\">\"string\"</span><span class=\"k\">,</span>","\t\t\t\ti <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\tl <span class=\"k\">=</span> checkSet<span class=\"k\">.</span>length<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> isPartStr <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rNonWord<span class=\"k\">.</span>test<span class=\"k\">(</span> part <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpart <span class=\"k\">=</span> part<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\telem <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">];</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> parent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","\t\t\t\t\t\tcheckSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> parent<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> part <span class=\"k\">?</span> parent <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\telem <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">];</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcheckSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> isPartStr <span class=\"k\">?</span>","\t\t\t\t\t\t\telem<span class=\"k\">.</span>parentNode <span class=\"k\">:</span>","\t\t\t\t\t\t\telem<span class=\"k\">.</span>parentNode <span class=\"k\">===</span> part<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> isPartStr <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tSizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> part<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t<span class=\"s\">\"\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>checkSet<span class=\"k\">,</span> part<span class=\"k\">,</span> isXML<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> nodeCheck<span class=\"k\">,</span>","\t\t\t\tdoneName <span class=\"k\">=</span> done<span class=\"k\">++,</span>","\t\t\t\tcheckFn <span class=\"k\">=</span> dirCheck<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> part <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rNonWord<span class=\"k\">.</span>test<span class=\"k\">(</span> part <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpart <span class=\"k\">=</span> part<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t\tnodeCheck <span class=\"k\">=</span> part<span class=\"k\">;</span>","\t\t\t\tcheckFn <span class=\"k\">=</span> dirNodeCheck<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tcheckFn<span class=\"k\">(</span> <span class=\"s\">\"parentNode\"</span><span class=\"k\">,</span> part<span class=\"k\">,</span> doneName<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> nodeCheck<span class=\"k\">,</span> isXML <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t<span class=\"s\">\"~\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> checkSet<span class=\"k\">,</span> part<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> nodeCheck<span class=\"k\">,</span>","\t\t\t\tdoneName <span class=\"k\">=</span> done<span class=\"k\">++,</span>","\t\t\t\tcheckFn <span class=\"k\">=</span> dirCheck<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> part <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rNonWord<span class=\"k\">.</span>test<span class=\"k\">(</span> part <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpart <span class=\"k\">=</span> part<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t\tnodeCheck <span class=\"k\">=</span> part<span class=\"k\">;</span>","\t\t\t\tcheckFn <span class=\"k\">=</span> dirNodeCheck<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tcheckFn<span class=\"k\">(</span> <span class=\"s\">\"previousSibling\"</span><span class=\"k\">,</span> part<span class=\"k\">,</span> doneName<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> nodeCheck<span class=\"k\">,</span> isXML <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\tfind<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementById <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> m <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","\t\t\t\t<span class=\"c\">// Check parentNode to catch when Blackberry 4.6 returns</span>","\t\t\t\t<span class=\"c\">// nodes that are no longer in the document #6963</span>","\t\t\t\t<span class=\"k\">return</span> m <span class=\"k\">&amp;&amp;</span> m<span class=\"k\">.</span>parentNode <span class=\"k\">?</span> <span class=\"k\">[</span>m<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">[];</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tNAME<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> ret <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\t\t\t\tresults <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementsByName<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> results<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> results<span class=\"k\">[</span>i<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">)</span> <span class=\"k\">===</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tret<span class=\"k\">.</span>push<span class=\"k\">(</span> results<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> ret<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> ret<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tTAG<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tpreFilter<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tCLASS<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> curLoop<span class=\"k\">,</span> inplace<span class=\"k\">,</span> result<span class=\"k\">,</span> not<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tmatch <span class=\"k\">=</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> match<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> elem<span class=\"k\">;</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> curLoop<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> not <span class=\"k\">^</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>className <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"s\">\" \"</span> <span class=\"k\">+</span> elem<span class=\"k\">.</span>className <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/[\\t\\n\\r]/g</span><span class=\"k\">,</span> <span class=\"s\">\" \"</span><span class=\"k\">).</span>indexOf<span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>inplace <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tresult<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> inplace <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcurLoop<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tTAG<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> curLoop <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tCHILD<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"nth\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tSizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\+|\\s*/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","\t\t\t\t<span class=\"c\">// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'</span>","\t\t\t\t<span class=\"k\">var</span> test <span class=\"k\">=</span> <span class=\"s\">/(-?)(\\d*)(?:n([+\\-]?\\d*))?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>","\t\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"even\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"2n\"</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"odd\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"2n+1\"</span> <span class=\"k\">||</span>","\t\t\t\t\t<span class=\"k\">!</span><span class=\"s\">/\\D/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"0n+\"</span> <span class=\"k\">+</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","","\t\t\t\t<span class=\"c\">// calculate the numbers (first)n+(last) including if they are negative</span>","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">(</span>test<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"k\">(</span>test<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">))</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">=</span> test<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tSizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"c\">// TODO: Move to normal caching system</span>","\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> done<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tATTR<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> curLoop<span class=\"k\">,</span> inplace<span class=\"k\">,</span> result<span class=\"k\">,</span> not<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t\t\t","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">&amp;&amp;</span> Expr<span class=\"k\">.</span>attrMap<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> Expr<span class=\"k\">.</span>attrMap<span class=\"k\">[</span>name<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"c\">// Handle if an un-quoted value was used</span>","\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>replace<span class=\"k\">(</span> rBackslash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"~=\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tPSEUDO<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> curLoop<span class=\"k\">,</span> inplace<span class=\"k\">,</span> result<span class=\"k\">,</span> not <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"not\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// If we're dealing with a complex expression, or a simple one</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> chunker<span class=\"k\">.</span>exec<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"s\">/^\\w/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tmatch<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">=</span> Sizzle<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> curLoop<span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> ret <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> curLoop<span class=\"k\">,</span> inplace<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">^</span> not<span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>inplace <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tresult<span class=\"k\">.</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span> result<span class=\"k\">,</span> ret <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>POS<span class=\"k\">.</span>test<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">||</span> Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>CHILD<span class=\"k\">.</span>test<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tPOS<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tmatch<span class=\"k\">.</span>unshift<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t","\tfilters<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tenabled<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>type <span class=\"k\">!==</span> <span class=\"s\">\"hidden\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tdisabled<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tchecked<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>checked <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t","\t\tselected<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// Accessing this property makes selected-by-default</span>","\t\t\t<span class=\"c\">// options in Safari work properly</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\telem<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>selectedIndex<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>selected <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tparent<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">!!</span>elem<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tempty<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\thas<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">!!</span>Sizzle<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> elem <span class=\"k\">).</span>length<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\theader<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"s\">/h\\d/i</span><span class=\"k\">).</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\ttext<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> attr <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span> <span class=\"k\">),</span> type <span class=\"k\">=</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t\t<span class=\"c\">// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc) </span>","\t\t\t<span class=\"c\">// use getAttribute instead to test this case</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"text\"</span> <span class=\"k\">===</span> type <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> attr <span class=\"k\">===</span> type <span class=\"k\">||</span> attr <span class=\"k\">===</span> <span class=\"k\">null</span> <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tradio<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"radio\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tcheckbox<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"checkbox\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tfile<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"file\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tpassword<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"password\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tsubmit<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">||</span> name <span class=\"k\">===</span> <span class=\"s\">\"button\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"submit\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\timage<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"image\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\treset<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">||</span> name <span class=\"k\">===</span> <span class=\"s\">\"button\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"reset\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tbutton<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","\t\t\t<span class=\"k\">return</span> name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"button\"</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>type <span class=\"k\">||</span> name <span class=\"k\">===</span> <span class=\"s\">\"button\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tinput<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"s\">/input|select|textarea|button/i</span><span class=\"k\">).</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tfocus<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem <span class=\"k\">===</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>activeElement<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tsetFilters<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tfirst<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tlast<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match<span class=\"k\">,</span> array <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">===</span> array<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\teven<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">%</span> <span class=\"s\">2</span> <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\todd<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">%</span> <span class=\"s\">2</span> <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tlt<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">&lt;</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tgt<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> i <span class=\"k\">&gt;</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tnth<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span> <span class=\"k\">===</span> i<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\teq<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">0</span> <span class=\"k\">===</span> i<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tfilter<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tPSEUDO<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match<span class=\"k\">,</span> i<span class=\"k\">,</span> array <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span>","\t\t\t\tfilter <span class=\"k\">=</span> Expr<span class=\"k\">.</span>filters<span class=\"k\">[</span> name <span class=\"k\">];</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> filter <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> filter<span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match<span class=\"k\">,</span> array <span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> name <span class=\"k\">===</span> <span class=\"s\">\"contains\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>textContent <span class=\"k\">||</span> elem<span class=\"k\">.</span>innerText <span class=\"k\">||</span> getText<span class=\"k\">([</span> elem <span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">).</span>indexOf<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">])</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> name <span class=\"k\">===</span> <span class=\"s\">\"not\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> not <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> not<span class=\"k\">.</span>length<span class=\"k\">;</span> j <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> j<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> not<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">===</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tSizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> name <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tCHILD<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> first<span class=\"k\">,</span> last<span class=\"k\">,</span>","\t\t\t\tdoneName<span class=\"k\">,</span> parent<span class=\"k\">,</span> cache<span class=\"k\">,</span>","\t\t\t\tcount<span class=\"k\">,</span> diff<span class=\"k\">,</span>","\t\t\t\ttype <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span>","\t\t\t\tnode <span class=\"k\">=</span> elem<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">switch</span> <span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"only\"</span><span class=\"k\">:</span>","\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"first\"</span><span class=\"k\">:</span>","\t\t\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">)</span>\t <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span> ","\t\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> ","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"first\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span> ","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> ","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\tnode <span class=\"k\">=</span> elem<span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"last\"</span><span class=\"k\">:</span>","\t\t\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">)</span>\t <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span> ","\t\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> ","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"nth\"</span><span class=\"k\">:</span>","\t\t\t\t\tfirst <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","\t\t\t\t\tlast <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> first <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> last <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t","\t\t\t\t\tdoneName <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t\t\tparent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","\t","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> parent <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>parent<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">!==</span> doneName <span class=\"k\">||</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>nodeIndex<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcount <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\t\t\t\t","\t\t\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> node <span class=\"k\">=</span> parent<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> node<span class=\"k\">;</span> node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\tnode<span class=\"k\">.</span>nodeIndex <span class=\"k\">=</span> <span class=\"k\">++</span>count<span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">}</span> ","","\t\t\t\t\t\tparent<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> doneName<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t","\t\t\t\t\tdiff <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeIndex <span class=\"k\">-</span> last<span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> first <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> diff <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span> diff <span class=\"k\">%</span> first <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> diff <span class=\"k\">/</span> first <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">)</span> <span class=\"k\">===</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tTAG<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>match <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!!</span>elem<span class=\"k\">.</span>nodeName <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t","\t\tCLASS<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"s\">\" \"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>className <span class=\"k\">||</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"class\"</span><span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tATTR<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span>","\t\t\t\tresult <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>attr <span class=\"k\">?</span>","\t\t\t\t\tSizzle<span class=\"k\">.</span>attr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">:</span>","\t\t\t\t\tExpr<span class=\"k\">.</span>attrHandle<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">?</span>","\t\t\t\t\tExpr<span class=\"k\">.</span>attrHandle<span class=\"k\">[</span> name <span class=\"k\">](</span> elem <span class=\"k\">)</span> <span class=\"k\">:</span>","\t\t\t\t\telem<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","\t\t\t\t\t\telem<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">:</span>","\t\t\t\t\t\telem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> name <span class=\"k\">),</span>","\t\t\t\tvalue <span class=\"k\">=</span> result <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","\t\t\t\ttype <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span>","\t\t\t\tcheck <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">];</span>","","\t\t\t<span class=\"k\">return</span> result <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"!=\"</span> <span class=\"k\">:</span>","\t\t\t\t<span class=\"k\">!</span>type <span class=\"k\">&amp;&amp;</span> Sizzle<span class=\"k\">.</span>attr <span class=\"k\">?</span>","\t\t\t\tresult <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue <span class=\"k\">===</span> check <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"*=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>check<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"~=\"</span> <span class=\"k\">?</span>","\t\t\t\t<span class=\"k\">(</span><span class=\"s\">\" \"</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">).</span>indexOf<span class=\"k\">(</span>check<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">:</span>","\t\t\t\t<span class=\"k\">!</span>check <span class=\"k\">?</span>","\t\t\t\tvalue <span class=\"k\">&amp;&amp;</span> result <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"!=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue <span class=\"k\">!==</span> check <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"^=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>check<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"$=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue<span class=\"k\">.</span>substr<span class=\"k\">(</span>value<span class=\"k\">.</span>length <span class=\"k\">-</span> check<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">===</span> check <span class=\"k\">:</span>","\t\t\t\ttype <span class=\"k\">===</span> <span class=\"s\">\"|=\"</span> <span class=\"k\">?</span>","\t\t\t\tvalue <span class=\"k\">===</span> check <span class=\"k\">||</span> value<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> check<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">===</span> check <span class=\"k\">+</span> <span class=\"s\">\"-\"</span> <span class=\"k\">:</span>","\t\t\t\t<span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tPOS<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match<span class=\"k\">,</span> i<span class=\"k\">,</span> array <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span>","\t\t\t\tfilter <span class=\"k\">=</span> Expr<span class=\"k\">.</span>setFilters<span class=\"k\">[</span> name <span class=\"k\">];</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> filter <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> filter<span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> match<span class=\"k\">,</span> array <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> origPOS <span class=\"k\">=</span> Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>POS<span class=\"k\">,</span>","\tfescape <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>all<span class=\"k\">,</span> num<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>num <span class=\"k\">-</span> <span class=\"s\">0</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> type <span class=\"k\">in</span> Expr<span class=\"k\">.</span>match <span class=\"k\">)</span> <span class=\"k\">{</span>","\tExpr<span class=\"k\">.</span>match<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> Expr<span class=\"k\">.</span>match<span class=\"k\">[</span> type <span class=\"k\">].</span>source <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"s\">/(?![^\\[]*\\])(?![^\\(]*\\))/</span><span class=\"k\">.</span>source<span class=\"k\">)</span> <span class=\"k\">);</span>","\tExpr<span class=\"k\">.</span>leftMatch<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">/(^(?:.|\\r|\\n)*?)/</span><span class=\"k\">.</span>source <span class=\"k\">+</span> Expr<span class=\"k\">.</span>match<span class=\"k\">[</span> type <span class=\"k\">].</span>source<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\\\(\\d+)/g</span><span class=\"k\">,</span> fescape<span class=\"k\">)</span> <span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> makeArray <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> array<span class=\"k\">,</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","\tarray <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span> array<span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tresults<span class=\"k\">.</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> array <span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> results<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t","\t<span class=\"k\">return</span> array<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Perform a simple check to determine if the browser is capable of</span>","<span class=\"c\">// converting a NodeList to an array using builtin methods.</span>","<span class=\"c\">// Also verifies that the returned array holds DOM nodes</span>","<span class=\"c\">// (which is not the case in the Blackberry browser)</span>","<span class=\"k\">try</span> <span class=\"k\">{</span>","\tArray<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>childNodes<span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeType<span class=\"k\">;</span>","","<span class=\"c\">// Provide a fallback method if it does not work</span>","<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","\tmakeArray <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> array<span class=\"k\">,</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tret <span class=\"k\">=</span> results <span class=\"k\">||</span> <span class=\"k\">[];</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span>array<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"[object Array]\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tArray<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span> ret<span class=\"k\">,</span> array <span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> array<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">\"number\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> l <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tret<span class=\"k\">.</span>push<span class=\"k\">(</span> array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> array<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tret<span class=\"k\">.</span>push<span class=\"k\">(</span> array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> ret<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> sortOrder<span class=\"k\">,</span> siblingCheck<span class=\"k\">;</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">)</span> <span class=\"k\">{</span>","\tsortOrder <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\thasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>a<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">||</span> <span class=\"k\">!</span>b<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> a<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> a<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span>b<span class=\"k\">)</span> <span class=\"k\">&amp;</span> <span class=\"s\">4</span> <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\tsortOrder <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// The nodes are identical, we can exit early</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\thasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t\t<span class=\"c\">// Fallback to using sourceIndex (in IE) if it's available on both nodes</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> a<span class=\"k\">.</span>sourceIndex <span class=\"k\">&amp;&amp;</span> b<span class=\"k\">.</span>sourceIndex <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> a<span class=\"k\">.</span>sourceIndex <span class=\"k\">-</span> b<span class=\"k\">.</span>sourceIndex<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">var</span> al<span class=\"k\">,</span> bl<span class=\"k\">,</span>","\t\t\tap <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\t\tbp <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\t\taup <span class=\"k\">=</span> a<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","\t\t\tbup <span class=\"k\">=</span> b<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","\t\t\tcur <span class=\"k\">=</span> aup<span class=\"k\">;</span>","","\t\t<span class=\"c\">// If the nodes are siblings (or identical) we can do a quick check</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> aup <span class=\"k\">===</span> bup <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> siblingCheck<span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">);</span>","","\t\t<span class=\"c\">// If no parents were found then the nodes are disconnected</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>aup <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>bup <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// Otherwise they're somewhere else in the tree so we need</span>","\t\t<span class=\"c\">// to build up a full list of the parentNodes for comparison</span>","\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tap<span class=\"k\">.</span>unshift<span class=\"k\">(</span> cur <span class=\"k\">);</span>","\t\t\tcur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\tcur <span class=\"k\">=</span> bup<span class=\"k\">;</span>","","\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tbp<span class=\"k\">.</span>unshift<span class=\"k\">(</span> cur <span class=\"k\">);</span>","\t\t\tcur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\tal <span class=\"k\">=</span> ap<span class=\"k\">.</span>length<span class=\"k\">;</span>","\t\tbl <span class=\"k\">=</span> bp<span class=\"k\">.</span>length<span class=\"k\">;</span>","","\t\t<span class=\"c\">// Start walking down the tree looking for a discrepancy</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> al <span class=\"k\">&amp;&amp;</span> i <span class=\"k\">&lt;</span> bl<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> ap<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">!==</span> bp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> siblingCheck<span class=\"k\">(</span> ap<span class=\"k\">[</span>i<span class=\"k\">],</span> bp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// We ended someplace up the tree so do a sibling check</span>","\t\t<span class=\"k\">return</span> i <span class=\"k\">===</span> al <span class=\"k\">?</span>","\t\t\tsiblingCheck<span class=\"k\">(</span> a<span class=\"k\">,</span> bp<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","\t\t\tsiblingCheck<span class=\"k\">(</span> ap<span class=\"k\">[</span>i<span class=\"k\">],</span> b<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tsiblingCheck <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b<span class=\"k\">,</span> ret <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> ret<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">var</span> cur <span class=\"k\">=</span> a<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","","\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> cur <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tcur <span class=\"k\">=</span> cur<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">// Check to see if the browser returns elements by name when</span>","<span class=\"c\">// querying by getElementById (and provide a workaround)</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"c\">// We're going to inject a fake input element with a specified name</span>","\t<span class=\"k\">var</span> form <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">),</span>","\t\tid <span class=\"k\">=</span> <span class=\"s\">\"script\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","\t\troot <span class=\"k\">=</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","\tform<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;a name='\"</span> <span class=\"k\">+</span> id <span class=\"k\">+</span> <span class=\"s\">\"'/&gt;\"</span><span class=\"k\">;</span>","","\t<span class=\"c\">// Inject it into the root element, check its status, and remove it quickly</span>","\troot<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span> form<span class=\"k\">,</span> root<span class=\"k\">.</span>firstChild <span class=\"k\">);</span>","","\t<span class=\"c\">// The workaround has to do additional checks after a getElementById</span>","\t<span class=\"c\">// Which slows things down for other browsers (hence the branching)</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> id <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tExpr<span class=\"k\">.</span>find<span class=\"k\">.</span>ID <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementById <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> m <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","","\t\t\t\t<span class=\"k\">return</span> m <span class=\"k\">?</span>","\t\t\t\t\tm<span class=\"k\">.</span>id <span class=\"k\">===</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> m<span class=\"k\">.</span>getAttributeNode <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> m<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">).</span>nodeValue <span class=\"k\">===</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">?</span>","\t\t\t\t\t\t<span class=\"k\">[</span>m<span class=\"k\">]</span> <span class=\"k\">:</span>","\t\t\t\t\t\tundefined <span class=\"k\">:</span>","\t\t\t\t\t<span class=\"k\">[];</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\tExpr<span class=\"k\">.</span>filter<span class=\"k\">.</span>ID <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> node <span class=\"k\">=</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>getAttributeNode <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeValue <span class=\"k\">===</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\troot<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> form <span class=\"k\">);</span>","","\t<span class=\"c\">// release memory in IE</span>","\troot <span class=\"k\">=</span> form <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"c\">// Check to see if the browser returns only elements</span>","\t<span class=\"c\">// when doing getElementsByTagName(\"*\")</span>","","\t<span class=\"c\">// Create a fake element</span>","\t<span class=\"k\">var</span> div <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","\tdiv<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> document<span class=\"k\">.</span>createComment<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">);</span>","","\t<span class=\"c\">// Make sure no comments are found</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span> div<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"*\"</span><span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tExpr<span class=\"k\">.</span>find<span class=\"k\">.</span>TAG <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> results <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">);</span>","","\t\t\t<span class=\"c\">// Filter out possible comments</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> tmp <span class=\"k\">=</span> <span class=\"k\">[];</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> results<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> results<span class=\"k\">[</span>i<span class=\"k\">].</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\ttmp<span class=\"k\">.</span>push<span class=\"k\">(</span> results<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tresults <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">return</span> results<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"c\">// Check to see if an attribute returns normalized href attributes</span>","\tdiv<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;a href='#'&gt;&lt;/a&gt;\"</span><span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> div<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> div<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>getAttribute <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span>","\t\t\tdiv<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"href\"</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"#\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\tExpr<span class=\"k\">.</span>attrHandle<span class=\"k\">.</span>href <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"href\"</span><span class=\"k\">,</span> <span class=\"s\">2</span> <span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"c\">// release memory in IE</span>","\tdiv <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>querySelectorAll <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> oldSizzle <span class=\"k\">=</span> Sizzle<span class=\"k\">,</span>","\t\t\tdiv <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">),</span>","\t\t\tid <span class=\"k\">=</span> <span class=\"s\">\"__sizzle__\"</span><span class=\"k\">;</span>","","\t\tdiv<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;p class='TEST'&gt;&lt;/p&gt;\"</span><span class=\"k\">;</span>","","\t\t<span class=\"c\">// Safari can't handle uppercase or unicode characters when</span>","\t\t<span class=\"c\">// in quirks mode.</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> div<span class=\"k\">.</span>querySelectorAll <span class=\"k\">&amp;&amp;</span> div<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\".TEST\"</span><span class=\"k\">).</span>length <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t","\t\tSizzle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> query<span class=\"k\">,</span> context<span class=\"k\">,</span> extra<span class=\"k\">,</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcontext <span class=\"k\">=</span> context <span class=\"k\">||</span> document<span class=\"k\">;</span>","","\t\t\t<span class=\"c\">// Only use querySelectorAll on non-XML documents</span>","\t\t\t<span class=\"c\">// (ID selectors don't work in non-HTML documents)</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>seed <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>Sizzle<span class=\"k\">.</span>isXML<span class=\"k\">(</span>context<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// See if we find a selector to speed up</span>","\t\t\t\t<span class=\"k\">var</span> match <span class=\"k\">=</span> <span class=\"s\">/^(\\w+$)|^\\.([\\w\\-]+$)|^#([\\w\\-]+$)/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span> query <span class=\"k\">);</span>","\t\t\t\t","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">// Speed-up: Sizzle(\"TAG\")</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> query <span class=\"k\">),</span> extra <span class=\"k\">);</span>","\t\t\t\t\t","\t\t\t\t\t<span class=\"c\">// Speed-up: Sizzle(\".CLASS\")</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> Expr<span class=\"k\">.</span>find<span class=\"k\">.</span>CLASS <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> context<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">),</span> extra <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">// Speed-up: Sizzle(\"body\")</span>","\t\t\t\t\t<span class=\"c\">// The body element only exists once, optimize finding it</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> query <span class=\"k\">===</span> <span class=\"s\">\"body\"</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>body <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> <span class=\"k\">[</span> context<span class=\"k\">.</span>body <span class=\"k\">],</span> extra <span class=\"k\">);</span>","\t\t\t\t\t\t","\t\t\t\t\t<span class=\"c\">// Speed-up: Sizzle(\"#ID\")</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> elem <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">);</span>","","\t\t\t\t\t\t<span class=\"c\">// Check parentNode to catch when Blackberry 4.6 returns</span>","\t\t\t\t\t\t<span class=\"c\">// nodes that are no longer in the document #6963</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"c\">// Handle the case where IE and Opera return items</span>","\t\t\t\t\t\t\t<span class=\"c\">// by name instead of ID</span>","\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>id <span class=\"k\">===</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> <span class=\"k\">[</span> elem <span class=\"k\">],</span> extra <span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t\t","\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> <span class=\"k\">[],</span> extra <span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t","\t\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span>query<span class=\"k\">),</span> extra <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>qsaError<span class=\"k\">)</span> <span class=\"k\">{}</span>","","\t\t\t\t<span class=\"c\">// qSA works strangely on Element-rooted queries</span>","\t\t\t\t<span class=\"c\">// We can work around this by specifying an extra ID on the root</span>","\t\t\t\t<span class=\"c\">// and working up from there (Thanks to Andrew Dupont for the technique)</span>","\t\t\t\t<span class=\"c\">// IE 8 doesn't work on object elements</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> oldContext <span class=\"k\">=</span> context<span class=\"k\">,</span>","\t\t\t\t\t\told <span class=\"k\">=</span> context<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span> <span class=\"k\">),</span>","\t\t\t\t\t\tnid <span class=\"k\">=</span> old <span class=\"k\">||</span> id<span class=\"k\">,</span>","\t\t\t\t\t\thasParent <span class=\"k\">=</span> context<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","\t\t\t\t\t\trelativeHierarchySelector <span class=\"k\">=</span> <span class=\"s\">/^\\s*[+~]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> query <span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>old <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontext<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span><span class=\"k\">,</span> nid <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\tnid <span class=\"k\">=</span> nid<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/'/g</span><span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">$&amp;\"</span> <span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> relativeHierarchySelector <span class=\"k\">&amp;&amp;</span> hasParent <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontext <span class=\"k\">=</span> context<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>relativeHierarchySelector <span class=\"k\">||</span> hasParent <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">return</span> makeArray<span class=\"k\">(</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> <span class=\"s\">\"[id='\"</span> <span class=\"k\">+</span> nid <span class=\"k\">+</span> <span class=\"s\">\"'] \"</span> <span class=\"k\">+</span> query <span class=\"k\">),</span> extra <span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>pseudoError<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>old <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\toldContext<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span> <span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t","\t\t\t<span class=\"k\">return</span> oldSizzle<span class=\"k\">(</span>query<span class=\"k\">,</span> context<span class=\"k\">,</span> extra<span class=\"k\">,</span> seed<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> prop <span class=\"k\">in</span> oldSizzle <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tSizzle<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">=</span> oldSizzle<span class=\"k\">[</span> prop <span class=\"k\">];</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// release memory in IE</span>","\t\tdiv <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">)();</span>","<span class=\"k\">}</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> html <span class=\"k\">=</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>","\t\tmatches <span class=\"k\">=</span> html<span class=\"k\">.</span>matchesSelector <span class=\"k\">||</span> html<span class=\"k\">.</span>mozMatchesSelector <span class=\"k\">||</span> html<span class=\"k\">.</span>webkitMatchesSelector <span class=\"k\">||</span> html<span class=\"k\">.</span>msMatchesSelector<span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> matches <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// Check to see if it's possible to do matchesSelector</span>","\t\t<span class=\"c\">// on a disconnected node (IE 9 fails this)</span>","\t\t<span class=\"k\">var</span> disconnectedMatch <span class=\"k\">=</span> <span class=\"k\">!</span>matches<span class=\"k\">.</span>call<span class=\"k\">(</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">),</span> <span class=\"s\">\"div\"</span> <span class=\"k\">),</span>","\t\t\tpseudoWorks <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// This should fail with an exception</span>","\t\t\t<span class=\"c\">// Gecko does not error, returns false instead</span>","\t\t\tmatches<span class=\"k\">.</span>call<span class=\"k\">(</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">,</span> <span class=\"s\">\"[test!='']:sizzle\"</span> <span class=\"k\">);</span>","\t","\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span> pseudoError <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tpseudoWorks <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\tSizzle<span class=\"k\">.</span>matchesSelector <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node<span class=\"k\">,</span> expr <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// Make sure that attribute selectors are quoted</span>","\t\t\texpr <span class=\"k\">=</span> expr<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\=\\s*([^'\"\\]]*)\\s*\\]/g</span><span class=\"k\">,</span> <span class=\"s\">\"='$1']\"</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>Sizzle<span class=\"k\">.</span>isXML<span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span> ","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> pseudoWorks <span class=\"k\">||</span> <span class=\"k\">!</span>Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>PSEUDO<span class=\"k\">.</span>test<span class=\"k\">(</span> expr <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"s\">/!=/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> expr <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> ret <span class=\"k\">=</span> matches<span class=\"k\">.</span>call<span class=\"k\">(</span> node<span class=\"k\">,</span> expr <span class=\"k\">);</span>","","\t\t\t\t\t\t<span class=\"c\">// IE 9's matchesSelector returns false on disconnected nodes</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> ret <span class=\"k\">||</span> <span class=\"k\">!</span>disconnectedMatch <span class=\"k\">||</span>","\t\t\t\t\t\t\t\t<span class=\"c\">// As well, disconnected nodes are said to be in a document</span>","\t\t\t\t\t\t\t\t<span class=\"c\">// fragment in IE 9, so check for that</span>","\t\t\t\t\t\t\t\tnode<span class=\"k\">.</span>document <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>document<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">return</span> ret<span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">return</span> Sizzle<span class=\"k\">(</span>expr<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">[</span>node<span class=\"k\">]).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> div <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","","\tdiv<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;div class='test e'&gt;&lt;/div&gt;&lt;div class='test'&gt;&lt;/div&gt;\"</span><span class=\"k\">;</span>","","\t<span class=\"c\">// Opera can't find a second classname (in 9.6)</span>","\t<span class=\"c\">// Also, make sure that getElementsByClassName actually exists</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>div<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">||</span> div<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span><span class=\"s\">\"e\"</span><span class=\"k\">).</span>length <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","\t<span class=\"c\">// Safari caches class attributes, doesn't catch changes (in 3.2)</span>","\tdiv<span class=\"k\">.</span>lastChild<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">\"e\"</span><span class=\"k\">;</span>","","\t<span class=\"k\">if</span> <span class=\"k\">(</span> div<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span><span class=\"s\">\"e\"</span><span class=\"k\">).</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t","\tExpr<span class=\"k\">.</span>order<span class=\"k\">.</span>splice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"CLASS\"</span><span class=\"k\">);</span>","\tExpr<span class=\"k\">.</span>find<span class=\"k\">.</span>CLASS <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> match<span class=\"k\">,</span> context<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> context<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">// release memory in IE</span>","\tdiv <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","","<span class=\"k\">function</span> dirNodeCheck<span class=\"k\">(</span> dir<span class=\"k\">,</span> cur<span class=\"k\">,</span> doneName<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> nodeCheck<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> checkSet<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> elem <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">];</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> match <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t\t\telem <span class=\"k\">=</span> elem<span class=\"k\">[</span>dir<span class=\"k\">];</span>","","\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">===</span> doneName <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tmatch <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>elem<span class=\"k\">.</span>sizset<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t\telem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> doneName<span class=\"k\">;</span>","\t\t\t\t\telem<span class=\"k\">.</span>sizset <span class=\"k\">=</span> i<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tmatch <span class=\"k\">=</span> elem<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\telem <span class=\"k\">=</span> elem<span class=\"k\">[</span>dir<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tcheckSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> dirCheck<span class=\"k\">(</span> dir<span class=\"k\">,</span> cur<span class=\"k\">,</span> doneName<span class=\"k\">,</span> checkSet<span class=\"k\">,</span> nodeCheck<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> checkSet<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> elem <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>i<span class=\"k\">];</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> match <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t","\t\t\telem <span class=\"k\">=</span> elem<span class=\"k\">[</span>dir<span class=\"k\">];</span>","","\t\t\t<span class=\"k\">while</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">===</span> doneName <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tmatch <span class=\"k\">=</span> checkSet<span class=\"k\">[</span>elem<span class=\"k\">.</span>sizset<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\telem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> doneName<span class=\"k\">;</span>","\t\t\t\t\t\telem<span class=\"k\">.</span>sizset <span class=\"k\">=</span> i<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> cur <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">===</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tmatch <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> Sizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> cur<span class=\"k\">,</span> <span class=\"k\">[</span>elem<span class=\"k\">]</span> <span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tmatch <span class=\"k\">=</span> elem<span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\telem <span class=\"k\">=</span> elem<span class=\"k\">[</span>dir<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tcheckSet<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>contains <span class=\"k\">)</span> <span class=\"k\">{</span>","\tSizzle<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> a <span class=\"k\">!==</span> b <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>a<span class=\"k\">.</span>contains <span class=\"k\">?</span> a<span class=\"k\">.</span>contains<span class=\"k\">(</span>b<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">)</span> <span class=\"k\">{</span>","\tSizzle<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">!!(</span>a<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span>b<span class=\"k\">)</span> <span class=\"k\">&amp;</span> <span class=\"s\">16</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\tSizzle<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","Sizzle<span class=\"k\">.</span>isXML <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"c\">// documentElement is verified for cases where it doesn't yet exist</span>","\t<span class=\"c\">// (such as loading iframes in IE - #4833) </span>","\t<span class=\"k\">var</span> documentElement <span class=\"k\">=</span> <span class=\"k\">(</span>elem <span class=\"k\">?</span> elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> elem <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">).</span>documentElement<span class=\"k\">;</span>","","\t<span class=\"k\">return</span> documentElement <span class=\"k\">?</span> documentElement<span class=\"k\">.</span>nodeName <span class=\"k\">!==</span> <span class=\"s\">\"HTML\"</span> <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> posProcess <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context<span class=\"k\">,</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> match<span class=\"k\">,</span>","\t\ttmpSet <span class=\"k\">=</span> <span class=\"k\">[],</span>","\t\tlater <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","\t\troot <span class=\"k\">=</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">?</span> <span class=\"k\">[</span>context<span class=\"k\">]</span> <span class=\"k\">:</span> context<span class=\"k\">;</span>","","\t<span class=\"c\">// Position selectors must be done after the filter</span>","\t<span class=\"c\">// And so must :not(positional) so we move all PSEUDOs to the end</span>","\t<span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>PSEUDO<span class=\"k\">.</span>exec<span class=\"k\">(</span> selector <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tlater <span class=\"k\">+=</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\tselector <span class=\"k\">=</span> selector<span class=\"k\">.</span>replace<span class=\"k\">(</span> Expr<span class=\"k\">.</span>match<span class=\"k\">.</span>PSEUDO<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\tselector <span class=\"k\">=</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span>selector<span class=\"k\">]</span> <span class=\"k\">?</span> selector <span class=\"k\">+</span> <span class=\"s\">\"*\"</span> <span class=\"k\">:</span> selector<span class=\"k\">;</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> root<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tSizzle<span class=\"k\">(</span> selector<span class=\"k\">,</span> root<span class=\"k\">[</span>i<span class=\"k\">],</span> tmpSet<span class=\"k\">,</span> seed <span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> Sizzle<span class=\"k\">.</span>filter<span class=\"k\">(</span> later<span class=\"k\">,</span> tmpSet <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// EXPOSE</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>query <span class=\"k\">=</span> Sizzle<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/dom/ready.js'] && (_$jscoverage['baidu/dom/ready.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser.safari;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.browser.opera;</span>","<span class=\"c\">///import baidu.dom;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20351;&#20989;&#25968;&#22312;&#39029;&#38754;dom&#33410;&#28857;&#21152;&#36733;&#23436;&#27605;&#26102;&#35843;&#29992;</span>","<span class=\"c\"> * @author allstar</span>","<span class=\"c\"> * @name baidu.dom.ready</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.ready(callback)</span>","<span class=\"c\"> * @param {Function} callback &#39029;&#38754;&#21152;&#36733;&#23436;&#27605;&#26102;&#35843;&#29992;&#30340;&#20989;&#25968;.</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#22914;&#26524;&#26377;&#26465;&#20214;&#23558;js&#25918;&#22312;&#39029;&#38754;&#26368;&#24213;&#37096;, &#20063;&#33021;&#36798;&#21040;&#21516;&#26679;&#25928;&#26524;&#65292;&#19981;&#24517;&#20351;&#29992;&#35813;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","    <span class=\"k\">var</span> ready <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>ready <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> readyBound <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","            readyList <span class=\"k\">=</span> <span class=\"k\">[],</span>","            DOMContentLoaded<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","            DOMContentLoaded <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                document<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">'DOMContentLoaded'</span><span class=\"k\">,</span> DOMContentLoaded<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                ready<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>attachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","            DOMContentLoaded <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">'complete'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    document<span class=\"k\">.</span>detachEvent<span class=\"k\">(</span><span class=\"s\">'onreadystatechange'</span><span class=\"k\">,</span> DOMContentLoaded<span class=\"k\">);</span>","                    ready<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"c\">/**</span>","<span class=\"c\">         * @private</span>","<span class=\"c\">         */</span>","        <span class=\"k\">function</span> ready<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ready<span class=\"k\">.</span>isReady<span class=\"k\">)</span> <span class=\"k\">{</span>","                ready<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> j <span class=\"k\">=</span> readyList<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> j<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    readyList<span class=\"k\">[</span>i<span class=\"k\">]();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"c\">/**</span>","<span class=\"c\">         * @private</span>","<span class=\"c\">         */</span>","        <span class=\"k\">function</span> doScrollCheck<span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>doScroll<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                setTimeout<span class=\"k\">(</span> doScrollCheck<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>   ","            ready<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"c\">/**</span>","<span class=\"c\">         * @private</span>","<span class=\"c\">         */</span>","        <span class=\"k\">function</span> bindReady<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>readyBound<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            readyBound <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">'complete'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                ready<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","                    document<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'DOMContentLoaded'</span><span class=\"k\">,</span> DOMContentLoaded<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                    window<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'load'</span><span class=\"k\">,</span> ready<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>attachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","                    document<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'onreadystatechange'</span><span class=\"k\">,</span> DOMContentLoaded<span class=\"k\">);</span>","                    window<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'onload'</span><span class=\"k\">,</span> ready<span class=\"k\">);</span>","","                    <span class=\"k\">var</span> toplevel <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                    <span class=\"k\">try</span> <span class=\"k\">{</span>","                        toplevel <span class=\"k\">=</span> window<span class=\"k\">.</span>frameElement <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>doScroll <span class=\"k\">&amp;&amp;</span> toplevel<span class=\"k\">)</span> <span class=\"k\">{</span>","                        doScrollCheck<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        bindReady<span class=\"k\">();</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","            ready<span class=\"k\">.</span>isReady <span class=\"k\">?</span> callback<span class=\"k\">()</span> <span class=\"k\">:</span> readyList<span class=\"k\">.</span>push<span class=\"k\">(</span>callback<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">();</span>","","    ready<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/dom/remove.js'] && (_$jscoverage['baidu/dom/remove.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/remove.js</span>","<span class=\"c\"> * author: allstar,berg</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;DOM&#26641;&#19978;&#31227;&#38500;&#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.dom.remove</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.remove(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#38656;&#35201;&#31227;&#38500;&#30340;&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &lt;b&gt;&#27880;&#24847;&#65306;&lt;/b&gt;&#23545;&#20110;&#31227;&#38500;&#30340;dom&#20803;&#32032;&#65292;IE&#19979;&#20250;&#37322;&#25918;&#35813;&#20803;&#32032;&#30340;&#31354;&#38388;&#65292;&#32487;&#32493;&#20351;&#29992;&#35813;&#20803;&#32032;&#30340;&#24341;&#29992;&#36827;&#34892;&#25805;&#20316;&#23558;&#20250;&#24341;&#21457;&#19981;&#21487;&#39044;&#26009;&#30340;&#38382;&#39064;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">var</span> tmpEl <span class=\"k\">=</span> element<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","    <span class=\"c\">//&#21435;&#25481;&#20102;&#23545;ie&#19979;&#30340;&#29305;&#27530;&#22788;&#29702;&#65306;&#21019;&#24314;&#19968;&#20010;div&#65292;appendChild&#65292;&#28982;&#21518;div.innerHTML = \"\"</span>","    tmpEl <span class=\"k\">&amp;&amp;</span> tmpEl<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>element<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/removeClass.js'] && (_$jscoverage['baidu/dom/removeClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/removeClass.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string.trim;</span>","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#31227;&#38500;&#30446;&#26631;&#20803;&#32032;&#30340;className</span>","<span class=\"c\"> * @name baidu.dom.removeClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.removeClass(element, className)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} className &#35201;&#31227;&#38500;&#30340;className&#65292;&#20801;&#35768;&#21516;&#26102;&#31227;&#38500;&#22810;&#20010;class&#65292;&#20013;&#38388;&#20351;&#29992;&#31354;&#30333;&#31526;&#20998;&#38548;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#20351;&#29992;&#32773;&#24212;&#20445;&#35777;&#25552;&#20379;&#30340;className&#21512;&#27861;&#24615;&#65292;&#19981;&#24212;&#21253;&#21547;&#19981;&#21512;&#27861;&#23383;&#31526;&#65292;className&#21512;&#27861;&#23383;&#31526;&#21442;&#32771;&#65306;http://www.w3.org/TR/CSS2/syndata.html&#12290;</span>","<span class=\"c\"> * @shortcut removeClass</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.addClass</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>removeClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">var</span> oldClasses <span class=\"k\">=</span> element<span class=\"k\">.</span>className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/\\s+/</span><span class=\"k\">),</span>","        newClasses <span class=\"k\">=</span> className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/\\s+/</span><span class=\"k\">),</span>","        lenOld<span class=\"k\">,</span>","        lenDel <span class=\"k\">=</span> newClasses<span class=\"k\">.</span>length<span class=\"k\">,</span>","        j<span class=\"k\">,</span>","        i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"c\">//&#32771;&#34385;&#21040;&#21516;&#26102;&#21024;&#38500;&#22810;&#20010;className&#30340;&#24212;&#29992;&#22330;&#26223;&#27010;&#29575;&#36739;&#20302;,&#25925;&#25918;&#24323;&#36827;&#19968;&#27493;&#24615;&#33021;&#20248;&#21270; </span>","    <span class=\"c\">// by rocy @1.3.4</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> lenDel<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">for</span><span class=\"k\">(</span>j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> lenOld <span class=\"k\">=</span> oldClasses<span class=\"k\">.</span>length<span class=\"k\">;</span> j <span class=\"k\">&lt;</span> lenOld<span class=\"k\">;</span> <span class=\"k\">++</span>j<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>oldClasses<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">==</span> newClasses<span class=\"k\">[</span>i<span class=\"k\">])</span><span class=\"k\">{</span>","            \toldClasses<span class=\"k\">.</span>splice<span class=\"k\">(</span>j<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            \t<span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    element<span class=\"k\">.</span>className <span class=\"k\">=</span> oldClasses<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>removeClass <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>removeClass<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/removeStyle.js'] && (_$jscoverage['baidu/dom/removeStyle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/dom/removeStyle.js</span>","<span class=\"c\"> * author: wenyuxiang, berg</span>","<span class=\"c\"> * version: 1.0.1</span>","<span class=\"c\"> * date: 2010/9/10</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._g;</span>","<span class=\"c\">///import baidu.string.toCamelCase;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21024;&#38500;&#20803;&#32032;&#30340;&#26576;&#20010;&#26679;&#24335;</span>","<span class=\"c\"> * @name baidu.dom.removeStyle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.removeStyle(element, styleName)</span>","<span class=\"c\"> * @param {HTMLElement|String} element &#38656;&#35201;&#21024;&#38500;&#26679;&#24335;&#30340;&#20803;&#32032;&#25110;&#32773;&#20803;&#32032;id</span>","<span class=\"c\"> * @param {string} styleName &#38656;&#35201;&#21024;&#38500;&#30340;&#26679;&#24335;&#21517;&#23383;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @see baidu.dom.setStyle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>"," ","<span class=\"c\">// todo: 1. &#21482;&#25903;&#25345;&#29616;&#20195;&#27983;&#35272;&#22120;&#65292;&#26377;&#19968;&#20123;&#32769;&#27983;&#35272;&#22120;&#21487;&#33021;&#19981;&#25903;&#25345;; 2. &#26377;&#37096;&#20998;&#23646;&#24615;&#26080;&#27861;&#34987;&#27491;&#24120;&#31227;&#38500;</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>removeStyle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> ele <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"DIV\"</span><span class=\"k\">),</span>","        fn<span class=\"k\">,</span>","        _g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>ele<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty<span class=\"k\">)</span> <span class=\"k\">{</span><span class=\"c\">// W3C, (gecko, opera, webkit)</span>","        fn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>el<span class=\"k\">,</span> st<span class=\"k\">)</span><span class=\"k\">{</span>","            el <span class=\"k\">=</span> _g<span class=\"k\">(</span>el<span class=\"k\">);</span>","            el<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty<span class=\"k\">(</span>st<span class=\"k\">);</span>","            <span class=\"k\">return</span> el<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>ele<span class=\"k\">.</span>style<span class=\"k\">.</span>removeAttribute<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// IE</span>","        fn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>el<span class=\"k\">,</span> st<span class=\"k\">)</span><span class=\"k\">{</span>","            el <span class=\"k\">=</span> _g<span class=\"k\">(</span>el<span class=\"k\">);</span>","            el<span class=\"k\">.</span>style<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span>baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>toCamelCase<span class=\"k\">(</span>st<span class=\"k\">));</span>","            <span class=\"k\">return</span> el<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ele <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">return</span> fn<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">();</span>"]);
_$jscoverage['baidu/dom/resizable.js'] && (_$jscoverage['baidu/dom/resizable.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.array.each;</span>","<span class=\"c\">///import baidu.object.each;</span>","<span class=\"c\">///import baidu.dom.setStyle;</span>","<span class=\"c\">///import baidu.dom.setStyles;</span>","<span class=\"c\">///import baidu.dom._styleFilter.px;</span>","<span class=\"c\">///import baidu.dom.create;</span>","<span class=\"c\">///import baidu.lang.isNumber;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.dom.addClass;</span>","<span class=\"c\">///import baidu.page.getMousePosition;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","<span class=\"c\">///import baidu.event.getTarget;</span>","<span class=\"c\">///import baidu.event.preventDefault;</span>","<span class=\"c\">///import baidu.dom.remove;</span>","<span class=\"c\">///import baidu.dom.setBorderBoxHeight;</span>","<span class=\"c\">///import baidu.dom.setBorderBoxWidth;</span>","<span class=\"c\">///import baidu.object.extend;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#32472;&#21046;&#21487;&#20197;&#26681;&#25454;&#40736;&#26631;&#34892;&#20026;&#25913;&#21464;HTMLElement&#22823;&#23567;&#30340;resize handle</span>","<span class=\"c\"> * @name baidu.dom.resizable</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.resizable(element[, options])</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#38656;&#35201;&#25913;&#21464;&#22823;&#23567;&#30340;&#20803;&#32032;&#25110;&#32773;&#20803;&#32032;&#30340;id.</span>","<span class=\"c\"> * @param {Object} [options] resizable&#21442;&#25968;&#37197;&#32622;</span>","<span class=\"c\"> * @config {Array} [direction] &#21487;&#20197;&#25913;&#21464;&#30340;&#26041;&#21521;[e,se,s,ws,w,wn,n,en]</span>","<span class=\"c\"> * @config {Function} [onresizestart] &#24320;&#22987;&#25913;&#21464;&#22823;&#23567;&#26102;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [onresizeend] &#22823;&#23567;&#25913;&#21464;&#32467;&#26463;&#26102;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Function} [onresize] &#22823;&#23567;&#25913;&#21464;&#21518;&#26102;&#35302;&#21457;</span>","<span class=\"c\"> * @config {Number|String} [maxWidth] &#21487;&#25913;&#21464;&#30340;&#26368;&#22823;&#23485;&#24230;</span>","<span class=\"c\"> * @config {Number|String} [maxHeight] &#21487;&#25913;&#21464;&#30340;&#26368;&#22823;&#39640;&#24230;</span>","<span class=\"c\"> * @config {Number|String} [minWidth] &#21487;&#25913;&#21464;&#30340;&#26368;&#23567;&#23485;&#24230;</span>","<span class=\"c\"> * @config {Number|String} [minHeight] &#21487;&#25913;&#21464;&#30340;&#26368;&#23567;&#39640;&#24230;</span>","<span class=\"c\"> * @config {String} [classPrefix] className &#21069;&#32512;</span>","<span class=\"c\"> * @config {Object} [directionHandlePosition] resizHandle&#30340;&#20301;&#32622;&#21442;&#25968;</span>","<span class=\"c\"> * @return {Object} {cancel:Function} cancel&#20989;&#25968;</span>","<span class=\"c\"> * @remark  &#38656;&#35201;&#23558;&#20803;&#32032;&#30340;&#23450;&#20301;&#35774;&#32622;&#20026;absolute</span>","<span class=\"c\"> * @author lixiaopeng</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>resizable <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> target<span class=\"k\">,</span>","        op<span class=\"k\">,</span>","        resizeHandle <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        directionHandlePosition<span class=\"k\">,</span>","        orgStyles <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        range<span class=\"k\">,</span> mozUserSelect<span class=\"k\">,</span>","        orgCursor<span class=\"k\">,</span>","        offsetParent<span class=\"k\">,</span>","        currentEle<span class=\"k\">,</span>","        handlePosition<span class=\"k\">,</span>","        timer<span class=\"k\">,</span>","        isCancel <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        isResizabled <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        defaultOptions <span class=\"k\">=</span> <span class=\"k\">{</span>","            direction<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'e'</span><span class=\"k\">,</span> <span class=\"s\">'s'</span><span class=\"k\">,</span> <span class=\"s\">'se'</span><span class=\"k\">],</span>","            minWidth<span class=\"k\">:</span> <span class=\"s\">16</span><span class=\"k\">,</span>","            minHeight<span class=\"k\">:</span> <span class=\"s\">16</span><span class=\"k\">,</span>","            classPrefix<span class=\"k\">:</span> <span class=\"s\">'tangram'</span><span class=\"k\">,</span>","            directionHandlePosition<span class=\"k\">:</span> <span class=\"k\">{}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        ","    <span class=\"k\">if</span> <span class=\"k\">(!(</span>target <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">'position'</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'static'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    offsetParent <span class=\"k\">=</span> target<span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","    <span class=\"k\">var</span> orgPosition <span class=\"k\">=</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">'position'</span><span class=\"k\">);</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#24517;&#35201;&#21442;&#25968;&#30340;&#25193;&#23637;</span>","<span class=\"c\">     * resize handle&#20197;&#26041;&#21521;&#21629;&#21517;</span>","<span class=\"c\">     * &#39034;&#26102;&#38024;&#30340;&#39034;&#24207;&#20026;</span>","<span class=\"c\">     * north northwest west southwest south southeast east northeast</span>","<span class=\"c\">     */</span>","    op <span class=\"k\">=</span> baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span>defaultOptions<span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#24517;&#35201;&#21442;&#25968;&#36716;&#25442;</span>","<span class=\"c\">     */</span>","    baidu<span class=\"k\">.</span>each<span class=\"k\">([</span><span class=\"s\">'minHeight'</span><span class=\"k\">,</span> <span class=\"s\">'minWidth'</span><span class=\"k\">,</span> <span class=\"s\">'maxHeight'</span><span class=\"k\">,</span> <span class=\"s\">'maxWidth'</span><span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span>style<span class=\"k\">)</span> <span class=\"k\">{</span>","        op<span class=\"k\">[</span>style<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>op<span class=\"k\">[</span>style<span class=\"k\">]</span> <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>op<span class=\"k\">[</span>style<span class=\"k\">]));</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * {Array[Number]} rangeObject</span>","<span class=\"c\">     * minWidth,maxWidth,minHeight,maxHeight</span>","<span class=\"c\">     */</span>","    range <span class=\"k\">=</span> <span class=\"k\">[</span>","        op<span class=\"k\">.</span>minWidth <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        op<span class=\"k\">.</span>maxWidth <span class=\"k\">||</span> Number<span class=\"k\">.</span>MAX_VALUE<span class=\"k\">,</span>","        op<span class=\"k\">.</span>minHeight <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        op<span class=\"k\">.</span>maxHeight <span class=\"k\">||</span> Number<span class=\"k\">.</span>MAX_VALUE","    <span class=\"k\">];</span>","","    render<span class=\"k\">();</span> ","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#32472;&#21046;resizable handle </span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> render<span class=\"k\">()</span><span class=\"k\">{</span>","      ","        <span class=\"c\">//&#20301;&#32622;&#23646;&#24615;</span>","        handlePosition <span class=\"k\">=</span> baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","            <span class=\"s\">'e'</span> <span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'right'</span><span class=\"k\">:</span> <span class=\"s\">'-5px'</span><span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> <span class=\"s\">'0px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'7px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> target<span class=\"k\">.</span>offsetHeight<span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'s'</span> <span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'left'</span><span class=\"k\">:</span> <span class=\"s\">'0px'</span><span class=\"k\">,</span> <span class=\"s\">'bottom'</span><span class=\"k\">:</span> <span class=\"s\">'-5px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'7px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> target<span class=\"k\">.</span>offsetWidth<span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'n'</span> <span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'left'</span><span class=\"k\">:</span> <span class=\"s\">'0px'</span><span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> <span class=\"s\">'-5px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'7px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> target<span class=\"k\">.</span>offsetWidth<span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'w'</span> <span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'left'</span><span class=\"k\">:</span> <span class=\"s\">'-5px'</span><span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> <span class=\"s\">'0px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span>target<span class=\"k\">.</span>offsetHeight <span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'7px'</span><span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'se'</span><span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'right'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'bottom'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'sw'</span><span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'left'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'bottom'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'ne'</span><span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'right'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">'nw'</span><span class=\"k\">:</span> <span class=\"k\">{</span><span class=\"s\">'left'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> <span class=\"s\">'1px'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> <span class=\"s\">'16px'</span><span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>op<span class=\"k\">.</span>directionHandlePosition<span class=\"k\">);</span>","        ","        <span class=\"c\">//&#21019;&#24314;resizeHandle</span>","        baidu<span class=\"k\">.</span>each<span class=\"k\">(</span>op<span class=\"k\">.</span>direction<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> className <span class=\"k\">=</span> op<span class=\"k\">.</span>classPrefix<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","            className<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> className<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'-resizable-'</span> <span class=\"k\">+</span> key<span class=\"k\">;</span>","","            <span class=\"k\">var</span> ele <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                className<span class=\"k\">:</span> className<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">),</span>","                styles <span class=\"k\">=</span> handlePosition<span class=\"k\">[</span>key<span class=\"k\">];</span>","","            styles<span class=\"k\">[</span><span class=\"s\">'cursor'</span><span class=\"k\">]</span> <span class=\"k\">=</span> key <span class=\"k\">+</span> <span class=\"s\">'-resize'</span><span class=\"k\">;</span>","            styles<span class=\"k\">[</span><span class=\"s\">'position'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'absolute'</span><span class=\"k\">;</span>","            baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>ele<span class=\"k\">,</span> styles<span class=\"k\">);</span>","            ","            ele<span class=\"k\">.</span>key <span class=\"k\">=</span> key<span class=\"k\">;</span>","            ele<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","","            target<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ele<span class=\"k\">);</span>","            resizeHandle<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> ele<span class=\"k\">;</span>","","            baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>ele<span class=\"k\">,</span> <span class=\"s\">'mousedown'</span><span class=\"k\">,</span>start<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        isCancel <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * cancel resizeHandle</span>","<span class=\"c\">     * @public</span>","<span class=\"c\">     * @return  void</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> cancel<span class=\"k\">()</span><span class=\"k\">{</span>","        currentEle <span class=\"k\">&amp;&amp;</span> stop<span class=\"k\">();</span>","        baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>each<span class=\"k\">(</span>resizeHandle<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>item<span class=\"k\">)</span><span class=\"k\">{</span>","            baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>item<span class=\"k\">,</span><span class=\"s\">\"mousedown\"</span><span class=\"k\">,</span>start<span class=\"k\">);</span>","            baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>item<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        isCancel <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>    ","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * update resizable</span>","<span class=\"c\">     * @public </span>","<span class=\"c\">     * @param {Object} options</span>","<span class=\"c\">     * @return null</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> update<span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>isCancel<span class=\"k\">)</span><span class=\"k\">{</span>","            op <span class=\"k\">=</span> baidu<span class=\"k\">.</span>extend<span class=\"k\">(</span>op<span class=\"k\">,</span>options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","            cancel<span class=\"k\">();</span>","            render<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * resizeHandle&#30456;&#24212;mousedown&#20107;&#20214;&#30340;&#20989;&#25968;</span>","<span class=\"c\">     * @param {Event} e</span>","<span class=\"c\">     * @return void</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> start<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","\t\tisResizabled <span class=\"k\">&amp;&amp;</span> stop<span class=\"k\">();</span>","        <span class=\"k\">var</span> ele <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getTarget<span class=\"k\">(</span>e<span class=\"k\">),</span>","            key <span class=\"k\">=</span> ele<span class=\"k\">.</span>key<span class=\"k\">;</span>","        currentEle <span class=\"k\">=</span> ele<span class=\"k\">;</span>","\t\tisResizabled <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t","        <span class=\"k\">if</span> <span class=\"k\">(</span>ele<span class=\"k\">.</span>setCapture<span class=\"k\">)</span> <span class=\"k\">{</span>","            ele<span class=\"k\">.</span>setCapture<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>captureEvents<span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>captureEvents<span class=\"k\">(</span>Event<span class=\"k\">.</span>MOUSEMOVE <span class=\"k\">|</span> Event<span class=\"k\">.</span>MOUSEUP<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">/*</span>","<span class=\"c\">         * &#32473;body&#35774;&#32622;&#30456;&#24212;&#30340;css&#23646;&#24615;</span>","<span class=\"c\">         * &#28155;&#21152;&#20107;&#20214;&#30417;&#21548;</span>","<span class=\"c\">         */</span>","        orgCursor <span class=\"k\">=</span> baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'cursor'</span><span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'cursor'</span><span class=\"k\">,</span> key <span class=\"k\">+</span> <span class=\"s\">'-resize'</span><span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span>stop<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'selectstart'</span><span class=\"k\">,</span> unselect<span class=\"k\">);</span>","        mozUserSelect <span class=\"k\">=</span> document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect<span class=\"k\">;</span>","        document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","","        <span class=\"c\">/*</span>","<span class=\"c\">         * &#33719;&#21462;&#40736;&#26631;&#22352;&#26631;</span>","<span class=\"c\">         * &#20559;&#31227;&#37327;&#35745;&#31639;</span>","<span class=\"c\">         */</span>","        <span class=\"k\">var</span> orgMousePosition <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getMousePosition<span class=\"k\">();</span>","        orgStyles <span class=\"k\">=</span> _getOrgStyle<span class=\"k\">();</span>","        timer <span class=\"k\">=</span> setInterval<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            resize<span class=\"k\">(</span>key<span class=\"k\">,</span>orgMousePosition<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">20</span><span class=\"k\">);</span>","","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>onresizestart<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>onresizestart<span class=\"k\">();</span>","        baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>e<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#24403;&#40736;&#26631;&#25353;&#38190;&#25260;&#36215;&#26102;&#32456;&#27490;&#23545;&#40736;&#26631;&#20107;&#20214;&#30340;&#30417;&#21548;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     * @return void</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> stop<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>currentEle <span class=\"k\">&amp;&amp;</span> currentEle<span class=\"k\">.</span>releaseCapture<span class=\"k\">)</span> <span class=\"k\">{</span>","            currentEle<span class=\"k\">.</span>releaseCapture<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>releaseEvents<span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>releaseEvents<span class=\"k\">(</span>Event<span class=\"k\">.</span>MOUSEMOVE <span class=\"k\">|</span> Event<span class=\"k\">.</span>MOUSEUP<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">/*</span>","<span class=\"c\">         * &#21024;&#38500;&#20107;&#20214;&#30417;&#21548;</span>","<span class=\"c\">         * &#36824;&#21407;css&#23646;&#24615;&#35774;&#32622;</span>","<span class=\"c\">         */</span>","        baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span>stop<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'selectstart'</span><span class=\"k\">,</span> unselect<span class=\"k\">);</span>","        document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>MozUserSelect <span class=\"k\">=</span> mozUserSelect<span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'selectstart'</span><span class=\"k\">,</span> unselect<span class=\"k\">);</span>","","        clearInterval<span class=\"k\">(</span>timer<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'cursor'</span><span class=\"k\">,</span>orgCursor<span class=\"k\">);</span>","        currentEle <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t\tisResizabled <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>onresizeend<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>onresizeend<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26681;&#25454;&#40736;&#26631;&#31227;&#21160;&#30340;&#36317;&#31163;&#26469;&#32472;&#21046;target</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     * @param {String} key handle&#30340;direction&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @param {Object} orgMousePosition &#40736;&#26631;&#22352;&#26631;{x,y}</span>","<span class=\"c\">     * @return void</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> resize<span class=\"k\">(</span>key<span class=\"k\">,</span>orgMousePosition<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> xy <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getMousePosition<span class=\"k\">(),</span>","            width <span class=\"k\">=</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'width'</span><span class=\"k\">],</span>","            height <span class=\"k\">=</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'height'</span><span class=\"k\">],</span>","            top <span class=\"k\">=</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'top'</span><span class=\"k\">],</span>","            left <span class=\"k\">=</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'left'</span><span class=\"k\">],</span>","            styles<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'e'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            width <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>xy<span class=\"k\">.</span>x <span class=\"k\">-</span> orgMousePosition<span class=\"k\">.</span>x <span class=\"k\">+</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'width'</span><span class=\"k\">],</span> range<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            width <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>width<span class=\"k\">,</span> range<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'w'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            width <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>orgMousePosition<span class=\"k\">.</span>x <span class=\"k\">-</span> xy<span class=\"k\">.</span>x <span class=\"k\">+</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'width'</span><span class=\"k\">],</span> range<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            width <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>width<span class=\"k\">,</span> range<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","            left <span class=\"k\">-=</span> width <span class=\"k\">-</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'width'</span><span class=\"k\">];</span>","       <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'s'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            height <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>xy<span class=\"k\">.</span>y <span class=\"k\">-</span> orgMousePosition<span class=\"k\">.</span>y <span class=\"k\">+</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'height'</span><span class=\"k\">],</span> range<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","            height <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>height<span class=\"k\">,</span> range<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'n'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            height <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>orgMousePosition<span class=\"k\">.</span>y <span class=\"k\">-</span> xy<span class=\"k\">.</span>y <span class=\"k\">+</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'height'</span><span class=\"k\">],</span> range<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","            height <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>height<span class=\"k\">,</span> range<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]);</span>","            top <span class=\"k\">-=</span> height <span class=\"k\">-</span> orgStyles<span class=\"k\">[</span><span class=\"s\">'height'</span><span class=\"k\">];</span>","        <span class=\"k\">}</span>","         ","        styles <span class=\"k\">=</span> <span class=\"k\">{</span><span class=\"s\">'width'</span><span class=\"k\">:</span> width<span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">:</span> height<span class=\"k\">,</span> <span class=\"s\">'top'</span><span class=\"k\">:</span> top<span class=\"k\">,</span> <span class=\"s\">'left'</span><span class=\"k\">:</span> left<span class=\"k\">}</span><span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setOuterHeight<span class=\"k\">(</span>target<span class=\"k\">,</span>height<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setOuterWidth<span class=\"k\">(</span>target<span class=\"k\">,</span>width<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"k\">{</span><span class=\"s\">\"top\"</span><span class=\"k\">:</span>top<span class=\"k\">,</span><span class=\"s\">\"left\"</span><span class=\"k\">:</span>left<span class=\"k\">}</span><span class=\"k\">);</span>","","        resizeHandle<span class=\"k\">[</span><span class=\"s\">'n'</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>resizeHandle<span class=\"k\">[</span><span class=\"s\">'n'</span><span class=\"k\">],</span> <span class=\"s\">'width'</span><span class=\"k\">,</span> width<span class=\"k\">);</span>","        resizeHandle<span class=\"k\">[</span><span class=\"s\">'s'</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>resizeHandle<span class=\"k\">[</span><span class=\"s\">'s'</span><span class=\"k\">],</span> <span class=\"s\">'width'</span><span class=\"k\">,</span> width<span class=\"k\">);</span>","        resizeHandle<span class=\"k\">[</span><span class=\"s\">'e'</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>resizeHandle<span class=\"k\">[</span><span class=\"s\">'e'</span><span class=\"k\">],</span> <span class=\"s\">'height'</span><span class=\"k\">,</span> height<span class=\"k\">);</span>","        resizeHandle<span class=\"k\">[</span><span class=\"s\">'w'</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>resizeHandle<span class=\"k\">[</span><span class=\"s\">'w'</span><span class=\"k\">],</span> <span class=\"s\">'height'</span><span class=\"k\">,</span> height<span class=\"k\">);</span>","","        baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>op<span class=\"k\">.</span>onresize<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> op<span class=\"k\">.</span>onresize<span class=\"k\">(</span><span class=\"k\">{</span>current<span class=\"k\">:</span>styles<span class=\"k\">,</span>original<span class=\"k\">:</span>orgStyles<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#38459;&#27490;&#25991;&#23383;&#34987;&#36873;&#20013;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     * @param {Event} e</span>","<span class=\"c\">     * @return {Boolean}</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> unselect<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;target&#30340;&#21407;&#22987;&#23485;&#39640;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     * @return {Object} {width,height,top,left}</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> _getOrgStyle<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> offset_parent <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">.</span>offsetParent<span class=\"k\">),</span>","            offset_target <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">),</span>","            top<span class=\"k\">,</span>","            left<span class=\"k\">;</span>","       ","        <span class=\"k\">if</span><span class=\"k\">(</span>orgPosition <span class=\"k\">==</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","            top <span class=\"k\">=</span>  offset_target<span class=\"k\">.</span>top <span class=\"k\">-</span> <span class=\"k\">(</span>target<span class=\"k\">.</span>offsetParent <span class=\"k\">==</span> document<span class=\"k\">.</span>body <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> offset_parent<span class=\"k\">.</span>top<span class=\"k\">);</span>","            left <span class=\"k\">=</span> offset_target<span class=\"k\">.</span>left <span class=\"k\">-</span> <span class=\"k\">(</span>target<span class=\"k\">.</span>offsetParent <span class=\"k\">==</span> document<span class=\"k\">.</span>body <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span>offset_parent<span class=\"k\">.</span>left<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","            top <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"top\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"k\">-</span>parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"bottom\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            left <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"left\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"k\">-</span>parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"s\">\"right\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span> ","        <span class=\"k\">}</span>","        baidu<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"k\">{</span>top<span class=\"k\">:</span>top<span class=\"k\">,</span>left<span class=\"k\">:</span>left<span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            width<span class=\"k\">:</span>target<span class=\"k\">.</span>offsetWidth<span class=\"k\">,</span>","            height<span class=\"k\">:</span>target<span class=\"k\">.</span>offsetHeight<span class=\"k\">,</span>","            top<span class=\"k\">:</span>top<span class=\"k\">,</span>","            left<span class=\"k\">:</span>left","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">{</span>cancel<span class=\"k\">:</span>cancel<span class=\"k\">,</span>update<span class=\"k\">:</span>update<span class=\"k\">,</span>enable<span class=\"k\">:</span>render<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setAttr.js'] && (_$jscoverage['baidu/dom/setAttr.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/setAttr.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom._NAME_ATTRS;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;&#30446;&#26631;&#20803;&#32032;&#30340;attribute&#20540;</span>","<span class=\"c\"> * @name baidu.dom.setAttr</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setAttr(element, key, value)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#35774;&#32622;&#30340;attribute&#38190;&#21517;</span>","<span class=\"c\"> * @param {string} value &#35201;&#35774;&#32622;&#30340;attribute&#20540;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">            &#35774;&#32622;object&#30340;&#33258;&#23450;&#20041;&#23646;&#24615;&#26102;&#65292;&#30001;&#20110;&#27983;&#35272;&#22120;&#38480;&#21046;&#65292;&#26080;&#27861;&#35774;&#32622;&#12290;</span>","<span class=\"c\">        </span>","<span class=\"c\"> * @shortcut setAttr</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.getAttr,baidu.dom.setAttrs</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttr <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'style'</span> <span class=\"k\">==</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        key <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_NAME_ATTRS<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">||</span> key<span class=\"k\">;</span>","        element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>setAttr <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttr<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setAttrs.js'] && (_$jscoverage['baidu/dom/setAttrs.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/setAttrs.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.setAttr;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25209;&#37327;&#35774;&#32622;&#30446;&#26631;&#20803;&#32032;&#30340;attribute&#20540;</span>","<span class=\"c\"> * @name baidu.dom.setAttrs</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setAttrs(element, attributes)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {Object} attributes &#35201;&#35774;&#32622;&#30340;attribute&#38598;&#21512;</span>","<span class=\"c\"> * @shortcut setAttrs</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.setAttr,baidu.dom.getAttr</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttrs <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttr<span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> attributes<span class=\"k\">[</span>key<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>setAttrs <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setAttrs<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setBorderBoxHeight.js'] && (_$jscoverage['baidu/dom/setBorderBoxHeight.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.setBorderBoxSize;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25353;&#29031;border-box&#27169;&#22411;&#35774;&#32622;&#20803;&#32032;&#30340;height&#20540;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.dom.setBorderBoxHeight</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setBorderBoxHeight(element, height)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement|string} element DOM&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {number|string} height &#35201;&#35774;&#32622;&#30340;height</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {HTMLElement}  &#35774;&#32622;&#22909;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> * @see baidu.dom.setBorderBoxWidth, baidu.dom.setBorderBoxSize</span>","<span class=\"c\"> * @shortcut dom.setOuterHeight</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setOuterHeight <span class=\"k\">=</span> ","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setBorderBoxHeight <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> height<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setBorderBoxSize<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"k\">{</span>height <span class=\"k\">:</span> height<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setBorderBoxSize.js'] && (_$jscoverage['baidu/dom/setBorderBoxSize.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.setStyles;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.dom._styleFilter.px;</span>","","<span class=\"c\">///import baidu.browser.isStrict;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25353;&#29031;border-box&#27169;&#22411;&#35774;&#32622;&#20803;&#32032;&#30340;height&#21644;width&#20540;&#12290;&#21482;&#25903;&#25345;&#20803;&#32032;&#30340;padding/border/height/width&#20351;&#29992;&#21516;&#19968;&#31181;&#35745;&#37327;&#21333;&#20301;&#30340;&#24773;&#20917;&#12290;&lt;br/&gt; &#19981;&#25903;&#25345;&#65306;&lt;br/&gt; 1. &#38750;&#25968;&#23383;&#20540;(medium)&lt;br/&gt; 2. em/px&#22312;&#19981;&#21516;&#30340;&#23646;&#24615;&#20013;&#28151;&#29992;</span>","<span class=\"c\"> * @name baidu.dom.setBorderBoxSize</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setBorderBoxSize(element, size)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#20803;&#32032;&#25110;DOM&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {object} size &#21253;&#21547;height&#21644;width&#38190;&#21517;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @see baidu.dom.setBorderBoxWidth, baidu.dom.setBorderBoxHeight</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {HTMLElement}  &#35774;&#32622;&#22909;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setBorderBoxSize <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> size<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    size<span class=\"k\">.</span>width <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>width <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>size<span class=\"k\">.</span>width<span class=\"k\">));</span>","    size<span class=\"k\">.</span>height <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>height <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>size<span class=\"k\">.</span>height<span class=\"k\">));</span>","","    <span class=\"k\">function</span> getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> name<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> name<span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span><span class=\"k\">(</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>isStrict<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>size<span class=\"k\">.</span>width<span class=\"k\">)</span><span class=\"k\">{</span>","            result<span class=\"k\">.</span>width <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>size<span class=\"k\">.</span>width<span class=\"k\">)</span>  <span class=\"k\">-</span>","                           getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'paddingLeft'</span><span class=\"k\">)</span> <span class=\"k\">-</span> ","                           getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'paddingRight'</span><span class=\"k\">)</span> <span class=\"k\">-</span> ","                           getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'borderLeftWidth'</span><span class=\"k\">)</span> <span class=\"k\">-</span>","                           getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'borderRightWidth'</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>width <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>size<span class=\"k\">.</span>height<span class=\"k\">)</span><span class=\"k\">{</span>","            result<span class=\"k\">.</span>height <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>size<span class=\"k\">.</span>height<span class=\"k\">)</span> <span class=\"k\">-</span>","                            getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'paddingTop'</span><span class=\"k\">)</span> <span class=\"k\">-</span> ","                            getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'paddingBottom'</span><span class=\"k\">)</span> <span class=\"k\">-</span> ","                            getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'borderTopWidth'</span><span class=\"k\">)</span> <span class=\"k\">-</span> ","                            getNumericalStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">'borderBottomWidth'</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>height <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>height <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>element<span class=\"k\">,</span> result<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setBorderBoxWidth.js'] && (_$jscoverage['baidu/dom/setBorderBoxWidth.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.setBorderBoxSize;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25353;&#29031;border-box&#27169;&#22411;&#35774;&#32622;&#20803;&#32032;&#30340;width&#20540;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.dom.setBorderBoxWidth</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setBorderBoxWidth(element, width)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement|string} \telement DOM&#20803;&#32032;&#25110;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {number|string} \t\twidth \t&#35201;&#35774;&#32622;&#30340;width</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {HTMLElement}  &#35774;&#32622;&#22909;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> * @see baidu.dom.setBorderBoxHeight, baidu.dom.setBorderBoxSize</span>","<span class=\"c\"> * @shortcut dom.setOuterWidth</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setOuterWidth <span class=\"k\">=</span> ","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setBorderBoxWidth <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> width<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setBorderBoxSize<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"k\">{</span>width <span class=\"k\">:</span> width<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setPixel.js'] && (_$jscoverage['baidu/dom/setPixel.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * create: 2011-12-14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#32473;&#20803;&#32032;&#26679;&#24335;&#65288;&#27604;&#22914;width&#65289;&#36171;&#20540;&#26102;&#65292;&#22914;&#26524;&#26159;&#25968;&#23383;&#21017;&#28155;&#21152;&#21333;&#20301;(px)&#65292;&#22914;&#26524;&#26159;&#20854;&#23427;&#20540;&#30452;&#25509;&#36171;</span>","<span class=\"c\"> * @grammar baidu.dom.setPixel(el, style, n)</span>","<span class=\"c\"> * @param\t{HTMLElement}\tel \t\tDOM&#20803;&#32032;</span>","<span class=\"c\"> * @param \t{String}\t\tstyle \t&#26679;&#24335;&#23646;&#24615;&#21517;</span>","<span class=\"c\"> * @param\t{Number|String} n \t\t&#34987;&#36171;&#30340;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setPixel <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>el<span class=\"k\">,</span> style<span class=\"k\">,</span> n<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">typeof</span> n <span class=\"k\">!=</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span>","\t<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>el<span class=\"k\">).</span>style<span class=\"k\">[</span>style<span class=\"k\">]</span> <span class=\"k\">=</span> n <span class=\"k\">+(!</span>isNaN<span class=\"k\">(</span>n<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">\"px\"</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">));</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setPosition.js'] && (_$jscoverage['baidu/dom/setPosition.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/setPosition.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/12/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.dom.setStyles;</span>","","<span class=\"c\">///import baidu.dom._styleFilter.px;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;&#30446;&#26631;&#20803;&#32032;&#30340;top&#21644;left&#20540;&#21040;&#29992;&#25143;&#25351;&#23450;&#30340;&#20301;&#32622;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @name baidu.dom.setPosition</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setPosition(element, position)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement|string}\telement \t&#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {object} \t\t\t\tposition \t&#20301;&#32622;&#23545;&#35937; {top: {number}, left : {number}}</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {HTMLElement}  &#36827;&#34892;&#35774;&#32622;&#30340;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setPosition <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> position<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"k\">{</span>","        left <span class=\"k\">:</span> position<span class=\"k\">.</span>left <span class=\"k\">-</span> <span class=\"k\">(</span>parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">\"margin-left\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">),</span>","        top <span class=\"k\">:</span> position<span class=\"k\">.</span>top <span class=\"k\">-</span> <span class=\"k\">(</span>parseFloat<span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"s\">\"margin-top\"</span><span class=\"k\">))</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setStyle.js'] && (_$jscoverage['baidu/dom/setStyle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/setStyle.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.dom._styleFilter.filter;</span>","<span class=\"c\">///import baidu.string.toCamelCase;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;&#30446;&#26631;&#20803;&#32032;&#30340;style&#26679;&#24335;&#20540;</span>","<span class=\"c\"> * @name baidu.dom.setStyle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setStyle(element, key, value)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string} key &#35201;&#35774;&#32622;&#30340;&#26679;&#24335;&#21517;</span>","<span class=\"c\"> * @param {string} value &#35201;&#35774;&#32622;&#30340;&#26679;&#24335;&#20540;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">            &#20026;&#20102;&#31934;&#31616;&#20195;&#30721;&#65292;&#26412;&#27169;&#22359;&#40664;&#35748;&#19981;&#23545;&#20219;&#20309;&#27983;&#35272;&#22120;&#36820;&#22238;&#20540;&#36827;&#34892;&#24402;&#19968;&#21270;&#22788;&#29702;&#65288;&#22914;&#20351;&#29992;getStyle&#26102;&#65292;&#19981;&#21516;&#27983;&#35272;&#22120;&#19979;&#21487;&#33021;&#36820;&#22238;rgb&#39068;&#33394;&#25110;hex&#39068;&#33394;&#65289;&#65292;&#20063;&#19981;&#20250;&#20462;&#22797;&#27983;&#35272;&#22120;&#30340;bug&#21644;&#24046;&#24322;&#24615;&#65288;&#22914;&#35774;&#32622;IE&#30340;float&#23646;&#24615;&#21483;styleFloat&#65292;firefox&#21017;&#26159;cssFloat&#65289;&#12290;&lt;br /&gt;</span>","<span class=\"c\">baidu.dom._styleFixer&#21644;baidu.dom._styleFilter&#21487;&#20197;&#20026;&#26412;&#27169;&#22359;&#25552;&#20379;&#25903;&#25345;&#12290;&lt;br /&gt;</span>","<span class=\"c\">&#20854;&#20013;_styleFilter&#33021;&#23545;&#39068;&#33394;&#21644;px&#36827;&#34892;&#24402;&#19968;&#21270;&#22788;&#29702;&#65292;_styleFixer&#33021;&#23545;display&#65292;float&#65292;opacity&#65292;textOverflow&#30340;&#27983;&#35272;&#22120;&#20860;&#23481;&#24615;bug&#36827;&#34892;&#22788;&#29702;&#12290;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @shortcut setStyle</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.getStyle,baidu.dom.setStyles</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> dom <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">,</span> fixer<span class=\"k\">;</span>","    ","    <span class=\"c\">// &#25918;&#24323;&#20102;&#23545;firefox 0.9&#30340;opacity&#30340;&#25903;&#25345;</span>","    element <span class=\"k\">=</span> dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    key <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>toCamelCase<span class=\"k\">(</span>key<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>fixer <span class=\"k\">=</span> dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">)</span> <span class=\"k\">{</span>","        value <span class=\"k\">=</span> fixer<span class=\"k\">.</span>filter<span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> <span class=\"s\">'set'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    fixer <span class=\"k\">=</span> dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">(</span>fixer <span class=\"k\">&amp;&amp;</span> fixer<span class=\"k\">.</span>set<span class=\"k\">)</span> <span class=\"k\">?</span> fixer<span class=\"k\">.</span>set<span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">,</span> key<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>style<span class=\"k\">[</span>fixer <span class=\"k\">||</span> key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">);</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>setStyle <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyle<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/setStyles.js'] && (_$jscoverage['baidu/dom/setStyles.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/setStyles.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","<span class=\"c\">///import baidu.dom.setStyle;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25209;&#37327;&#35774;&#32622;&#30446;&#26631;&#20803;&#32032;&#30340;style&#26679;&#24335;&#20540;</span>","<span class=\"c\"> * @name baidu.dom.setStyles</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.setStyles(element, styles)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {Object} styles &#35201;&#35774;&#32622;&#30340;&#26679;&#24335;&#38598;&#21512;</span>","<span class=\"c\"> * @shortcut setStyles</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.setStyle,baidu.dom.getStyle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyles <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> styles<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> styles<span class=\"k\">)</span> <span class=\"k\">{</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> styles<span class=\"k\">[</span>key<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>setStyles <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>setStyles<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/show.js'] && (_$jscoverage['baidu/dom/show.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26174;&#31034;&#30446;&#26631;&#20803;&#32032;&#65292;&#21363;&#23558;&#30446;&#26631;&#20803;&#32032;&#30340;display&#23646;&#24615;&#36824;&#21407;&#25104;&#40664;&#35748;&#20540;&#12290;&#40664;&#35748;&#20540;&#21487;&#33021;&#22312;stylesheet&#20013;&#23450;&#20041;&#65292;&#25110;&#32773;&#26159;&#32487;&#25215;&#20102;&#27983;&#35272;&#22120;&#30340;&#40664;&#35748;&#26679;&#24335;&#20540;</span>","<span class=\"c\"> * @author allstar, berg</span>","<span class=\"c\"> * @name baidu.dom.show</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.show(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#27880;&#24847;1&#65306;&#22914;&#26524;&#22312;CSS&#20013;&#23450;&#20041;&#27492;&#20803;&#32032;&#30340;&#26679;&#24335;&#20026;display:none</span>","<span class=\"c\"> * &#22312;&#35843;&#29992;&#26412;&#20989;&#25968;&#20197;&#21518;&#65292;&#20250;&#23558;display&#23646;&#24615;&#20173;&#28982;&#36824;&#21407;&#25104;none&#65292;&#20803;&#32032;&#20173;&#28982;&#26080;&#27861;&#26174;&#31034;&#12290;</span>","<span class=\"c\"> * &#27880;&#24847;2&#65306;&#22914;&#26524;&#36825;&#20010;&#20803;&#32032;&#30340;display&#23646;&#24615;&#34987;&#35774;&#32622;&#25104;inline</span>","<span class=\"c\"> * &#65288;&#30001;element.style.display&#25110;&#32773;HTML&#20013;&#30340;style&#23646;&#24615;&#35774;&#32622;&#65289;</span>","<span class=\"c\"> * &#35843;&#29992;&#26412;&#26041;&#27861;&#23558;&#28165;&#38500;&#27492;inline&#23646;&#24615;&#65292;&#23548;&#33268;&#20803;&#32032;&#30340;display&#23646;&#24615;&#21464;&#25104;&#32487;&#25215;&#20540;</span>","<span class=\"c\"> * &#22240;&#27492;&#65292;&#38024;&#23545;&#19978;&#38754;&#20004;&#31181;&#24773;&#20917;&#65292;&#24314;&#35758;&#20351;&#29992;dom.setStyle(\"display\", \"something\")</span>","<span class=\"c\"> * &#26469;&#26126;&#30830;&#25351;&#23450;&#35201;&#35774;&#32622;&#30340;display&#23646;&#24615;&#20540;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @shortcut show</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.hide,baidu.dom.toggle</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>show <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>show <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>show<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/toggle.js'] && (_$jscoverage['baidu/dom/toggle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/toggle.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25913;&#21464;&#30446;&#26631;&#20803;&#32032;&#30340;&#26174;&#31034;/&#38544;&#34255;&#29366;&#24577;</span>","<span class=\"c\"> * @name baidu.dom.toggle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.toggle(element)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.dom.show,baidu.dom.hide</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">==</span> <span class=\"s\">\"none\"</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"none\"</span><span class=\"k\">;</span>","","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/toggleClass.js'] && (_$jscoverage['baidu/dom/toggleClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/toggleClass.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010-07-06</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#28155;&#21152;&#25110;&#32773;&#21024;&#38500;&#19968;&#20010;&#33410;&#28857;&#20013;&#30340;&#25351;&#23450;class&#65292;&#22914;&#26524;&#24050;&#32463;&#26377;&#23601;&#21024;&#38500;&#65292;&#21542;&#21017;&#28155;&#21152;</span>","<span class=\"c\"> * @name baidu.dom.toggleClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.dom.toggleClass(element, className)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {String} className &#25351;&#23450;&#30340;className&#12290;&#20801;&#35768;&#21516;&#26102;&#28155;&#21152;&#22810;&#20010;class&#65292;&#20013;&#38388;&#20351;&#29992;&#31354;&#30333;&#31526;&#20998;&#38548;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * &#20256;&#20837;&#22810;&#20010;class&#26102;&#65292;&#21482;&#35201;&#20854;&#20013;&#26377;&#19968;&#20010;class&#19981;&#22312;&#24403;&#21069;&#20803;&#32032;&#20013;&#65292;&#21017;&#28155;&#21152;&#25152;&#26377;class&#65292;&#21542;&#21017;&#21024;&#38500;&#25152;&#26377;class&#12290;</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.addClass;</span>","<span class=\"c\">///import baidu.dom.removeClass;</span>","<span class=\"c\">///import baidu.dom.hasClass;</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>toggleClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">))</span><span class=\"k\">{</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>removeClass<span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>addClass<span class=\"k\">(</span>element<span class=\"k\">,</span> className<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_g.js'] && (_$jscoverage['baidu/dom/_g.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/g.js</span>","<span class=\"c\"> * author: allstar, erik, berg</span>","<span class=\"c\"> * version: 1.3</span>","<span class=\"c\"> * date: 2010-07-07</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.lang.isString;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#25991;&#26723;&#20013;&#33719;&#21462;&#25351;&#23450;&#30340;DOM&#20803;&#32032;</span>","<span class=\"c\"> * **&#20869;&#37096;&#26041;&#27861;**</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {string|HTMLElement} id &#20803;&#32032;&#30340;id&#25110;DOM&#20803;&#32032;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @return {HTMLElement} DOM&#20803;&#32032;&#65292;&#22914;&#26524;&#19981;&#23384;&#22312;&#65292;&#36820;&#22238;null&#65292;&#22914;&#26524;&#21442;&#25968;&#19981;&#21512;&#27861;&#65292;&#30452;&#25509;&#36820;&#22238;&#21442;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">(</span>id<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>id<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> id<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>_g <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_matchNode.js'] && (_$jscoverage['baidu/dom/_matchNode.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_matchNode.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/18</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.dom.g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20174;&#30446;&#26631;&#20803;&#32032;&#25351;&#23450;&#30340;&#26041;&#21521;&#25628;&#32034;&#20803;&#32032;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {HTMLElement|string} element   &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;&#30340;id</span>","<span class=\"c\"> * @param {string}             direction &#36941;&#21382;&#30340;&#26041;&#21521;&#21517;&#31216;&#65292;&#21462;&#20540;&#20026;previousSibling,nextSibling</span>","<span class=\"c\"> * @param {string}             start     &#36941;&#21382;&#30340;&#24320;&#22987;&#20301;&#32622;&#65292;&#21462;&#20540;&#20026;firstChild,lastChild,previousSibling,nextSibling</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @return {HTMLElement} &#25628;&#32034;&#21040;&#30340;&#20803;&#32032;&#65292;&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;&#65292;&#36820;&#22238; null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_matchNode <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> direction<span class=\"k\">,</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> node <span class=\"k\">=</span> element<span class=\"k\">[</span>start<span class=\"k\">];</span> node<span class=\"k\">;</span> node <span class=\"k\">=</span> node<span class=\"k\">[</span>direction<span class=\"k\">])</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> node<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_NAME_ATTRS.js'] && (_$jscoverage['baidu/dom/_NAME_ATTRS.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_NAME_ATTRS.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/2</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setAttr&#19982;getAttr&#26041;&#27861;&#20316;&#21517;&#31216;&#36716;&#25442;&#20351;&#29992;</span>","<span class=\"c\"> * ie6,7&#19979;class&#35201;&#36716;&#25442;&#25104;className</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_NAME_ATTRS <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'cellpadding'</span><span class=\"k\">:</span> <span class=\"s\">'cellPadding'</span><span class=\"k\">,</span>","        <span class=\"s\">'cellspacing'</span><span class=\"k\">:</span> <span class=\"s\">'cellSpacing'</span><span class=\"k\">,</span>","        <span class=\"s\">'colspan'</span><span class=\"k\">:</span> <span class=\"s\">'colSpan'</span><span class=\"k\">,</span>","        <span class=\"s\">'rowspan'</span><span class=\"k\">:</span> <span class=\"s\">'rowSpan'</span><span class=\"k\">,</span>","        <span class=\"s\">'valign'</span><span class=\"k\">:</span> <span class=\"s\">'vAlign'</span><span class=\"k\">,</span>","        <span class=\"s\">'usemap'</span><span class=\"k\">:</span> <span class=\"s\">'useMap'</span><span class=\"k\">,</span>","        <span class=\"s\">'frameborder'</span><span class=\"k\">:</span> <span class=\"s\">'frameBorder'</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&lt;</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        result<span class=\"k\">[</span><span class=\"s\">'for'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'htmlFor'</span><span class=\"k\">;</span>","        result<span class=\"k\">[</span><span class=\"s\">'class'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'className'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        result<span class=\"k\">[</span><span class=\"s\">'htmlFor'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'for'</span><span class=\"k\">;</span>","        result<span class=\"k\">[</span><span class=\"s\">'className'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'class'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/dom/_styleFilter.js'] && (_$jscoverage['baidu/dom/_styleFilter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFilters.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter <span class=\"k\">||</span> <span class=\"k\">[];</span>",""]);
_$jscoverage['baidu/dom/_styleFixer.js'] && (_$jscoverage['baidu/dom/_styleFixer.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFixer.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFilter/color.js'] && (_$jscoverage['baidu/dom/_styleFilter/color.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFilter/color.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFilter;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">[</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","    get<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/color/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> value<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"rgb(\"</span><span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> array <span class=\"k\">=</span> value<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>","","            value <span class=\"k\">=</span> <span class=\"s\">\"#\"</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> color<span class=\"k\">;</span> color <span class=\"k\">=</span> array<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","                color <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>color<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\d]/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">);</span>","                value <span class=\"k\">+=</span> color<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">\"0\"</span> <span class=\"k\">+</span> color <span class=\"k\">:</span> color<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            value <span class=\"k\">=</span> value<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFilter/filter.js'] && (_$jscoverage['baidu/dom/_styleFilter/filter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFilter/filter.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFilter;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#33719;&#21462;&#21644;&#35774;&#32622;&#26679;&#24335;&#30340;&#36807;&#28388;&#22120;</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> method<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> filters <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">,</span> filter<span class=\"k\">;</span> filter <span class=\"k\">=</span> filters<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>filter <span class=\"k\">=</span> filter<span class=\"k\">[</span>method<span class=\"k\">])</span> <span class=\"k\">{</span>","            value <span class=\"k\">=</span> filter<span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> value<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFilter/px.js'] && (_$jscoverage['baidu/dom/_styleFilter/px.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFilter/px.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFilter;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">[</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFilter<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","    set<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">.</span>constructor <span class=\"k\">==</span> Number ","            <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"s\">/zIndex|fontWeight|opacity|zoom|lineHeight/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>key<span class=\"k\">))</span><span class=\"k\">{</span>","            value <span class=\"k\">=</span> value <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFixer/display.js'] && (_$jscoverage['baidu/dom/_styleFixer/display.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFixer/display.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/24</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.browser.firefox;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">.</span>display <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&lt;</span> <span class=\"s\">8</span> <span class=\"k\">?</span> <span class=\"k\">{</span> <span class=\"c\">// berg: &#20462;&#25913;&#21040;&lt;8&#65292;&#22240;&#20026;ie7&#21516;&#26679;&#23384;&#22312;&#36825;&#20010;&#38382;&#39064;&#65292;from &#20808;&#20255;</span>","    set<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        element <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">'inline-block'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'inline'</span><span class=\"k\">;</span>","            element<span class=\"k\">.</span>zoom <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>display <span class=\"k\">=</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span> <span class=\"k\">:</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>firefox <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>firefox <span class=\"k\">&lt;</span> <span class=\"s\">3</span> <span class=\"k\">?</span> <span class=\"k\">{</span>","    set<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> value <span class=\"k\">==</span> <span class=\"s\">'inline-block'</span> <span class=\"k\">?</span> <span class=\"s\">'-moz-inline-box'</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFixer/float.js'] && (_$jscoverage['baidu/dom/_styleFixer/float.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All right reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFixer/float.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">[</span><span class=\"s\">\"float\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">\"styleFloat\"</span> <span class=\"k\">:</span> <span class=\"s\">\"cssFloat\"</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFixer/opacity.js'] && (_$jscoverage['baidu/dom/_styleFixer/opacity.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFixer/opacity.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">.</span>opacity <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"k\">{</span>","    get<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> filter <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">.</span>filter<span class=\"k\">;</span>","        <span class=\"k\">return</span> filter <span class=\"k\">&amp;&amp;</span> filter<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"opacity=\"</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"k\">(</span>parseFloat<span class=\"k\">(</span>filter<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/opacity=([^)]*)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">/</span> <span class=\"s\">100</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    set<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> style <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">;</span>","        <span class=\"c\">// &#21482;&#33021;Quirks Mode&#19979;&#38754;&#29983;&#25928;??</span>","        style<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"k\">(</span>style<span class=\"k\">.</span>filter <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/alpha\\([^\\)]*\\)/gi</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"alpha(opacity=\"</span> <span class=\"k\">+</span> value <span class=\"k\">*</span> <span class=\"s\">100</span> <span class=\"k\">+</span> <span class=\"s\">\")\"</span><span class=\"k\">);</span>","        <span class=\"c\">// IE filters only apply to elements with \"layout.\"</span>","        style<span class=\"k\">.</span>zoom <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFixer/size.js'] && (_$jscoverage['baidu/dom/_styleFixer/size.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/dom/_styleFixer/size.js</span>","<span class=\"c\"> * author: qiaoyue</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2012/03/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFixer;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;getStyle&#20351;&#29992;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">.</span>width <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">.</span>height <span class=\"k\">=</span> <span class=\"k\">{</span>","    get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> key <span class=\"k\">=</span> key<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^[a-z]/</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>$1<span class=\"k\">)</span><span class=\"k\">{</span>","\t            <span class=\"k\">return</span> $1<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","\t        <span class=\"k\">}</span><span class=\"k\">),</span>","        \tval <span class=\"k\">=</span> element<span class=\"k\">[</span><span class=\"s\">'client'</span> <span class=\"k\">+</span> key<span class=\"k\">]</span> <span class=\"k\">||</span> element<span class=\"k\">[</span><span class=\"s\">'offset'</span> <span class=\"k\">+</span> key<span class=\"k\">];</span>","","        <span class=\"k\">return</span> val <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> val <span class=\"k\">+</span> <span class=\"s\">'px'</span> <span class=\"k\">:</span> <span class=\"k\">!</span>value <span class=\"k\">||</span> value <span class=\"k\">==</span> <span class=\"s\">'auto'</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span> <span class=\"k\">:</span> val<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","    \telement<span class=\"k\">.</span>style<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/dom/_styleFixer/textOverflow.js'] && (_$jscoverage['baidu/dom/_styleFixer/textOverflow.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/dom/_styleFixer/textOverflow.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom._styleFixer;</span>","<span class=\"c\">///import baidu.dom.getStyle;</span>","<span class=\"c\">///import baidu.browser.firefox;</span>","<span class=\"c\">///import baidu.browser.opera;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25552;&#20379;&#32473;setStyle&#19982;getStyle&#20351;&#29992;&#65292;&#22312;&#20570;textOverflow&#26102;&#20250;&#21521;element&#23545;&#35937;&#20013;&#28155;&#21152;,_baiduOverflow, _baiduHTML&#20004;&#20010;&#23646;&#24615;&#20445;&#23384;&#21407;&#22987;&#30340;innerHTML&#20449;&#24687;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_styleFixer<span class=\"k\">.</span>textOverflow <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> fontSizeCache <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> pop<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> o <span class=\"k\">=</span> list<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>o <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            o <span class=\"k\">=</span> list<span class=\"k\">[</span>o <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","            list<span class=\"k\">.</span>length<span class=\"k\">--;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            o <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> o<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> setText<span class=\"k\">(</span>element<span class=\"k\">,</span> text<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">[</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>firefox <span class=\"k\">?</span> <span class=\"s\">\"textContent\"</span> <span class=\"k\">:</span> <span class=\"s\">\"innerText\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> text<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> count<span class=\"k\">(</span>element<span class=\"k\">,</span> width<span class=\"k\">,</span> ellipsis<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">/* &#35745;&#31639;cache&#30340;&#21517;&#31216; */</span>","        <span class=\"k\">var</span> o <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> element<span class=\"k\">.</span>currentStyle <span class=\"k\">||</span> element<span class=\"k\">.</span>style <span class=\"k\">:</span> getComputedStyle<span class=\"k\">(</span>element<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">),</span>","            fontWeight <span class=\"k\">=</span> o<span class=\"k\">.</span>fontWeight<span class=\"k\">,</span>","            cacheName <span class=\"k\">=</span>","                <span class=\"s\">\"font-family:\"</span> <span class=\"k\">+</span> o<span class=\"k\">.</span>fontFamily <span class=\"k\">+</span> <span class=\"s\">\";font-size:\"</span> <span class=\"k\">+</span> o<span class=\"k\">.</span>fontSize","                <span class=\"k\">+</span> <span class=\"s\">\";word-spacing:\"</span> <span class=\"k\">+</span> o<span class=\"k\">.</span>wordSpacing <span class=\"k\">+</span> <span class=\"s\">\";font-weight:\"</span> <span class=\"k\">+</span> <span class=\"k\">((</span>parseInt<span class=\"k\">(</span>fontWeight<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">401</span> <span class=\"k\">?</span> <span class=\"s\">700</span> <span class=\"k\">:</span> fontWeight<span class=\"k\">)</span>","                <span class=\"k\">+</span> <span class=\"s\">\";font-style:\"</span> <span class=\"k\">+</span> o<span class=\"k\">.</span>fontStyle <span class=\"k\">+</span> <span class=\"s\">\";font-variant:\"</span> <span class=\"k\">+</span> o<span class=\"k\">.</span>fontVariant<span class=\"k\">,</span>","            cache <span class=\"k\">=</span> fontSizeCache<span class=\"k\">[</span>cacheName<span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>cache<span class=\"k\">)</span> <span class=\"k\">{</span>","            o <span class=\"k\">=</span> element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">));</span>","","            o<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">\"float:left;\"</span> <span class=\"k\">+</span> cacheName<span class=\"k\">;</span>","            cache <span class=\"k\">=</span> fontSizeCache<span class=\"k\">[</span>cacheName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[];</span>","","            <span class=\"c\">/* &#35745;&#31639;ASCII&#23383;&#31526;&#30340;&#23485;&#24230;cache */</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">256</span><span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                i <span class=\"k\">==</span> <span class=\"s\">32</span> <span class=\"k\">?</span> <span class=\"k\">(</span>o<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&amp;nbsp;\"</span><span class=\"k\">)</span> <span class=\"k\">:</span> setText<span class=\"k\">(</span>o<span class=\"k\">,</span> String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>i<span class=\"k\">));</span>","                cache<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> o<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/* &#35745;&#31639;&#38750;ASCII&#23383;&#31526;&#30340;&#23485;&#24230;&#12289;&#23383;&#31526;&#38388;&#36317;&#12289;&#30465;&#30053;&#21495;&#30340;&#23485;&#24230;,\\u4e00&#26159;&#27721;&#23383;&#19968;&#30340;&#32534;&#30721;*/</span>","            setText<span class=\"k\">(</span>o<span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\u</span><span class=\"s\">4e00\"</span><span class=\"k\">);</span>","            cache<span class=\"k\">[</span><span class=\"s\">256</span><span class=\"k\">]</span> <span class=\"k\">=</span> o<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","            setText<span class=\"k\">(</span>o<span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\u</span><span class=\"s\">4e00</span><span class=\"t\">\\u</span><span class=\"s\">4e00\"</span><span class=\"k\">);</span>","            cache<span class=\"k\">[</span><span class=\"s\">257</span><span class=\"k\">]</span> <span class=\"k\">=</span> o<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> cache<span class=\"k\">[</span><span class=\"s\">256</span><span class=\"k\">]</span> <span class=\"k\">*</span> <span class=\"s\">2</span><span class=\"k\">;</span>","            cache<span class=\"k\">[</span><span class=\"s\">258</span><span class=\"k\">]</span> <span class=\"k\">=</span> cache<span class=\"k\">[</span><span class=\"s\">\".\"</span><span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)]</span> <span class=\"k\">*</span> <span class=\"s\">3</span> <span class=\"k\">+</span> cache<span class=\"k\">[</span><span class=\"s\">257</span><span class=\"k\">]</span> <span class=\"k\">*</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","            element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>o<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span>","            <span class=\"c\">/* wordWidth&#26159;&#27599;&#20010;&#23383;&#31526;&#25110;&#23376;&#33410;&#28857;&#35745;&#31639;&#20043;&#21069;&#30340;&#23485;&#24230;&#24207;&#21015; */</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> element<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> charWidth <span class=\"k\">=</span> cache<span class=\"k\">[</span><span class=\"s\">256</span><span class=\"k\">],</span> wordSpacing <span class=\"k\">=</span> cache<span class=\"k\">[</span><span class=\"s\">257</span><span class=\"k\">],</span> ellipsisWidth <span class=\"k\">=</span> cache<span class=\"k\">[</span><span class=\"s\">258</span><span class=\"k\">],</span>","                wordWidth <span class=\"k\">=</span> <span class=\"k\">[],</span> ellipsis <span class=\"k\">=</span> ellipsis <span class=\"k\">?</span> ellipsisWidth <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            node<span class=\"k\">;</span>","            node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling","        <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">&lt;</span> ellipsis<span class=\"k\">)</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> text <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">,</span> length <span class=\"k\">=</span> text<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    o <span class=\"k\">=</span> text<span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span>i<span class=\"k\">);</span>","                    <span class=\"c\">/* &#35745;&#31639;&#22686;&#21152;&#23383;&#31526;&#21518;&#21097;&#20313;&#30340;&#38271;&#24230; */</span>","                    wordWidth<span class=\"k\">[</span>wordWidth<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>width<span class=\"k\">,</span> node<span class=\"k\">,</span> i<span class=\"k\">];</span>","                    width <span class=\"k\">-=</span> <span class=\"k\">(</span>i <span class=\"k\">?</span> wordSpacing <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"k\">(</span>o <span class=\"k\">&lt;</span> <span class=\"s\">256</span> <span class=\"k\">?</span> cache<span class=\"k\">[</span>o<span class=\"k\">]</span> <span class=\"k\">:</span> charWidth<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">&lt;</span> ellipsis<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> <span class=\"k\">{</span>","                o <span class=\"k\">=</span> node<span class=\"k\">.</span>tagName<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>o <span class=\"k\">==</span> <span class=\"s\">\"IMG\"</span> <span class=\"k\">||</span> o <span class=\"k\">==</span> <span class=\"s\">\"TABLE\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">/* &#29305;&#27530;&#20803;&#32032;&#30452;&#25509;&#21024;&#38500; */</span>","                    o <span class=\"k\">=</span> node<span class=\"k\">;</span>","                    node <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                    element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>o<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">else</span> <span class=\"k\">{</span>","                    wordWidth<span class=\"k\">[</span>wordWidth<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>width<span class=\"k\">,</span> node<span class=\"k\">];</span>","                    width <span class=\"k\">-=</span> node<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">&lt;</span> ellipsis<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">/* &#36807;&#28388;&#30452;&#21040;&#33021;&#24471;&#21040;&#22823;&#20110;&#30465;&#30053;&#21495;&#23485;&#24230;&#30340;&#20301;&#32622; */</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>o <span class=\"k\">=</span> pop<span class=\"k\">(</span>wordWidth<span class=\"k\">))</span> <span class=\"k\">{</span>","                width <span class=\"k\">=</span> o<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                node <span class=\"k\">=</span> o<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","                o <span class=\"k\">=</span> o<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">&gt;=</span> ellipsisWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","                        node<span class=\"k\">.</span>nodeValue <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> o<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"...\"</span><span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","                        element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>count<span class=\"k\">(</span>node<span class=\"k\">,</span> width<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">else</span> <span class=\"k\">{</span>","                    element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/* &#33021;&#26174;&#31034;&#30340;&#23485;&#24230;&#23567;&#20110;&#30465;&#30053;&#21495;&#30340;&#23485;&#24230;&#65292;&#30452;&#25509;&#19981;&#26174;&#31034; */</span>","            element<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\tget<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> browser <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">,</span>","                getStyle <span class=\"k\">=</span> dom<span class=\"k\">.</span>getStyle<span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>opera <span class=\"k\">?</span>","                        getStyle<span class=\"k\">(</span><span class=\"s\">\"OTextOverflow\"</span><span class=\"k\">)</span> <span class=\"k\">:</span>","                        browser<span class=\"k\">.</span>firefox <span class=\"k\">?</span>","                            element<span class=\"k\">.</span>_baiduOverflow <span class=\"k\">:</span>","                            getStyle<span class=\"k\">(</span><span class=\"s\">\"textOverflow\"</span><span class=\"k\">))</span> <span class=\"k\">||</span>","                   <span class=\"s\">\"clip\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tset<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> browser <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">;</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">||</span> element<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span> <span class=\"k\">||</span> browser<span class=\"k\">.</span>firefox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\telement<span class=\"k\">.</span>_baiduHTML <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> element<span class=\"k\">.</span>_baiduHTML<span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">\"ellipsis\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\telement<span class=\"k\">.</span>_baiduHTML <span class=\"k\">=</span> element<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">var</span> o <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">),</span> width <span class=\"k\">=</span> element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>o<span class=\"k\">).</span>offsetWidth<span class=\"k\">;</span>","\t\t\t\t\telement<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>o<span class=\"k\">);</span>","\t\t\t\t\tcount<span class=\"k\">(</span>element<span class=\"k\">,</span> width<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\telement<span class=\"k\">.</span>_baiduHTML <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\to <span class=\"k\">=</span> element<span class=\"k\">.</span>style<span class=\"k\">;</span>","\t\t\tbrowser<span class=\"k\">.</span>opera <span class=\"k\">?</span> <span class=\"k\">(</span>o<span class=\"k\">.</span>OTextOverflow <span class=\"k\">=</span> value<span class=\"k\">)</span> <span class=\"k\">:</span> browser<span class=\"k\">.</span>firefox <span class=\"k\">?</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>_baiduOverflow <span class=\"k\">=</span> value<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>o<span class=\"k\">.</span>textOverflow <span class=\"k\">=</span> value<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/element/extend.js'] && (_$jscoverage['baidu/element/extend.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/element/extend.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.element;</span>","","<span class=\"c\">///import baidu.object.each;</span>","<span class=\"c\">///import baidu.fn.wrapReturnValue;</span>","<span class=\"c\">///import baidu.fn.methodize;</span>",""," <span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;element&#23545;&#35937;&#25193;&#23637;&#19968;&#20010;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @name baidu.element.extend</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.element.extend(json)</span>","<span class=\"c\"> * @param {Object} json &#35201;&#25193;&#23637;&#30340;&#26041;&#27861;&#21517;&#20197;&#21450;&#26041;&#27861;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @shortcut e</span>","<span class=\"c\"> * @returns {baidu.element.Element} Element&#23545;&#35937;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>extend <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>json<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> e <span class=\"k\">=</span> baidu<span class=\"k\">.</span>element<span class=\"k\">;</span>","    baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>each<span class=\"k\">(</span>json<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>item<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","        e<span class=\"k\">.</span>Element<span class=\"k\">.</span>prototype<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> baidu<span class=\"k\">.</span>element<span class=\"k\">.</span>_toChainFunction<span class=\"k\">(</span>item<span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/EventArg.js'] && (_$jscoverage['baidu/event/EventArg.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/EventArg.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/01/11</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20107;&#20214;&#23545;&#35937;&#26500;&#36896;&#22120;&#65292;&#23631;&#34109;&#27983;&#35272;&#22120;&#24046;&#24322;&#30340;&#20107;&#20214;&#31867;</span>","<span class=\"c\"> * @name baidu.event.EventArg</span>","<span class=\"c\"> * @class</span>","<span class=\"c\"> * @grammar baidu.event.EventArg(event[, win])</span>","<span class=\"c\"> * @param {Event}   event   &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @param {Window}  [win]\t&#31383;&#21475;&#23545;&#35937;&#65292;&#40664;&#35748;&#20026;window</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @remark 1.1.0&#24320;&#22987;&#25903;&#25345;</span>","<span class=\"c\"> * @see baidu.event.get</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>EventArg <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">,</span> win<span class=\"k\">)</span> <span class=\"k\">{</span>","    win <span class=\"k\">=</span> win <span class=\"k\">||</span> window<span class=\"k\">;</span>","    event <span class=\"k\">=</span> event <span class=\"k\">||</span> win<span class=\"k\">.</span>event<span class=\"k\">;</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> win<span class=\"k\">.</span>document<span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>target <span class=\"k\">=</span> <span class=\"c\">/** @type {Node} */</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>target<span class=\"k\">)</span> <span class=\"k\">||</span> event<span class=\"k\">.</span>srcElement<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>keyCode <span class=\"k\">=</span> event<span class=\"k\">.</span>which <span class=\"k\">||</span> event<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> k <span class=\"k\">in</span> event<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> item <span class=\"k\">=</span> event<span class=\"k\">[</span>k<span class=\"k\">];</span>","        <span class=\"c\">// &#36991;&#20813;&#25335;&#36125;preventDefault&#31561;&#20107;&#20214;&#23545;&#35937;&#26041;&#27861;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">!=</span> <span class=\"k\">typeof</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> item<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>pageX <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>pageX <span class=\"k\">!==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>pageX <span class=\"k\">=</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>clientX <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> ","                        <span class=\"k\">+</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollLeft ","                            <span class=\"k\">||</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>pageY <span class=\"k\">=</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>clientY <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> ","                        <span class=\"k\">+</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollTop ","                            <span class=\"k\">||</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_event <span class=\"k\">=</span> event<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#38459;&#27490;&#20107;&#20214;&#30340;&#40664;&#35748;&#34892;&#20026;</span>","<span class=\"c\"> * @name preventDefault</span>","<span class=\"c\"> * @grammar eventArgObj.preventDefault()</span>","<span class=\"c\"> * @returns {baidu.event.EventArg} EventArg&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>EventArg<span class=\"k\">.</span>prototype<span class=\"k\">.</span>preventDefault <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>preventDefault<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20572;&#27490;&#20107;&#20214;&#30340;&#20256;&#25773;</span>","<span class=\"c\"> * @name stopPropagation</span>","<span class=\"c\"> * @grammar eventArgObj.stopPropagation()</span>","<span class=\"c\"> * @returns {baidu.event.EventArg} EventArg&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>EventArg<span class=\"k\">.</span>prototype<span class=\"k\">.</span>stopPropagation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>stopPropagation<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_event<span class=\"k\">.</span>cancelBubble <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20572;&#27490;&#20107;&#20214;</span>","<span class=\"c\"> * @name stop</span>","<span class=\"c\"> * @grammar eventArgObj.stop()</span>","<span class=\"c\"> * @returns {baidu.event.EventArg} EventArg&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>EventArg<span class=\"k\">.</span>prototype<span class=\"k\">.</span>stop <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>stopPropagation<span class=\"k\">().</span>preventDefault<span class=\"k\">();</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/fire.js'] && (_$jscoverage['baidu/event/fire.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/fire.js</span>","<span class=\"c\"> * author: linlingyu</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/10/28</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.event;</span>","<span class=\"c\">///import baidu.dom._g;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.object.extend;</span>","<span class=\"c\">///import baidu.object.values;</span>","<span class=\"c\">///import baidu.lang.isNumber;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35302;&#21457;&#24050;&#32463;&#27880;&#20876;&#30340;&#20107;&#20214;&#12290;&#27880;&#65306;&#22312;ie&#19979;&#19981;&#25903;&#25345;load&#21644;unload&#20107;&#20214;</span>","<span class=\"c\"> * @name baidu.event.fire</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.fire(element, type, options)</span>","<span class=\"c\"> * @param {HTMLElement|string|window} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;id</span>","<span class=\"c\"> * @param {string} type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Object} options &#35302;&#21457;&#30340;&#36873;&#39033;</span>","<span class=\"c\">\t\t\t\t</span>","<span class=\"c\"> * @param {Boolean} options.bubbles &#26159;&#21542;&#20882;&#27873;</span>","<span class=\"c\"> * @param {Boolean} options.cancelable &#26159;&#21542;&#21487;&#20197;&#38459;&#27490;&#20107;&#20214;&#30340;&#40664;&#35748;&#25805;&#20316;</span>","<span class=\"c\"> * @param {window|null} options.view &#25351;&#23450; Event &#30340; AbstractView</span>","<span class=\"c\"> * @param {1|Number} options.detail &#25351;&#23450; Event &#30340;&#40736;&#26631;&#21333;&#20987;&#37327;</span>","<span class=\"c\"> * @param {Number} options.screenX &#25351;&#23450; Event &#30340;&#23631;&#24149; x &#22352;&#26631;</span>","<span class=\"c\"> * @param {Number} options.screenY number &#25351;&#23450; Event &#30340;&#23631;&#24149; y &#22352;&#26631;</span>","<span class=\"c\"> * @param {Number} options.clientX &#25351;&#23450; Event &#30340;&#23458;&#25143;&#31471; x &#22352;&#26631;</span>","<span class=\"c\"> * @param {Number} options.clientY &#25351;&#23450; Event &#30340;&#23458;&#25143;&#31471; y &#22352;&#26631;</span>","<span class=\"c\"> * @param {Boolean} options.ctrlKey &#25351;&#23450;&#26159;&#21542;&#22312; Event &#26399;&#38388;&#25353;&#19979; ctrl &#38190;</span>","<span class=\"c\"> * @param {Boolean} options.altKey &#25351;&#23450;&#26159;&#21542;&#22312; Event &#26399;&#38388;&#25353;&#19979; alt &#38190;</span>","<span class=\"c\"> * @param {Boolean} options.shiftKey &#25351;&#23450;&#26159;&#21542;&#22312; Event &#26399;&#38388;&#25353;&#19979; shift &#38190;</span>","<span class=\"c\"> * @param {Boolean} options.metaKey &#25351;&#23450;&#26159;&#21542;&#22312; Event &#26399;&#38388;&#25353;&#19979; meta &#38190;</span>","<span class=\"c\"> * @param {Number} options.button &#25351;&#23450; Event &#30340;&#40736;&#26631;&#25353;&#38190;</span>","<span class=\"c\"> * @param {Number} options.keyCode &#25351;&#23450; Event &#30340;&#38190;&#30424;&#25353;&#38190;</span>","<span class=\"c\"> * @param {Number} options.charCode &#25351;&#23450; Event &#30340;&#23383;&#31526;&#32534;&#30721;</span>","<span class=\"c\"> * @param {HTMLElement} options.relatedTarget &#25351;&#23450; Event &#30340;&#30456;&#20851; EventTarget</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> browser <span class=\"k\">=</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">,</span>","\tkeys <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tkeydown <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tkeyup <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tkeypress <span class=\"k\">:</span> <span class=\"s\">1</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tmouses <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tclick <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tdblclick <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tmousedown <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tmousemove <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tmouseup <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tmouseover <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tmouseout <span class=\"k\">:</span> <span class=\"s\">1</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\thtmls <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tabort <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tblur <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tchange <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\terror <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tfocus <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tload <span class=\"k\">:</span> browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\treset <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tresize <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tscroll <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tselect <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tsubmit <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tunload <span class=\"k\">:</span> browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"s\">1</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tbubblesEvents <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tscroll <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tresize <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\treset <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tsubmit <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tchange <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tselect <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\terror <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tabort <span class=\"k\">:</span> <span class=\"s\">1</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tparameters <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">\"KeyEvents\"</span> <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"bubbles\"</span><span class=\"k\">,</span> <span class=\"s\">\"cancelable\"</span><span class=\"k\">,</span> <span class=\"s\">\"view\"</span><span class=\"k\">,</span> <span class=\"s\">\"ctrlKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"altKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"shiftKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"metaKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"keyCode\"</span><span class=\"k\">,</span> <span class=\"s\">\"charCode\"</span><span class=\"k\">],</span>","\t\t<span class=\"s\">\"MouseEvents\"</span> <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"bubbles\"</span><span class=\"k\">,</span> <span class=\"s\">\"cancelable\"</span><span class=\"k\">,</span> <span class=\"s\">\"view\"</span><span class=\"k\">,</span> <span class=\"s\">\"detail\"</span><span class=\"k\">,</span> <span class=\"s\">\"screenX\"</span><span class=\"k\">,</span> <span class=\"s\">\"screenY\"</span><span class=\"k\">,</span> <span class=\"s\">\"clientX\"</span><span class=\"k\">,</span> <span class=\"s\">\"clientY\"</span><span class=\"k\">,</span> <span class=\"s\">\"ctrlKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"altKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"shiftKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"metaKey\"</span><span class=\"k\">,</span> <span class=\"s\">\"button\"</span><span class=\"k\">,</span> <span class=\"s\">\"relatedTarget\"</span><span class=\"k\">],</span>","\t\t<span class=\"s\">\"HTMLEvents\"</span> <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"bubbles\"</span><span class=\"k\">,</span> <span class=\"s\">\"cancelable\"</span><span class=\"k\">],</span>","\t\t<span class=\"s\">\"UIEvents\"</span> <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"bubbles\"</span><span class=\"k\">,</span> <span class=\"s\">\"cancelable\"</span><span class=\"k\">,</span> <span class=\"s\">\"view\"</span><span class=\"k\">,</span> <span class=\"s\">\"detail\"</span><span class=\"k\">],</span>","\t\t<span class=\"s\">\"Events\"</span> <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"bubbles\"</span><span class=\"k\">,</span> <span class=\"s\">\"cancelable\"</span><span class=\"k\">]</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\tbaidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span>bubblesEvents<span class=\"k\">,</span> keys<span class=\"k\">);</span>","\tbaidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span>bubblesEvents<span class=\"k\">,</span> mouses<span class=\"k\">);</span>","\t<span class=\"k\">function</span> parse<span class=\"k\">(</span>array<span class=\"k\">,</span> source<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//&#25353;&#29031;array&#30340;&#39033;&#22312;source&#20013;&#25214;&#21040;&#20540;&#29983;&#25104;&#26032;&#30340;obj&#24182;&#25226;source&#20013;&#23545;&#24212;&#30340;array&#30340;&#39033;&#21024;&#38500;</span>","\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> size <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">,</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t<span class=\"k\">for</span><span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> size<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","\t\t\tobj<span class=\"k\">[</span>array<span class=\"k\">[</span>i<span class=\"k\">]]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span>array<span class=\"k\">[</span>i<span class=\"k\">]];</span>","\t\t\t<span class=\"k\">delete</span> source<span class=\"k\">[</span>array<span class=\"k\">[</span>i<span class=\"k\">]];</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> obj<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> eventType<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//&#38750;IE&#20869;&#26680;&#30340;&#20107;&#20214;&#36741;&#21161;</span>","\t\toptions <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> param <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>values<span class=\"k\">(</span>parse<span class=\"k\">(</span>parameters<span class=\"k\">[</span>eventType<span class=\"k\">],</span> options<span class=\"k\">)),</span>","\t\t\tevnt <span class=\"k\">=</span> document<span class=\"k\">.</span>createEvent<span class=\"k\">(</span>eventType<span class=\"k\">);</span>","\t\tparam<span class=\"k\">.</span>unshift<span class=\"k\">(</span>type<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">\"KeyEvents\"</span> <span class=\"k\">==</span> eventType<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tevnt<span class=\"k\">.</span>initKeyEvent<span class=\"k\">.</span>apply<span class=\"k\">(</span>evnt<span class=\"k\">,</span> param<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">\"MouseEvents\"</span> <span class=\"k\">==</span> eventType<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tevnt<span class=\"k\">.</span>initMouseEvent<span class=\"k\">.</span>apply<span class=\"k\">(</span>evnt<span class=\"k\">,</span> param<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">\"UIEvents\"</span> <span class=\"k\">==</span> eventType<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tevnt<span class=\"k\">.</span>initUIEvent<span class=\"k\">.</span>apply<span class=\"k\">(</span>evnt<span class=\"k\">,</span> param<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"c\">//HTMMLEvents, Events</span>","\t\t\tevnt<span class=\"k\">.</span>initEvent<span class=\"k\">.</span>apply<span class=\"k\">(</span>evnt<span class=\"k\">,</span> param<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\tbaidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span>evnt<span class=\"k\">,</span> options<span class=\"k\">);</span><span class=\"c\">//&#25226;&#22810;&#20986;&#26469;&#30340;options&#20877;&#38468;&#21152;&#19978;&#21435;,&#36825;&#26159;&#20026;&#35299;&#20915;&#24403;&#21019;&#24314;&#19968;&#20010;&#20854;&#23427;event&#26102;&#65292;&#24403;&#29992;Events&#20195;&#26367;&#21518;&#38656;&#35201;&#25226;&#21442;&#25968;&#38468;&#21152;&#21040;&#23545;&#35937;&#19978;</span>","\t\t<span class=\"k\">return</span> evnt<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> eventObject<span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//ie&#20869;&#26680;&#30340;&#26500;&#24314;&#26041;&#24335;</span>","\t\t<span class=\"k\">var</span> evnt<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>document<span class=\"k\">.</span>createEventObject<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> document<span class=\"k\">.</span>createEventObject<span class=\"k\">();</span>","\t\t\tbaidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span>evnt<span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> evnt<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> keyEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//keyEvents</span>","\t\toptions <span class=\"k\">=</span> parse<span class=\"k\">(</span>parameters<span class=\"k\">[</span><span class=\"s\">\"KeyEvents\"</span><span class=\"k\">],</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> evnt<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>document<span class=\"k\">.</span>createEvent<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">try</span><span class=\"k\">{</span><span class=\"c\">//opera&#23545;keyEvents&#30340;&#25903;&#25345;&#26497;&#24046;</span>","\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"KeyEvents\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>keyError<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">try</span><span class=\"k\">{</span>","\t\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"Events\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>evtError<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"UIEvents\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","\t\t\toptions<span class=\"k\">.</span>keyCode <span class=\"k\">=</span> options<span class=\"k\">.</span>charCode <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> options<span class=\"k\">.</span>charCode <span class=\"k\">:</span> options<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","\t\t\tevnt <span class=\"k\">=</span> eventObject<span class=\"k\">(</span>options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> evnt<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> mouseEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//mouseEvents</span>","\t\toptions <span class=\"k\">=</span> parse<span class=\"k\">(</span>parameters<span class=\"k\">[</span><span class=\"s\">\"MouseEvents\"</span><span class=\"k\">],</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> evnt<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>document<span class=\"k\">.</span>createEvent<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"MouseEvents\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span><span class=\"c\">//mouseEvents&#22522;&#26412;&#27983;&#35272;&#22120;&#37117;&#25903;&#25345;</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>options<span class=\"k\">.</span>relatedTarget <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evnt<span class=\"k\">.</span>relatedTarget<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">\"mouseout\"</span> <span class=\"k\">==</span> type<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span><span class=\"k\">{</span>","\t\t\t\t\tevnt<span class=\"k\">.</span>toElement <span class=\"k\">=</span> options<span class=\"k\">.</span>relatedTarget<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">\"mouseover\"</span> <span class=\"k\">==</span> type<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span><span class=\"k\">{</span>","\t\t\t\t\tevnt<span class=\"k\">.</span>fromElement <span class=\"k\">=</span> options<span class=\"k\">.</span>relatedTarget<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","\t\t\toptions<span class=\"k\">.</span>button <span class=\"k\">=</span> options<span class=\"k\">.</span>button <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">1</span>","\t\t\t\t\t\t\t\t<span class=\"k\">:</span> options<span class=\"k\">.</span>button <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">4</span>","\t\t\t\t\t\t\t\t\t<span class=\"k\">:</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>options<span class=\"k\">.</span>button<span class=\"k\">)</span> <span class=\"k\">?</span> options<span class=\"k\">.</span>button <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\tevnt <span class=\"k\">=</span> eventObject<span class=\"k\">(</span>options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> evnt<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> htmlEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//htmlEvents</span>","\t\toptions<span class=\"k\">.</span>bubbles <span class=\"k\">=</span> bubblesEvents<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>type<span class=\"k\">);</span>","\t\toptions <span class=\"k\">=</span> parse<span class=\"k\">(</span>parameters<span class=\"k\">[</span><span class=\"s\">\"HTMLEvents\"</span><span class=\"k\">],</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> evnt<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>document<span class=\"k\">.</span>createEvent<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">try</span><span class=\"k\">{</span>","\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"HTMLEvents\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>htmlError<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">try</span><span class=\"k\">{</span>","\t\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"UIEvents\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>uiError<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t\tevnt <span class=\"k\">=</span> eventsHelper<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"Events\"</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> eventObject<span class=\"k\">(</span>options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> evnt<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\tbaidu<span class=\"k\">.</span>event<span class=\"k\">.</span>fire <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> options<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> evnt<span class=\"k\">;</span>","\t\ttype <span class=\"k\">=</span> type<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^on/i</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","\t\telement <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t\toptions <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\tbubbles <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\tcancelable <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\tview <span class=\"k\">:</span> window<span class=\"k\">,</span>","\t\t\tdetail <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\t\tscreenX <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tscreenY <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tclientX <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tclientY <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tctrlKey <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\taltKey  <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\tshiftKey<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\tmetaKey <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\tkeyCode <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tcharCode<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tbutton  <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\trelatedTarget <span class=\"k\">:</span> <span class=\"k\">null</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>keys<span class=\"k\">[</span>type<span class=\"k\">])</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> keyEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>mouses<span class=\"k\">[</span>type<span class=\"k\">])</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> mouseEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>htmls<span class=\"k\">[</span>type<span class=\"k\">])</span><span class=\"k\">{</span>","\t\t\tevnt <span class=\"k\">=</span> htmlEvents<span class=\"k\">(</span>type<span class=\"k\">,</span> options<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","\t\t    <span class=\"k\">throw</span><span class=\"k\">(</span><span class=\"k\">new</span> Error<span class=\"k\">(</span>type <span class=\"k\">+</span> <span class=\"s\">\" is not support!\"</span><span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>evnt<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"c\">//tigger event</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>element<span class=\"k\">.</span>dispatchEvent<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\telement<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evnt<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>element<span class=\"k\">.</span>fireEvent<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\telement<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"on\"</span> <span class=\"k\">+</span> type<span class=\"k\">,</span> evnt<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/event/get.js'] && (_$jscoverage['baidu/event/get.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/get.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event.EventArg;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#25193;&#23637;&#30340;EventArg&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.event.get</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.get(event[, win])</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @param {window} [win] &#35302;&#21457;&#20107;&#20214;&#20803;&#32032;&#25152;&#22312;&#30340;window</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.event.EventArg</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {EventArg} &#25193;&#23637;&#30340;&#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>get <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">,</span> win<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>EventArg<span class=\"k\">(</span>event<span class=\"k\">,</span> win<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/getEvent.js'] && (_$jscoverage['baidu/event/getEvent.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/event/getEvent.js</span>","<span class=\"c\"> * author: xiadengping</span>","<span class=\"c\"> * version: 1.6.0</span>","<span class=\"c\"> * date: 2011/12/08</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.event.getEvent</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @param {Event} event event&#23545;&#35937;&#65292;&#30446;&#21069;&#27809;&#26377;&#20351;&#29992;&#36825;&#20010;&#21442;&#25968;&#65292;&#21482;&#26159;&#20445;&#30041;&#25509;&#21475;&#12290;by dengping.</span>","<span class=\"c\"> * @grammar baidu.event.getEvent()</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @return {Event} event&#23545;&#35937;.</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getEvent <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> window<span class=\"k\">.</span>event<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> f <span class=\"k\">=</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">;</span>","        <span class=\"k\">do</span> <span class=\"k\">{</span> <span class=\"c\">//&#27492;&#22788;&#21442;&#32771;Qwrap&#26694;&#26550; see http://www.qwrap.com/ by dengping</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/Event/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>f<span class=\"k\">.</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> f<span class=\"k\">.</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span>f <span class=\"k\">=</span> f<span class=\"k\">.</span>caller<span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/getKeyCode.js'] && (_$jscoverage['baidu/event/getKeyCode.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/getKeyCode.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#38190;&#30424;&#20107;&#20214;&#30340;&#38190;&#20540;</span>","<span class=\"c\"> * @name baidu.event.getKeyCode</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.getKeyCode(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#38190;&#30424;&#20107;&#20214;&#30340;&#38190;&#20540;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getKeyCode <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> event<span class=\"k\">.</span>which <span class=\"k\">||</span> event<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/getPageX.js'] && (_$jscoverage['baidu/event/getPageX.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/getPageX.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;x&#22352;&#26631;</span>","<span class=\"c\"> * @name baidu.event.getPageX</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.getPageX(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.event.getPageY</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;x&#22352;&#26631;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getPageX <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> event<span class=\"k\">.</span>pageX<span class=\"k\">,</span>","        doc <span class=\"k\">=</span> document<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>result <span class=\"k\">&amp;&amp;</span> result <span class=\"k\">!==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        result <span class=\"k\">=</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>clientX <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> ","                    <span class=\"k\">+</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollLeft ","                        <span class=\"k\">||</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/getPageY.js'] && (_$jscoverage['baidu/event/getPageY.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/getPageY.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;y&#22352;&#26631;</span>","<span class=\"c\"> * @name baidu.event.getPageY</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.getPageY(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.event.getPageX</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#40736;&#26631;&#20107;&#20214;&#30340;&#40736;&#26631;y&#22352;&#26631;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getPageY <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> event<span class=\"k\">.</span>pageY<span class=\"k\">,</span>","        doc <span class=\"k\">=</span> document<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>result <span class=\"k\">&amp;&amp;</span> result <span class=\"k\">!==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        result <span class=\"k\">=</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>clientY <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> ","                    <span class=\"k\">+</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollTop ","                        <span class=\"k\">||</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/getTarget.js'] && (_$jscoverage['baidu/event/getTarget.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/getTarget.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#20107;&#20214;&#30340;&#35302;&#21457;&#20803;&#32032;</span>","<span class=\"c\"> * @name baidu.event.getTarget</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.getTarget(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {HTMLElement} &#20107;&#20214;&#30340;&#35302;&#21457;&#20803;&#32032;</span>","<span class=\"c\"> */</span>"," ","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>getTarget <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> event<span class=\"k\">.</span>target <span class=\"k\">||</span> event<span class=\"k\">.</span>srcElement<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/on.js'] && (_$jscoverage['baidu/event/on.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/on.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event._listeners;</span>","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#20803;&#32032;&#28155;&#21152;&#20107;&#20214;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @name baidu.event.on</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.on(element, type, listener)</span>","<span class=\"c\"> * @param {HTMLElement|string|window} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;id</span>","<span class=\"c\"> * @param {string} type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Function} listener &#38656;&#35201;&#28155;&#21152;&#30340;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">1. &#19981;&#25903;&#25345;&#36328;&#27983;&#35272;&#22120;&#30340;&#40736;&#26631;&#28378;&#36718;&#20107;&#20214;&#30417;&#21548;&#22120;&#28155;&#21152;&lt;br&gt;</span>","<span class=\"c\">2. &#25913;&#26041;&#27861;&#19981;&#20026;&#30417;&#21548;&#22120;&#28748;&#20837;&#20107;&#20214;&#23545;&#35937;&#65292;&#20197;&#38450;&#27490;&#36328;iframe&#20107;&#20214;&#25346;&#36733;&#30340;&#20107;&#20214;&#23545;&#35937;&#33719;&#21462;&#22833;&#36133;</span>","<span class=\"c\">    </span>","<span class=\"c\"> * @shortcut on</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.event.un</span>","<span class=\"c\"> * @returns {HTMLElement|window} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> listener<span class=\"k\">)</span> <span class=\"k\">{</span>","    type <span class=\"k\">=</span> type<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^on/i</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    <span class=\"k\">var</span> realListener <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>ev<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// 1. &#36825;&#37324;&#19981;&#25903;&#25345;EventArgument,  &#21407;&#22240;&#26159;&#36328;frame&#30340;&#20107;&#20214;&#25346;&#36733;</span>","            <span class=\"c\">// 2. element&#26159;&#20026;&#20102;&#20462;&#27491;this</span>","            listener<span class=\"k\">.</span>call<span class=\"k\">(</span>element<span class=\"k\">,</span> ev<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        lis <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_listeners<span class=\"k\">,</span>","        filter <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">,</span>","        afterFilter<span class=\"k\">,</span>","        realType <span class=\"k\">=</span> type<span class=\"k\">;</span>","    type <span class=\"k\">=</span> type<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","    <span class=\"c\">// filter&#36807;&#28388;</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>filter <span class=\"k\">&amp;&amp;</span> filter<span class=\"k\">[</span>type<span class=\"k\">])</span><span class=\"k\">{</span>","        afterFilter <span class=\"k\">=</span> filter<span class=\"k\">[</span>type<span class=\"k\">](</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> realListener<span class=\"k\">);</span>","        realType <span class=\"k\">=</span> afterFilter<span class=\"k\">.</span>type<span class=\"k\">;</span>","        realListener <span class=\"k\">=</span> afterFilter<span class=\"k\">.</span>listener<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#20107;&#20214;&#30417;&#21548;&#22120;&#25346;&#36733;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>realType<span class=\"k\">,</span> realListener<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>attachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'on'</span> <span class=\"k\">+</span> realType<span class=\"k\">,</span> realListener<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  ","    <span class=\"c\">// &#23558;&#30417;&#21548;&#22120;&#23384;&#20648;&#21040;&#25968;&#32452;&#20013;</span>","    lis<span class=\"k\">[</span>lis<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> listener<span class=\"k\">,</span> realListener<span class=\"k\">,</span> realType<span class=\"k\">];</span>","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>on <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/once.js'] && (_$jscoverage['baidu/event/once.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/once.js</span>","<span class=\"c\"> * author: wangcheng</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/10/29</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#20803;&#32032;&#28155;&#21152;&#19968;&#27425;&#20107;&#20214;&#32465;&#23450;</span>","<span class=\"c\"> * @name baidu.event.once</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.once(element, type, listener)</span>","<span class=\"c\"> * @param {HTMLElement|string} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;id</span>","<span class=\"c\"> * @param {string} type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Function} listener &#38656;&#35201;&#28155;&#21152;&#30340;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @see baidu.event.un,baidu.event.on</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>once <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> listener<span class=\"k\">)</span><span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">function</span> onceListener<span class=\"k\">(</span>event<span class=\"k\">)</span><span class=\"k\">{</span>","        listener<span class=\"k\">.</span>call<span class=\"k\">(</span>element<span class=\"k\">,</span>event<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un<span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> onceListener<span class=\"k\">);</span>","    <span class=\"k\">}</span> ","    ","    baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> onceListener<span class=\"k\">);</span>","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/preventDefault.js'] && (_$jscoverage['baidu/event/preventDefault.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/preventDefault.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#38459;&#27490;&#20107;&#20214;&#30340;&#40664;&#35748;&#34892;&#20026;</span>","<span class=\"c\"> * @name baidu.event.preventDefault</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.preventDefault(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.event.stop,baidu.event.stopPropagation</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>preventDefault <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","   <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>preventDefault<span class=\"k\">)</span> <span class=\"k\">{</span>","       event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","   <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","       event<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","   <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/stop.js'] && (_$jscoverage['baidu/event/stop.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/stop.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event.stopPropagation;</span>","<span class=\"c\">///import baidu.event.preventDefault;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20572;&#27490;&#20107;&#20214;</span>","<span class=\"c\"> * @name baidu.event.stop</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.stop(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.event.stopPropagation,baidu.event.preventDefault</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>stop <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> e <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">;</span>","    e<span class=\"k\">.</span>stopPropagation<span class=\"k\">(</span>event<span class=\"k\">);</span>","    e<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>event<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/stopPropagation.js'] && (_$jscoverage['baidu/event/stopPropagation.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/stopPropagation.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#38459;&#27490;&#20107;&#20214;&#20256;&#25773;</span>","<span class=\"c\"> * @name baidu.event.stopPropagation</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.stopPropagation(event)</span>","<span class=\"c\"> * @param {Event} event &#20107;&#20214;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.event.stop,baidu.event.preventDefault</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>stopPropagation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","   <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>stopPropagation<span class=\"k\">)</span> <span class=\"k\">{</span>","       event<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","   <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","       event<span class=\"k\">.</span>cancelBubble <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","   <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/un.js'] && (_$jscoverage['baidu/event/un.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/un.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event._listeners;</span>","<span class=\"c\">///import baidu.dom._g;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#20803;&#32032;&#31227;&#38500;&#20107;&#20214;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @name baidu.event.un</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event.un(element, type, listener)</span>","<span class=\"c\"> * @param {HTMLElement|string|window} element &#30446;&#26631;&#20803;&#32032;&#25110;&#30446;&#26631;&#20803;&#32032;id</span>","<span class=\"c\"> * @param {string} type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Function} listener &#38656;&#35201;&#31227;&#38500;&#30340;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @shortcut un</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.event.on</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {HTMLElement|window} &#30446;&#26631;&#20803;&#32032;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> type<span class=\"k\">,</span> listener<span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>_g<span class=\"k\">(</span>element<span class=\"k\">);</span>","    type <span class=\"k\">=</span> type<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^on/i</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","    ","    <span class=\"k\">var</span> lis <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_listeners<span class=\"k\">,</span> ","        len <span class=\"k\">=</span> lis<span class=\"k\">.</span>length<span class=\"k\">,</span>","        isRemoveAll <span class=\"k\">=</span> <span class=\"k\">!</span>listener<span class=\"k\">,</span>","        item<span class=\"k\">,</span>","        realType<span class=\"k\">,</span> realListener<span class=\"k\">;</span>","    ","    <span class=\"c\">//&#22914;&#26524;&#23558;listener&#30340;&#32467;&#26500;&#25913;&#25104;json</span>","    <span class=\"c\">//&#21487;&#20197;&#33410;&#30465;&#25481;&#36825;&#20010;&#24490;&#29615;&#65292;&#20248;&#21270;&#24615;&#33021;</span>","    <span class=\"c\">//&#20294;&#26159;&#30001;&#20110;un&#30340;&#20351;&#29992;&#39057;&#29575;&#24182;&#19981;&#39640;&#65292;&#21516;&#26102;&#22312;listener&#19981;&#22810;&#30340;&#26102;&#20505;</span>","    <span class=\"c\">//&#36941;&#21382;&#25968;&#32452;&#30340;&#24615;&#33021;&#28040;&#32791;&#19981;&#20250;&#23545;&#20195;&#30721;&#20135;&#29983;&#24433;&#21709;</span>","    <span class=\"c\">//&#26242;&#19981;&#32771;&#34385;&#27492;&#20248;&#21270;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>len<span class=\"k\">--)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> lis<span class=\"k\">[</span>len<span class=\"k\">];</span>","        ","        <span class=\"c\">// listener&#23384;&#22312;&#26102;&#65292;&#31227;&#38500;element&#30340;&#25152;&#26377;&#20197;listener&#30417;&#21548;&#30340;type&#31867;&#22411;&#20107;&#20214;</span>","        <span class=\"c\">// listener&#19981;&#23384;&#22312;&#26102;&#65292;&#31227;&#38500;element&#30340;&#25152;&#26377;type&#31867;&#22411;&#20107;&#20214;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">===</span> type","            <span class=\"k\">&amp;&amp;</span> item<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">===</span> element","            <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>isRemoveAll <span class=\"k\">||</span> item<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">===</span> listener<span class=\"k\">))</span> <span class=\"k\">{</span>","           \trealType <span class=\"k\">=</span> item<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">];</span>","           \trealListener <span class=\"k\">=</span> item<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>removeEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>realType<span class=\"k\">,</span> realListener<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>detachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>detachEvent<span class=\"k\">(</span><span class=\"s\">'on'</span> <span class=\"k\">+</span> realType<span class=\"k\">,</span> realListener<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            lis<span class=\"k\">.</span>splice<span class=\"k\">(</span>len<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> element<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>un <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>un<span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/_eventFilter.js'] && (_$jscoverage['baidu/event/_eventFilter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/_eventFilter.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/10/29</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.event;</span>","","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/_listeners.js'] && (_$jscoverage['baidu/event/_listeners.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/_listeners.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20107;&#20214;&#30417;&#21548;&#22120;&#30340;&#23384;&#20648;&#34920;</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_listeners <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_listeners <span class=\"k\">||</span> <span class=\"k\">[];</span>"]);
_$jscoverage['baidu/event/_unload.js'] && (_$jscoverage['baidu/event/_unload.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/event/_unload.js</span>","<span class=\"c\"> * author: erik, berg</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event;</span>","<span class=\"c\">///import baidu.event._listeners;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21368;&#36733;&#25152;&#26377;&#20107;&#20214;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_unload <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> lis <span class=\"k\">=</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_listeners<span class=\"k\">,</span>","        len <span class=\"k\">=</span> lis<span class=\"k\">.</span>length<span class=\"k\">,</span>","        standard <span class=\"k\">=</span> <span class=\"k\">!!</span>window<span class=\"k\">.</span>removeEventListener<span class=\"k\">,</span>","        item<span class=\"k\">,</span> el<span class=\"k\">;</span>","","    <span class=\"k\">while</span> <span class=\"k\">(</span>len<span class=\"k\">--)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> lis<span class=\"k\">[</span>len<span class=\"k\">];</span>","        <span class=\"c\">//20100409 berg: &#19981;&#35299;&#38500;unload&#30340;&#32465;&#23450;&#65292;&#20445;&#35777;&#29992;&#25143;&#30340;&#20107;&#20214;&#19968;&#23450;&#20250;&#34987;&#25191;&#34892;</span>","        <span class=\"c\">//&#21542;&#21017;&#29992;&#25143;&#25346;&#36733;&#36827;&#20837;&#30340;unload&#20107;&#20214;&#20063;&#21487;&#33021;&#20250;&#22312;&#36825;&#37324;&#34987;&#21024;&#38500;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">'unload'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">continue</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#22914;&#26524;el&#34987;&#31227;&#38500;&#65292;&#19981;&#20570;&#21028;&#26029;&#23558;&#23548;&#33268;js&#25253;&#38169;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!(</span>el <span class=\"k\">=</span> item<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">{</span>","            <span class=\"k\">continue</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>el<span class=\"k\">.</span>removeEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","            el<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>item<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> item<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>el<span class=\"k\">.</span>detachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","            el<span class=\"k\">.</span>detachEvent<span class=\"k\">(</span><span class=\"s\">'on'</span> <span class=\"k\">+</span> item<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> item<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>standard<span class=\"k\">)</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">'unload'</span><span class=\"k\">,</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_unload<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>detachEvent<span class=\"k\">(</span><span class=\"s\">'onunload'</span><span class=\"k\">,</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_unload<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22312;&#39029;&#38754;&#21368;&#36733;&#30340;&#26102;&#20505;&#65292;&#23558;&#25152;&#26377;&#20107;&#20214;&#30417;&#21548;&#22120;&#31227;&#38500;</span>","<span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>attachEvent<span class=\"k\">)</span> <span class=\"k\">{</span>","    window<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'onunload'</span><span class=\"k\">,</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_unload<span class=\"k\">);</span>","<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","    window<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'unload'</span><span class=\"k\">,</span> baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_unload<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","<span class=\"k\">}</span>"]);
_$jscoverage['baidu/event/_eventFilter/mouseenter.js'] && (_$jscoverage['baidu/event/_eventFilter/mouseenter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/_eventFilter/mouseenter.js</span>","<span class=\"c\"> * author: Rocy</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/09</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.event._eventFilter;</span>","<span class=\"c\">///import baidu.event._eventFilter._crossElementBoundary;</span>","","<span class=\"c\">///import baidu.fn.bind;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#29992;&#20110;&#20026;&#38750;IE&#27983;&#35272;&#22120;&#28155;&#21152;mouseenter&#30340;&#25903;&#25345;;</span>","<span class=\"c\"> * mouseenter&#20107;&#20214;&#20165;&#22312;&#40736;&#26631;&#36827;&#20837;&#20803;&#32032;&#21306;&#22495;&#35302;&#21457;&#19968;&#27425;,</span>","<span class=\"c\"> *    &#24403;&#40736;&#26631;&#22312;&#20803;&#32032;&#20869;&#37096;&#31227;&#21160;&#30340;&#26102;&#20505;&#19981;&#20250;&#22810;&#27425;&#35302;&#21457;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">.</span>mouseenter <span class=\"k\">=</span> window<span class=\"k\">.</span>attachEvent <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span>type<span class=\"k\">,</span> listener<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\ttype<span class=\"k\">:</span> <span class=\"s\">\"mouseover\"</span><span class=\"k\">,</span>","\t\tlistener<span class=\"k\">:</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>bind<span class=\"k\">(</span>baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">.</span>_crossElementBoundary<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> listener<span class=\"k\">)</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/_eventFilter/mouseleave.js'] && (_$jscoverage['baidu/event/_eventFilter/mouseleave.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/_eventFilter/mouseleave.js</span>","<span class=\"c\"> * author: Rocy, berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/09</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.event._eventFilter;</span>","<span class=\"c\">///import baidu.event._eventFilter._crossElementBoundary;</span>","","<span class=\"c\">///import baidu.fn.bind;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#29992;&#20110;&#20026;&#38750;IE&#27983;&#35272;&#22120;&#28155;&#21152;mouseleave&#30340;&#25903;&#25345;;</span>","<span class=\"c\"> * mouseleave&#20107;&#20214;&#20165;&#22312;&#40736;&#26631;&#31227;&#20986;&#20803;&#32032;&#21306;&#22495;&#35302;&#21457;&#19968;&#27425;,</span>","<span class=\"c\"> *    &#24403;&#40736;&#26631;&#22312;&#20803;&#32032;&#21306;&#22495;&#20869;&#37096;&#31227;&#21160;&#30340;&#26102;&#20505;&#19981;&#20250;&#35302;&#21457;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">.</span>mouseleave <span class=\"k\">=</span> window<span class=\"k\">.</span>attachEvent <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">,</span>type<span class=\"k\">,</span> listener<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\ttype<span class=\"k\">:</span> <span class=\"s\">\"mouseout\"</span><span class=\"k\">,</span>","\t\tlistener<span class=\"k\">:</span> baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>bind<span class=\"k\">(</span>baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">.</span>_crossElementBoundary<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> listener<span class=\"k\">)</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/event/_eventFilter/_crossElementBoundary.js'] && (_$jscoverage['baidu/event/_eventFilter/_crossElementBoundary.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/event/_eventFilter/_crossElementBoundary.js</span>","<span class=\"c\"> * author: Rocy, berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/12/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event._eventFilter;</span>","","<span class=\"c\">///import baidu.dom.contains;</span>","<span class=\"c\">///import baidu.dom.getDocument;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20107;&#20214;&#20165;&#22312;&#40736;&#26631;&#36827;&#20837;/&#31163;&#24320;&#20803;&#32032;&#21306;&#22495;&#35302;&#21457;&#19968;&#27425;&#65292;&#24403;&#40736;&#26631;&#22312;&#20803;&#32032;&#21306;&#22495;&#20869;&#37096;&#31227;&#21160;&#30340;&#26102;&#20505;&#19981;&#20250;&#35302;&#21457;&#65292;&#29992;&#20110;&#20026;&#38750;IE&#27983;&#35272;&#22120;&#28155;&#21152;mouseleave/mouseenter&#25903;&#25345;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @name baidu.event._eventFilter._crossElementBoundary</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.event._eventFilter._crossElementBoundary(listener, e)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {function} listener\t&#35201;&#35302;&#21457;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @param {DOMEvent} e \t\t\tDOM&#20107;&#20214;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>_eventFilter<span class=\"k\">.</span>_crossElementBoundary <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>listener<span class=\"k\">,</span> e<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> related <span class=\"k\">=</span> e<span class=\"k\">.</span>relatedTarget<span class=\"k\">,</span>","        current <span class=\"k\">=</span> e<span class=\"k\">.</span>currentTarget<span class=\"k\">;</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>","       related <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> ","       <span class=\"c\">// &#22914;&#26524;current&#21644;related&#37117;&#26159;body&#65292;contains&#20989;&#25968;&#20250;&#36820;&#22238;false</span>","       current <span class=\"k\">==</span> related <span class=\"k\">||</span>","       <span class=\"c\">// Firefox&#26377;&#26102;&#20250;&#25226;XUL&#20803;&#32032;&#20316;&#20026;relatedTarget</span>","       <span class=\"c\">// &#36825;&#20123;&#20803;&#32032;&#19981;&#33021;&#35775;&#38382;parentNode&#23646;&#24615;</span>","       <span class=\"c\">// thanks jquery &amp; mootools</span>","       <span class=\"k\">(</span>related <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>related<span class=\"k\">.</span>prefix <span class=\"k\">==</span> <span class=\"s\">'xul'</span> <span class=\"k\">||</span>","       <span class=\"c\">//&#22914;&#26524;current&#21253;&#21547;related&#65292;&#35828;&#26126;&#27809;&#26377;&#32463;&#36807;current&#30340;&#36793;&#30028;</span>","       baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>contains<span class=\"k\">(</span>current<span class=\"k\">,</span> related<span class=\"k\">)))</span>","      <span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> listener<span class=\"k\">.</span>call<span class=\"k\">(</span>current<span class=\"k\">,</span> e<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/abstractMethod.js'] && (_$jscoverage['baidu/fn/abstractMethod.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/fn/abstractMethod.js</span>","<span class=\"c\"> * author: leeight</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2011/04/29</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23450;&#20041;&#19968;&#20010;&#25277;&#35937;&#26041;&#27861;</span>","<span class=\"c\"> * @type {!Function}</span>","<span class=\"c\"> * @throws {Error} when invoked to indicate the method should be</span>","<span class=\"c\"> *   overridden.</span>","<span class=\"c\"> * @see goog.abstractMethod</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>abstractMethod <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">throw</span> Error<span class=\"k\">(</span><span class=\"s\">'unimplemented abstract method'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/bind.js'] && (_$jscoverage['baidu/fn/bind.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/fn/bind.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/02 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">///import baidu.lang.isString;</span>","","<span class=\"c\">/** </span>","<span class=\"c\"> * &#20026;&#23545;&#35937;&#32465;&#23450;&#26041;&#27861;&#21644;&#20316;&#29992;&#22495;</span>","<span class=\"c\"> * @name baidu.fn.bind</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.fn.bind(handler[, obj, args])</span>","<span class=\"c\"> * @param {Function|String} handler &#35201;&#32465;&#23450;&#30340;&#20989;&#25968;&#65292;&#25110;&#32773;&#19968;&#20010;&#22312;&#20316;&#29992;&#22495;&#19979;&#21487;&#29992;&#30340;&#20989;&#25968;&#21517;</span>","<span class=\"c\"> * @param {Object} obj &#25191;&#34892;&#36816;&#34892;&#26102;this&#65292;&#22914;&#26524;&#19981;&#20256;&#20837;&#21017;&#36816;&#34892;&#26102;this&#20026;&#20989;&#25968;&#26412;&#36523;</span>","<span class=\"c\"> * @param {args* 0..n} args &#20989;&#25968;&#25191;&#34892;&#26102;&#38468;&#21152;&#21040;&#25191;&#34892;&#26102;&#20989;&#25968;&#21069;&#38754;&#30340;&#21442;&#25968;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @returns {Function} &#23553;&#35013;&#21518;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>func<span class=\"k\">,</span> scope<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> xargs <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">2</span> <span class=\"k\">?</span> <span class=\"k\">[].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fn <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">(</span>func<span class=\"k\">)</span> <span class=\"k\">?</span> scope<span class=\"k\">[</span>func<span class=\"k\">]</span> <span class=\"k\">:</span> func<span class=\"k\">,</span>","            args <span class=\"k\">=</span> <span class=\"k\">(</span>xargs<span class=\"k\">)</span> <span class=\"k\">?</span> xargs<span class=\"k\">.</span>concat<span class=\"k\">([].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">))</span> <span class=\"k\">:</span> arguments<span class=\"k\">;</span>","        <span class=\"k\">return</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span>scope <span class=\"k\">||</span> fn<span class=\"k\">,</span> args<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/blank.js'] && (_$jscoverage['baidu/fn/blank.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36825;&#26159;&#19968;&#20010;&#31354;&#20989;&#25968;&#65292;&#29992;&#20110;&#38656;&#35201;&#25490;&#38500;&#20989;&#25968;&#20316;&#29992;&#22495;&#38142;&#24178;&#25200;&#30340;&#24773;&#20917;.</span>","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> * @name baidu.fn.blank</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.fn.blank()</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @return {Function} &#19968;&#20010;&#31354;&#20989;&#25968;</span>","<span class=\"c\"> * @version 1.3.3</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>blank <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/methodize.js'] && (_$jscoverage['baidu/fn/methodize.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/fn/methodize.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/02 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#19968;&#20010;&#38745;&#24577;&#20989;&#25968;&#21464;&#25442;&#25104;&#19968;&#20010;&#23545;&#35937;&#30340;&#26041;&#27861;&#65292;&#20351;&#20854;&#30340;&#31532;&#19968;&#20010;&#21442;&#25968;&#20026;this&#65292;&#25110;this[attr]</span>","<span class=\"c\"> * @name baidu.fn.methodize</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.fn.methodize(func[, attr])</span>","<span class=\"c\"> * @param {Function}\tfunc\t&#35201;&#26041;&#27861;&#21270;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @param {string}\t\t[attr]\t&#23646;&#24615;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @returns {Function} &#24050;&#26041;&#27861;&#21270;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>methodize <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>func<span class=\"k\">,</span> attr<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> func<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">[(</span>attr <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span>attr<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">)].</span>concat<span class=\"k\">([].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">)));</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/multize.js'] && (_$jscoverage['baidu/fn/multize.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/fn/multize.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/02 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#20989;&#25968;&#36827;&#34892;&#38598;&#21270;&#65292;&#20351;&#20854;&#22312;&#31532;&#19968;&#20010;&#21442;&#25968;&#20026;array&#26102;&#65292;&#32467;&#26524;&#20063;&#36820;&#22238;&#19968;&#20010;&#25968;&#32452;</span>","<span class=\"c\"> * @name baidu.fn.multize</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.fn.multize(func[, recursive])</span>","<span class=\"c\"> * @param {Function}\tfunc \t\t&#38656;&#35201;&#21253;&#35013;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @param {Boolean}\t\t[recursive] &#26159;&#21542;&#36882;&#24402;&#21253;&#35013;&#65288;&#22914;&#26524;&#25968;&#32452;&#37324;&#38754;&#19968;&#39033;&#20173;&#28982;&#26159;&#25968;&#32452;&#65292;&#36882;&#24402;&#65289;&#65292;&#21487;&#36873;</span>","<span class=\"c\"> * @param {Boolean}\t\t[joinArray] &#23558;&#25805;&#20316;&#30340;&#32467;&#26524;&#23637;&#24179;&#21518;&#36820;&#22238;&#65288;&#22914;&#26524;&#36820;&#22238;&#30340;&#32467;&#26524;&#26159;&#25968;&#32452;&#65292;&#21017;&#23558;&#22810;&#20010;&#25968;&#32452;&#21512;&#25104;&#19968;&#20010;&#65289;&#65292;&#21487;&#36873;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @returns {Function} &#24050;&#38598;&#21270;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>multize <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span> <span class=\"k\">(</span>func<span class=\"k\">,</span> recursive<span class=\"k\">,</span> joinArray<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> newFunc <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>","            fn <span class=\"k\">=</span> recursive <span class=\"k\">?</span> newFunc <span class=\"k\">:</span> func<span class=\"k\">,</span>","            ret <span class=\"k\">=</span> <span class=\"k\">[],</span>","            moreArgs <span class=\"k\">=</span> <span class=\"k\">[].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">),</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            len<span class=\"k\">,</span>","            r<span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>list <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span>len <span class=\"k\">=</span> list<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","                moreArgs<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]=</span>list<span class=\"k\">[</span>i<span class=\"k\">];</span>","                r <span class=\"k\">=</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> moreArgs<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>joinArray<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>r<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">//TODO: &#38656;&#35201;&#21435;&#37325;&#21527;&#65311;</span>","                        ret <span class=\"k\">=</span> ret<span class=\"k\">.</span>concat<span class=\"k\">(</span>r<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    ret<span class=\"k\">.</span>push<span class=\"k\">(</span>r<span class=\"k\">);</span> \t","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> func<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> newFunc<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/fn/wrapReturnValue.js'] && (_$jscoverage['baidu/fn/wrapReturnValue.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.fn;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21253;&#35013;&#20989;&#25968;&#30340;&#36820;&#22238;&#20540;&#65292;&#20351;&#20854;&#22312;&#33021;&#25353;&#29031;index&#25351;&#23450;&#30340;&#26041;&#24335;&#36820;&#22238;&#12290;&lt;br/&gt;&#22914;&#26524;&#20854;&#20540;&#20026;-1&#65292;&#30452;&#25509;&#36820;&#22238;&#36820;&#22238;&#20540;&#12290; &lt;br/&gt;&#22914;&#26524;&#20854;&#20540;&#20026;0&#65292;&#36820;&#22238;\"&#36820;&#22238;&#20540;\"&#30340;&#21253;&#35013;&#32467;&#26524;&#12290;&lt;br/&gt; &#22914;&#26524;&#20854;&#20540;&#22823;&#20110;0&#65292;&#36820;&#22238;&#31532;i&#20010;&#20301;&#32622;&#30340;&#21442;&#25968;&#30340;&#21253;&#35013;&#32467;&#26524;&#65288;&#20174;1&#24320;&#22987;&#35745;&#25968;&#65289;</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.fn.wrapReturnValue</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.fn.wrapReturnValue(func, wrapper, mode)</span>","<span class=\"c\"> * @param {function} func    &#38656;&#35201;&#21253;&#35013;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @param {function} wrapper &#21253;&#35013;&#22120;</span>","<span class=\"c\"> * @param {number} mode &#21253;&#35013;&#31532;&#20960;&#20010;&#21442;&#25968;</span>","<span class=\"c\"> * @version 1.3.5</span>","<span class=\"c\"> * @return {function} &#21253;&#35013;&#21518;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>fn<span class=\"k\">.</span>wrapReturnValue <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>func<span class=\"k\">,</span> wrapper<span class=\"k\">,</span> mode<span class=\"k\">)</span> <span class=\"k\">{</span>","    mode <span class=\"k\">=</span> mode <span class=\"k\">|</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> ret <span class=\"k\">=</span> func<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span> ","        <span class=\"k\">if</span><span class=\"k\">(!</span>mode<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> wrapper<span class=\"k\">(</span>ret<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>mode <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> wrapper<span class=\"k\">(</span>arguments<span class=\"k\">[</span>mode <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/form/json.js'] && (_$jscoverage['baidu/form/json.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/form/json.js</span>","<span class=\"c\"> * author: qiaoyue</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2011/12/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.form;</span>","<span class=\"c\">///import baidu.url.escapeSymbol;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * josn&#21270;&#34920;&#21333;&#25968;&#25454;</span>","<span class=\"c\"> * @name baidu.form.json</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.form.json(form[, replacer])</span>","<span class=\"c\"> * @param {HTMLFormElement} form        &#38656;&#35201;&#25552;&#20132;&#30340;&#34920;&#21333;&#20803;&#32032;</span>","<span class=\"c\"> * @param {Function} replacer           &#23545;&#21442;&#25968;&#20540;&#29305;&#27530;&#22788;&#29702;&#30340;&#20989;&#25968;,replacer(string value, string key)</span>","<span class=\"c\">\t           </span>","<span class=\"c\"> * @returns {data} &#34920;&#21333;&#25968;&#25454;js&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>form<span class=\"k\">.</span>json <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>form<span class=\"k\">,</span> replacer<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> elements <span class=\"k\">=</span> form<span class=\"k\">.</span>elements<span class=\"k\">,</span>","        replacer <span class=\"k\">=</span> replacer <span class=\"k\">||</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        item<span class=\"k\">,</span> itemType<span class=\"k\">,</span> itemName<span class=\"k\">,</span> itemValue<span class=\"k\">,</span> ","        opts<span class=\"k\">,</span> oi<span class=\"k\">,</span> oLen<span class=\"k\">,</span> oItem<span class=\"k\">;</span>","        ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21521;&#32531;&#20914;&#21306;&#28155;&#21152;&#21442;&#25968;&#25968;&#25454;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> addData<span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> val <span class=\"k\">=</span> data<span class=\"k\">[</span>name<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>val<span class=\"k\">)</span><span class=\"k\">{</span>","            val<span class=\"k\">.</span>push <span class=\"k\">||</span> <span class=\"k\">(</span> data<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>val<span class=\"k\">]</span> <span class=\"k\">);</span>","            data<span class=\"k\">[</span>name<span class=\"k\">].</span>push<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","            data<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> elements<span class=\"k\">[</span>i<span class=\"k\">];</span>","        itemName <span class=\"k\">=</span> item<span class=\"k\">.</span>name<span class=\"k\">;</span>","        ","        <span class=\"c\">// &#22788;&#29702;&#65306;&#21487;&#29992;&#24182;&#21253;&#21547;&#34920;&#21333;name&#30340;&#34920;&#21333;&#39033;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>disabled <span class=\"k\">&amp;&amp;</span> itemName<span class=\"k\">)</span> <span class=\"k\">{</span>","            itemType <span class=\"k\">=</span> item<span class=\"k\">.</span>type<span class=\"k\">;</span>","            itemValue <span class=\"k\">=</span> baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>escapeSymbol<span class=\"k\">(</span>item<span class=\"k\">.</span>value<span class=\"k\">);</span>","        ","            <span class=\"k\">switch</span> <span class=\"k\">(</span>itemType<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// radio&#21644;checkbox&#34987;&#36873;&#20013;&#26102;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'radio'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'checkbox'</span><span class=\"k\">:</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>checked<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                ","            <span class=\"c\">// &#40664;&#35748;&#31867;&#22411;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'textarea'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'text'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'password'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'hidden'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'file'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-one'</span><span class=\"k\">:</span>","                addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>itemValue<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"c\">// &#22810;&#34892;&#36873;&#20013;select&#65292;&#25340;&#35013;&#25152;&#26377;&#36873;&#20013;&#30340;&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-multiple'</span><span class=\"k\">:</span>","                opts <span class=\"k\">=</span> item<span class=\"k\">.</span>options<span class=\"k\">;</span>","                oLen <span class=\"k\">=</span> opts<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>oi <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> oi <span class=\"k\">&lt;</span> oLen<span class=\"k\">;</span> oi<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    oItem <span class=\"k\">=</span> opts<span class=\"k\">[</span>oi<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>oItem<span class=\"k\">.</span>selected<span class=\"k\">)</span> <span class=\"k\">{</span>","                        addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>oItem<span class=\"k\">.</span>value<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> data<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/form/serialize.js'] && (_$jscoverage['baidu/form/serialize.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/form/serialize.js</span>","<span class=\"c\"> * author: qiaoyue</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2011/12/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.form;</span>","<span class=\"c\">///import baidu.url.escapeSymbol;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#24207;&#21015;&#21270;&#34920;&#21333;&#25968;&#25454;</span>","<span class=\"c\"> * @name baidu.form.serialize</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.form.serialize(form[, replacer])</span>","<span class=\"c\"> * @param {HTMLFormElement} form        &#38656;&#35201;&#25552;&#20132;&#30340;&#34920;&#21333;&#20803;&#32032;</span>","<span class=\"c\"> * @param {Function} replacer           &#23545;&#21442;&#25968;&#20540;&#29305;&#27530;&#22788;&#29702;&#30340;&#20989;&#25968;,replacer(string value, string key)</span>","<span class=\"c\">\t           </span>","<span class=\"c\"> * @returns {data} &#34920;&#21333;&#25968;&#25454;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>form<span class=\"k\">.</span>serialize <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>form<span class=\"k\">,</span> replacer<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> elements <span class=\"k\">=</span> form<span class=\"k\">.</span>elements<span class=\"k\">,</span>","        replacer <span class=\"k\">=</span> replacer <span class=\"k\">||</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        data <span class=\"k\">=</span> <span class=\"k\">[],</span>","        item<span class=\"k\">,</span> itemType<span class=\"k\">,</span> itemName<span class=\"k\">,</span> itemValue<span class=\"k\">,</span> ","        opts<span class=\"k\">,</span> oi<span class=\"k\">,</span> oLen<span class=\"k\">,</span> oItem<span class=\"k\">;</span>","        ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21521;&#32531;&#20914;&#21306;&#28155;&#21152;&#21442;&#25968;&#25968;&#25454;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> addData<span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        data<span class=\"k\">.</span>push<span class=\"k\">(</span>name <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> elements<span class=\"k\">[</span>i<span class=\"k\">];</span>","        itemName <span class=\"k\">=</span> item<span class=\"k\">.</span>name<span class=\"k\">;</span>","        ","        <span class=\"c\">// &#22788;&#29702;&#65306;&#21487;&#29992;&#24182;&#21253;&#21547;&#34920;&#21333;name&#30340;&#34920;&#21333;&#39033;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>disabled <span class=\"k\">&amp;&amp;</span> itemName<span class=\"k\">)</span> <span class=\"k\">{</span>","            itemType <span class=\"k\">=</span> item<span class=\"k\">.</span>type<span class=\"k\">;</span>","            itemValue <span class=\"k\">=</span> baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>escapeSymbol<span class=\"k\">(</span>item<span class=\"k\">.</span>value<span class=\"k\">);</span>","        ","            <span class=\"k\">switch</span> <span class=\"k\">(</span>itemType<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// radio&#21644;checkbox&#34987;&#36873;&#20013;&#26102;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'radio'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'checkbox'</span><span class=\"k\">:</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">.</span>checked<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                ","            <span class=\"c\">// &#40664;&#35748;&#31867;&#22411;&#65292;&#25340;&#35013;queryString&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'textarea'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'text'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'password'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'hidden'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'file'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-one'</span><span class=\"k\">:</span>","                addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>itemValue<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"c\">// &#22810;&#34892;&#36873;&#20013;select&#65292;&#25340;&#35013;&#25152;&#26377;&#36873;&#20013;&#30340;&#25968;&#25454;</span>","            <span class=\"k\">case</span> <span class=\"s\">'select-multiple'</span><span class=\"k\">:</span>","                opts <span class=\"k\">=</span> item<span class=\"k\">.</span>options<span class=\"k\">;</span>","                oLen <span class=\"k\">=</span> opts<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>oi <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> oi <span class=\"k\">&lt;</span> oLen<span class=\"k\">;</span> oi<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    oItem <span class=\"k\">=</span> opts<span class=\"k\">[</span>oi<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>oItem<span class=\"k\">.</span>selected<span class=\"k\">)</span> <span class=\"k\">{</span>","                        addData<span class=\"k\">(</span>itemName<span class=\"k\">,</span> replacer<span class=\"k\">(</span>oItem<span class=\"k\">.</span>value<span class=\"k\">,</span> itemName<span class=\"k\">));</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> data<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/global/get.js'] && (_$jscoverage['baidu/global/get.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * version: 1.4.0</span>","<span class=\"c\"> * date: 2011/07/05</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.global;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @namespace baidu.global.get &#21462;&#24471;global&#20840;&#23616;&#23545;&#35937;&#37324;&#23384;&#20648;&#30340;&#20449;&#24687;&#12290;</span>","<span class=\"c\"> * @author meizz</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param   {string}    key     &#20449;&#24687;&#23545;&#24212;&#30340; key &#20540;</span>","<span class=\"c\"> * @return  {object}            &#20449;&#24687;</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> global <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>global<span class=\"k\">;</span>","","    baidu<span class=\"k\">.</span>global<span class=\"k\">.</span>get <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> global<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/global/getZIndex.js'] && (_$jscoverage['baidu/global/getZIndex.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * version: 2.0</span>","<span class=\"c\"> * date: 2011.12.22</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.global;</span>","<span class=\"c\">///import baidu.global.get;</span>","<span class=\"c\">///import baidu.global.set;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @namespace baidu.global.getZIndex &#20840;&#23616;&#32479;&#19968;&#31649;&#29702; z-index&#12290;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param   {String}    key \t&#20449;&#24687;&#23545;&#24212;&#30340; key &#20540;(popup | dialog)</span>","<span class=\"c\"> * @param   {Number}    step \tz-index &#22686;&#38271;&#30340;&#27493;&#38271;</span>","<span class=\"c\"> * @return  {Number}            z-index</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>global<span class=\"k\">.</span>getZIndex <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">,</span> step<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> zi <span class=\"k\">=</span> baidu<span class=\"k\">.</span>global<span class=\"k\">.</span>get<span class=\"k\">(</span><span class=\"s\">\"zIndex\"</span><span class=\"k\">);</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tzi<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> zi<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"k\">(</span>step <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">return</span> zi<span class=\"k\">[</span>key<span class=\"k\">];</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","baidu<span class=\"k\">.</span>global<span class=\"k\">.</span>set<span class=\"k\">(</span><span class=\"s\">\"zIndex\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>popup <span class=\"k\">:</span> <span class=\"s\">50000</span><span class=\"k\">,</span> dialog <span class=\"k\">:</span> <span class=\"s\">1000</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>"]);
_$jscoverage['baidu/global/set.js'] && (_$jscoverage['baidu/global/set.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * version: 1.4.0</span>","<span class=\"c\"> * date: 2011/07/05</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.global;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @namespace baidu.global.set &#21521;global&#20840;&#23616;&#23545;&#35937;&#37324;&#23384;&#20648;&#20449;&#24687;&#12290;</span>","<span class=\"c\"> * @author meizz</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param   {string}    key         &#20449;&#24687;&#23545;&#24212;&#30340; key &#20540;</span>","<span class=\"c\"> * @param   {object}    value       &#34987;&#23384;&#20648;&#30340;&#20449;&#24687;</span>","<span class=\"c\"> * @param   {boolean}   protected_  &#20445;&#25252;&#21407;&#20540;&#19981;&#34987;&#35206;&#30422;&#65292;&#40664;&#35748;&#20540; false &#21487;&#35206;&#30422;</span>","<span class=\"c\"> * @return  {object}                &#20449;&#24687;</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> global <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>global<span class=\"k\">;</span>","","    baidu<span class=\"k\">.</span>global<span class=\"k\">.</span>set <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> protected_<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> b <span class=\"k\">=</span> <span class=\"k\">!</span>protected_ <span class=\"k\">||</span> <span class=\"k\">(</span>protected_ <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> global<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">);</span>","","        b <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>global<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">);</span>","        <span class=\"k\">return</span> global<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/json/decode.js'] && (_$jscoverage['baidu/json/decode.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/json/decode.js</span>","<span class=\"c\"> * author: erik, cat</span>","<span class=\"c\"> * version: 1.3.4</span>","<span class=\"c\"> * date: 2010/12/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.json.parse;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#23383;&#31526;&#20018;&#35299;&#26512;&#25104;json&#23545;&#35937;&#65292;&#20026;&#36807;&#26102;&#25509;&#21475;&#65292;&#20170;&#21518;&#20250;&#34987;baidu.json.parse&#20195;&#26367;</span>","<span class=\"c\"> * @name baidu.json.decode</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.json.decode(source)</span>","<span class=\"c\"> * @param {string} source &#38656;&#35201;&#35299;&#26512;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @meta out</span>","<span class=\"c\"> * @see baidu.json.encode,baidu.json.parse</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {JSON} &#35299;&#26512;&#32467;&#26524;json&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>decode <span class=\"k\">=</span> baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>parse<span class=\"k\">;</span>"]);
_$jscoverage['baidu/json/encode.js'] && (_$jscoverage['baidu/json/encode.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/json/encode.js</span>","<span class=\"c\"> * author: erik, cat</span>","<span class=\"c\"> * version: 1.3.4</span>","<span class=\"c\"> * date: 2010/12/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.json.stringify;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;json&#23545;&#35937;&#24207;&#21015;&#21270;&#65292;&#20026;&#36807;&#26102;&#25509;&#21475;&#65292;&#20170;&#21518;&#20250;&#34987;baidu.json.stringify&#20195;&#26367;</span>","<span class=\"c\"> * @name baidu.json.encode</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.json.encode(value)</span>","<span class=\"c\"> * @param {JSON} value &#38656;&#35201;&#24207;&#21015;&#21270;&#30340;json&#23545;&#35937;</span>","<span class=\"c\"> * @meta out</span>","<span class=\"c\"> * @see baidu.json.decode,baidu.json.stringify</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#24207;&#21015;&#21270;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>encode <span class=\"k\">=</span> baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>stringify<span class=\"k\">;</span>"]);
_$jscoverage['baidu/json/parse.js'] && (_$jscoverage['baidu/json/parse.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/json/parse.js</span>","<span class=\"c\"> * author: erik, berg</span>","<span class=\"c\"> * version: 1.2</span>","<span class=\"c\"> * date: 2009/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.json;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#23383;&#31526;&#20018;&#35299;&#26512;&#25104;json&#23545;&#35937;&#12290;&#27880;&#65306;&#19981;&#20250;&#33258;&#21160;&#31067;&#38500;&#31354;&#26684;</span>","<span class=\"c\"> * @name baidu.json.parse</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.json.parse(data)</span>","<span class=\"c\"> * @param {string} source &#38656;&#35201;&#35299;&#26512;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#35813;&#26041;&#27861;&#30340;&#23454;&#29616;&#19982;ecma-262&#31532;&#20116;&#29256;&#20013;&#35268;&#23450;&#30340;JSON.parse&#19981;&#21516;&#65292;&#26242;&#26102;&#21482;&#25903;&#25345;&#20256;&#20837;&#19968;&#20010;&#21442;&#25968;&#12290;&#21518;&#32493;&#20250;&#36827;&#34892;&#21151;&#33021;&#20016;&#23500;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.json.stringify,baidu.json.decode</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {JSON} &#35299;&#26512;&#32467;&#26524;json&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>parse <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">//2010/12/09&#65306;&#26356;&#26032;&#33267;&#19981;&#20351;&#29992;&#21407;&#29983;parse&#65292;&#19981;&#26816;&#27979;&#29992;&#25143;&#36755;&#20837;&#26159;&#21542;&#27491;&#30830;</span>","    <span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"k\">new</span> Function<span class=\"k\">(</span><span class=\"s\">\"return (\"</span> <span class=\"k\">+</span> data <span class=\"k\">+</span> <span class=\"s\">\")\"</span><span class=\"k\">))();</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/json/stringify.js'] && (_$jscoverage['baidu/json/stringify.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/json/stringify.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/01/11</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.json;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;json&#23545;&#35937;&#24207;&#21015;&#21270;</span>","<span class=\"c\"> * @name baidu.json.stringify</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.json.stringify(value)</span>","<span class=\"c\"> * @param {JSON} value &#38656;&#35201;&#24207;&#21015;&#21270;&#30340;json&#23545;&#35937;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#35813;&#26041;&#27861;&#30340;&#23454;&#29616;&#19982;ecma-262&#31532;&#20116;&#29256;&#20013;&#35268;&#23450;&#30340;JSON.stringify&#19981;&#21516;&#65292;&#26242;&#26102;&#21482;&#25903;&#25345;&#20256;&#20837;&#19968;&#20010;&#21442;&#25968;&#12290;&#21518;&#32493;&#20250;&#36827;&#34892;&#21151;&#33021;&#20016;&#23500;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.json.parse,baidu.json.encode</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#24207;&#21015;&#21270;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>stringify <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23383;&#31526;&#20018;&#22788;&#29702;&#26102;&#38656;&#35201;&#36716;&#20041;&#30340;&#23383;&#31526;&#34920;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> escapeMap <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">\"</span><span class=\"t\">\\b</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">b'</span><span class=\"k\">,</span>","        <span class=\"s\">\"</span><span class=\"t\">\\t</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">t'</span><span class=\"k\">,</span>","        <span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">n'</span><span class=\"k\">,</span>","        <span class=\"s\">\"</span><span class=\"t\">\\f</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">f'</span><span class=\"k\">,</span>","        <span class=\"s\">\"</span><span class=\"t\">\\r</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">r'</span><span class=\"k\">,</span>","        <span class=\"s\">'\"'</span> <span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">\"'</span><span class=\"k\">,</span>","        <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">'</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23383;&#31526;&#20018;&#24207;&#21015;&#21270;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> encodeString<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/[\"\\\\\\x00-\\x1f]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>source<span class=\"k\">))</span> <span class=\"k\">{</span>","            source <span class=\"k\">=</span> source<span class=\"k\">.</span>replace<span class=\"k\">(</span>","                <span class=\"s\">/[\"\\\\\\x00-\\x1f]/g</span><span class=\"k\">,</span> ","                <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> c <span class=\"k\">=</span> escapeMap<span class=\"k\">[</span>match<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>c<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> c<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    c <span class=\"k\">=</span> match<span class=\"k\">.</span>charCodeAt<span class=\"k\">();</span>","                    <span class=\"k\">return</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u00\"</span> ","                            <span class=\"k\">+</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>c <span class=\"k\">/</span> <span class=\"s\">16</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">)</span> ","                            <span class=\"k\">+</span> <span class=\"k\">(</span>c <span class=\"k\">%</span> <span class=\"s\">16</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"s\">'\"'</span> <span class=\"k\">+</span> source <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#25968;&#32452;&#24207;&#21015;&#21270;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> encodeArray<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">\"[\"</span><span class=\"k\">],</span> ","            l <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span>","            preComma<span class=\"k\">,</span> i<span class=\"k\">,</span> item<span class=\"k\">;</span>","            ","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            item <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","            ","            <span class=\"k\">switch</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">\"function\"</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">\"unknown\"</span><span class=\"k\">:</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">default</span><span class=\"k\">:</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>preComma<span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>stringify<span class=\"k\">(</span>item<span class=\"k\">));</span>","                preComma <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">\"]\"</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> result<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#22788;&#29702;&#26085;&#26399;&#24207;&#21015;&#21270;&#26102;&#30340;&#34917;&#38646;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> pad<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> source <span class=\"k\">&lt;</span> <span class=\"s\">10</span> <span class=\"k\">?</span> <span class=\"s\">'0'</span> <span class=\"k\">+</span> source <span class=\"k\">:</span> source<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26085;&#26399;&#24207;&#21015;&#21270;</span>","<span class=\"c\">     * @private</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> encodeDate<span class=\"k\">(</span>source<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">'\"'</span> <span class=\"k\">+</span> source<span class=\"k\">.</span>getFullYear<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">\"-\"</span> ","                <span class=\"k\">+</span> pad<span class=\"k\">(</span>source<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"-\"</span> ","                <span class=\"k\">+</span> pad<span class=\"k\">(</span>source<span class=\"k\">.</span>getDate<span class=\"k\">())</span> <span class=\"k\">+</span> <span class=\"s\">\"T\"</span> ","                <span class=\"k\">+</span> pad<span class=\"k\">(</span>source<span class=\"k\">.</span>getHours<span class=\"k\">())</span> <span class=\"k\">+</span> <span class=\"s\">\":\"</span> ","                <span class=\"k\">+</span> pad<span class=\"k\">(</span>source<span class=\"k\">.</span>getMinutes<span class=\"k\">())</span> <span class=\"k\">+</span> <span class=\"s\">\":\"</span> ","                <span class=\"k\">+</span> pad<span class=\"k\">(</span>source<span class=\"k\">.</span>getSeconds<span class=\"k\">())</span> <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">switch</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'undefined'</span><span class=\"k\">:</span>","            <span class=\"k\">return</span> <span class=\"s\">'undefined'</span><span class=\"k\">;</span>","            ","        <span class=\"k\">case</span> <span class=\"s\">'number'</span><span class=\"k\">:</span>","            <span class=\"k\">return</span> isFinite<span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">?</span> String<span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">\"null\"</span><span class=\"k\">;</span>","            ","        <span class=\"k\">case</span> <span class=\"s\">'string'</span><span class=\"k\">:</span>","            <span class=\"k\">return</span> encodeString<span class=\"k\">(</span>value<span class=\"k\">);</span>","            ","        <span class=\"k\">case</span> <span class=\"s\">'boolean'</span><span class=\"k\">:</span>","            <span class=\"k\">return</span> String<span class=\"k\">(</span>value<span class=\"k\">);</span>","            ","        <span class=\"k\">default</span><span class=\"k\">:</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">'null'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> encodeArray<span class=\"k\">(</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">instanceof</span> Date<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> encodeDate<span class=\"k\">(</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'{'</span><span class=\"k\">],</span>","                    encode <span class=\"k\">=</span> baidu<span class=\"k\">.</span>json<span class=\"k\">.</span>stringify<span class=\"k\">,</span>","                    preComma<span class=\"k\">,</span>","                    item<span class=\"k\">;</span>","                    ","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">.</span>call<span class=\"k\">(</span>value<span class=\"k\">,</span> key<span class=\"k\">))</span> <span class=\"k\">{</span>","                        item <span class=\"k\">=</span> value<span class=\"k\">[</span>key<span class=\"k\">];</span>","                        <span class=\"k\">switch</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">case</span> <span class=\"s\">'undefined'</span><span class=\"k\">:</span>","                        <span class=\"k\">case</span> <span class=\"s\">'unknown'</span><span class=\"k\">:</span>","                        <span class=\"k\">case</span> <span class=\"s\">'function'</span><span class=\"k\">:</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">default</span><span class=\"k\">:</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>preComma<span class=\"k\">)</span> <span class=\"k\">{</span>","                                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            preComma <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                            result<span class=\"k\">.</span>push<span class=\"k\">(</span>encode<span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> encode<span class=\"k\">(</span>item<span class=\"k\">));</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'}'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> result<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/lang/Class.js'] && (_$jscoverage['baidu/lang/Class.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/Class.js</span>","<span class=\"c\"> * author: meizz, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang.guid;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Tangram&#32487;&#25215;&#26426;&#21046;&#25552;&#20379;&#30340;&#19968;&#20010;&#22522;&#31867;&#65292;&#29992;&#25143;&#21487;&#20197;&#36890;&#36807;&#32487;&#25215;baidu.lang.Class&#26469;&#33719;&#21462;&#23427;&#30340;&#23646;&#24615;&#21450;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @class</span>","<span class=\"c\"> * @name \tbaidu.lang.Class</span>","<span class=\"c\"> * @grammar baidu.lang.Class(guid)</span>","<span class=\"c\"> * @param \t{string}\tguid\t&#23545;&#35937;&#30340;&#21807;&#19968;&#26631;&#35782;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @remark baidu.lang.Class&#21644;&#23427;&#30340;&#23376;&#31867;&#30340;&#23454;&#20363;&#22343;&#21253;&#21547;&#19968;&#20010;&#20840;&#23616;&#21807;&#19968;&#30340;&#26631;&#35782;guid&#12290;guid&#26159;&#22312;&#26500;&#36896;&#20989;&#25968;&#20013;&#29983;&#25104;&#30340;&#65292;&#22240;&#27492;&#65292;&#32487;&#25215;&#33258;baidu.lang.Class&#30340;&#31867;&#24212;&#35813;&#30452;&#25509;&#25110;&#32773;&#38388;&#25509;&#35843;&#29992;&#23427;&#30340;&#26500;&#36896;&#20989;&#25968;&#12290;&lt;br&gt;baidu.lang.Class&#30340;&#26500;&#36896;&#20989;&#25968;&#20013;&#20135;&#29983;guid&#30340;&#26041;&#24335;&#21487;&#20197;&#20445;&#35777;guid&#30340;&#21807;&#19968;&#24615;&#65292;&#21450;&#27599;&#20010;&#23454;&#20363;&#37117;&#26377;&#19968;&#20010;&#20840;&#23616;&#21807;&#19968;&#30340;guid&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.inherits,baidu.lang.Event</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>guid <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>guid<span class=\"k\">();</span>","","    <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>__decontrolled <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_instances<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>guid<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_instances <span class=\"k\">=</span> baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_instances <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#37322;&#25918;&#23545;&#35937;&#25152;&#25345;&#26377;&#30340;&#36164;&#28304;&#65292;&#20027;&#35201;&#26159;&#33258;&#23450;&#20041;&#20107;&#20214;&#12290;</span>","<span class=\"c\"> * @name dispose</span>","<span class=\"c\"> * @grammar obj.dispose()</span>","<span class=\"c\"> * TODO: &#23558;_listeners&#20013;&#32465;&#23450;&#30340;&#20107;&#20214;&#21076;&#38500;&#25481;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>dispose <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">delete</span> baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_instances<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>guid<span class=\"k\">];</span>","","    <span class=\"c\">// this.__listeners &amp;&amp; (for (var i in this.__listeners) delete this.__listeners[i]);</span>","","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> property <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">[</span>property<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">[</span>property<span class=\"k\">];</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>disposed <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>   <span class=\"c\">// 20100716</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#37325;&#36733;&#20102;&#40664;&#35748;&#30340;toString&#26041;&#27861;&#65292;&#20351;&#24471;&#36820;&#22238;&#20449;&#24687;&#26356;&#21152;&#20934;&#30830;&#19968;&#20123;&#12290;</span>","<span class=\"c\"> * 20111219 meizz &#20026;&#25903;&#25345;&#32769;&#29256;&#26412;&#30340;className&#23646;&#24615;&#65292;&#20197;&#21518;&#32479;&#19968;&#25913;&#25104; __type</span>","<span class=\"c\"> * @return {string} &#23545;&#35937;&#30340;String&#34920;&#31034;&#24418;&#24335;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">\"[object \"</span> <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__type <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>_className <span class=\"k\">||</span> <span class=\"s\">\"Object\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25353;&#21807;&#19968;&#26631;&#35782;guid&#23383;&#31526;&#20018;&#21462;&#24471;&#23454;&#20363;&#23545;&#35937;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param   {String}    guid</span>","<span class=\"c\"> * @return  {object}            &#23454;&#20363;&#23545;&#35937;</span>","<span class=\"c\"> */</span>"," window<span class=\"k\">[</span><span class=\"s\">\"baiduInstance\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>guid<span class=\"k\">)</span> <span class=\"k\">{</span>","     <span class=\"k\">return</span> baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_instances<span class=\"k\">[</span>guid<span class=\"k\">];</span>"," <span class=\"k\">}</span>","","<span class=\"c\">//  2011.11.23  meizz   &#28155;&#21152; baiduInstance &#36825;&#20010;&#20840;&#23616;&#26041;&#27861;&#65292;&#21487;&#20197;&#24555;&#36895;&#22320;&#36890;&#36807;guid&#24471;&#21040;&#23454;&#20363;&#23545;&#35937;</span>","<span class=\"c\">//  2011.11.22  meizz   &#24223;&#38500;&#21019;&#24314;&#31867;&#26102;&#25351;&#23450;guid&#30340;&#27169;&#24335;&#65292;guid&#21482;&#20316;&#20026;&#21482;&#35835;&#23646;&#24615;</span>","<span class=\"c\">//  2011.11.22  meizz   &#24223;&#38500; baidu.lang._instances &#27169;&#22359;&#65292;&#30001;&#32479;&#19968;&#30340;global&#26426;&#21046;&#23436;&#25104;&#65307;</span>"]);
_$jscoverage['baidu/lang/createClass.js'] && (_$jscoverage['baidu/lang/createClass.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author: meizz</span>","<span class=\"c\"> * @namespace: baidu.lang.createClass</span>","<span class=\"c\"> * @version: 1.6.0</span>","<span class=\"c\"> * @modify: 2011.11.24 meizz</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","<span class=\"c\">///import baidu.lang.Class;</span>","<span class=\"c\">///import baidu.lang.Event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21019;&#24314;&#19968;&#20010;&#31867;&#65292;&#21253;&#25324;&#21019;&#36896;&#31867;&#30340;&#26500;&#36896;&#22120;&#12289;&#32487;&#25215;&#22522;&#31867;Class</span>","<span class=\"c\"> * @name baidu.lang.createClass</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.createClass(constructor[, options])</span>","<span class=\"c\"> * @param {Function} constructor &#31867;&#30340;&#26500;&#36896;&#22120;&#20989;&#25968;</span>","<span class=\"c\"> * @param {Object} [options] </span>","<span class=\"c\">                </span>","<span class=\"c\"> * @config {string} [type] &#31867;&#21517;</span>","<span class=\"c\"> * @config {Function} [superClass] &#29238;&#31867;&#65292;&#40664;&#35748;&#20026;baidu.lang.Class</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">            &#20351;&#29992;createClass&#33021;&#26041;&#20415;&#30340;&#21019;&#24314;&#19968;&#20010;&#24102;&#26377;&#32487;&#25215;&#20851;&#31995;&#30340;&#31867;&#12290;&#21516;&#26102;&#20250;&#20026;&#36820;&#22238;&#30340;&#31867;&#23545;&#35937;&#28155;&#21152;extend&#26041;&#27861;&#65292;&#20351;&#29992;obj.extend({});&#21487;&#20197;&#26041;&#20415;&#30340;&#25193;&#23637;&#21407;&#22411;&#38142;&#19978;&#30340;&#26041;&#27861;&#21644;&#23646;&#24615;</span>","<span class=\"c\">        </span>","<span class=\"c\"> * @see baidu.lang.Class,baidu.lang.inherits</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#19968;&#20010;&#31867;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>createClass <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>constructor<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> superClass <span class=\"k\">=</span> options<span class=\"k\">.</span>superClass <span class=\"k\">||</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">;</span>","","    <span class=\"c\">// &#21019;&#24314;&#26032;&#31867;&#30340;&#30495;&#26500;&#36896;&#22120;&#20989;&#25968;</span>","    <span class=\"k\">var</span> fn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","        <span class=\"c\">// 20101030 &#26576;&#31867;&#22312;&#28155;&#21152;&#35813;&#23646;&#24615;&#25511;&#21046;&#26102;&#65292;guid&#23558;&#19981;&#22312;&#20840;&#23616;instances&#37324;&#25511;&#21046;</span>","        options<span class=\"k\">.</span>decontrolled <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>__decontrolled <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"c\">// &#32487;&#25215;&#29238;&#31867;&#30340;&#26500;&#36896;&#22120;</span>","        superClass<span class=\"k\">.</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","","        <span class=\"c\">// &#20840;&#23616;&#37197;&#32622;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> fn<span class=\"k\">.</span>options<span class=\"k\">)</span> me<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> fn<span class=\"k\">.</span>options<span class=\"k\">[</span>i<span class=\"k\">];</span>","","        constructor<span class=\"k\">.</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> reg<span class=\"k\">=</span>fn<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">06r\"</span><span class=\"k\">];</span> reg <span class=\"k\">&amp;&amp;</span> i<span class=\"k\">&lt;</span>reg<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            reg<span class=\"k\">[</span>i<span class=\"k\">].</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// [TODO delete 2013] &#25918;&#32622;&#20840;&#23616;&#37197;&#32622;&#65292;&#36825;&#20010;&#20840;&#23616;&#37197;&#32622;&#21487;&#20197;&#30452;&#25509;&#20889;&#21040;&#31867;&#37324;&#38754;</span>","    fn<span class=\"k\">.</span>options <span class=\"k\">=</span> options<span class=\"k\">.</span>options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> C <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">,</span>","        cp <span class=\"k\">=</span> constructor<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","    C<span class=\"k\">.</span>prototype <span class=\"k\">=</span> superClass<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","","    <span class=\"c\">// &#32487;&#25215;&#29238;&#31867;&#30340;&#21407;&#22411;&#65288;prototype)&#38142;</span>","    <span class=\"k\">var</span> fp <span class=\"k\">=</span> fn<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">new</span> C<span class=\"k\">();</span>","","    <span class=\"c\">// &#32487;&#25215;&#20256;&#21442;&#36827;&#26469;&#30340;&#26500;&#36896;&#22120;&#30340; prototype &#19981;&#20250;&#20002;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> cp<span class=\"k\">)</span> fp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> cp<span class=\"k\">[</span>i<span class=\"k\">];</span>","","    <span class=\"c\">// 20111122 &#21407;className&#21442;&#25968;&#25913;&#21517;&#20026;type</span>","    <span class=\"k\">var</span> type <span class=\"k\">=</span> options<span class=\"k\">.</span>className <span class=\"k\">||</span> options<span class=\"k\">.</span>type<span class=\"k\">;</span>","    <span class=\"k\">typeof</span> type <span class=\"k\">==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>fp<span class=\"k\">.</span>__type <span class=\"k\">=</span> type<span class=\"k\">);</span>","","    <span class=\"c\">// &#20462;&#27491;&#36825;&#31181;&#32487;&#25215;&#26041;&#24335;&#24102;&#26469;&#30340; constructor &#28151;&#20081;&#30340;&#38382;&#39064;</span>","    fp<span class=\"k\">.</span>constructor <span class=\"k\">=</span> cp<span class=\"k\">.</span>constructor<span class=\"k\">;</span>","","    <span class=\"c\">// &#32473;&#31867;&#25193;&#23637;&#20986;&#19968;&#20010;&#38745;&#24577;&#26041;&#27861;&#65292;&#20197;&#20195;&#26367; baidu.object.extend()</span>","    fn<span class=\"k\">.</span>extend <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>json<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> json<span class=\"k\">)</span> <span class=\"k\">{</span>","            fn<span class=\"k\">.</span>prototype<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> json<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> fn<span class=\"k\">;</span>  <span class=\"c\">// &#36825;&#20010;&#38745;&#24577;&#26041;&#27861;&#20063;&#36820;&#22238;&#31867;&#23545;&#35937;&#26412;&#36523;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">return</span> fn<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// 20111221 meizz   &#20462;&#25913;&#25554;&#20214;&#20989;&#25968;&#30340;&#23384;&#25918;&#22320;&#65292;&#37325;&#26032;&#25918;&#22238;&#31867;&#26500;&#36896;&#22120;&#38745;&#24577;&#23646;&#24615;&#19978;</span>"]);
_$jscoverage['baidu/lang/createSingle.js'] && (_$jscoverage['baidu/lang/createSingle.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/createSingle.js</span>","<span class=\"c\"> * author: meizz, berg</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010-05-13</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","<span class=\"c\">///import baidu.lang.Class;</span>","<span class=\"c\">///import baidu.lang.Class.$removeEventListener;</span>","<span class=\"c\">///import baidu.lang.Event;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21019;&#24314;&#19968;&#20010;baidu.lang.Class&#30340;&#21333;&#20363;&#23454;&#20363;</span>","<span class=\"c\"> * @name baidu.lang.createSingle</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.createSingle(json)</span>","<span class=\"c\"> * @param {Object} json &#30452;&#25509;&#25346;&#36733;&#21040;&#36825;&#20010;&#21333;&#20363;&#37324;&#30340;&#39044;&#23450;&#23646;&#24615;/&#26041;&#27861;</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @see baidu.lang.Class</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#19968;&#20010;&#23454;&#20363;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>createSingle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>json<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> c <span class=\"k\">=</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">();</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> json<span class=\"k\">)</span> <span class=\"k\">{</span>","        c<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> json<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> c<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""]);
_$jscoverage['baidu/lang/decontrol.js'] && (_$jscoverage['baidu/lang/decontrol.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/decontrol.js</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * $date$</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang._instances;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35299;&#38500;instance&#20013;&#23545;&#25351;&#23450;&#31867;&#23454;&#20363;&#30340;&#24341;&#29992;&#20851;&#31995;&#12290;</span>","<span class=\"c\"> * @name baidu.lang.decontrol</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.decontrol(guid)</span>","<span class=\"c\"> * @param {string} guid &#31867;&#30340;&#21807;&#19968;&#26631;&#35782;</span>","<span class=\"c\"> * @version 1.1.1</span>","<span class=\"c\"> * @see baidu.lang.instance</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>decontrol <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>guid<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> m <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">];</span>","    m<span class=\"k\">.</span>_instances <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"k\">delete</span> m<span class=\"k\">.</span>_instances<span class=\"k\">[</span>guid<span class=\"k\">]);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/Event.js'] && (_$jscoverage['baidu/lang/Event.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/Event.js</span>","<span class=\"c\"> * author: meizz, erik, berg</span>","<span class=\"c\"> * version: 1.6.0</span>","<span class=\"c\"> * date: 2009/11/24</span>","<span class=\"c\"> * modify: 2011/11/24 meizz</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang.Class;</span>","<span class=\"c\">///import baidu.lang.guid;</span>","<span class=\"c\">///import baidu.lang.isString;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33258;&#23450;&#20041;&#30340;&#20107;&#20214;&#23545;&#35937;&#12290;</span>","<span class=\"c\"> * @class</span>","<span class=\"c\"> * @name \tbaidu.lang.Event</span>","<span class=\"c\"> * @grammar baidu.lang.Event(type[, target])</span>","<span class=\"c\"> * @param \t{string} type\t &#20107;&#20214;&#31867;&#22411;&#21517;&#31216;&#12290;&#20026;&#20102;&#26041;&#20415;&#21306;&#20998;&#20107;&#20214;&#21644;&#19968;&#20010;&#26222;&#36890;&#30340;&#26041;&#27861;&#65292;&#20107;&#20214;&#31867;&#22411;&#21517;&#31216;&#24517;&#39035;&#20197;\"on\"(&#23567;&#20889;)&#24320;&#22836;&#12290;</span>","<span class=\"c\"> * @param \t{Object} [target]&#35302;&#21457;&#20107;&#20214;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @remark &#24341;&#20837;&#35813;&#27169;&#22359;&#65292;&#20250;&#33258;&#21160;&#20026;Class&#24341;&#20837;3&#20010;&#20107;&#20214;&#25193;&#23637;&#26041;&#27861;&#65306;addEventListener&#12289;removeEventListener&#21644;dispatchEvent&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.Class</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Event <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> type<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>target <span class=\"k\">=</span> target <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>currentTarget <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"," ","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27966;&#21457;&#33258;&#23450;&#20041;&#20107;&#20214;&#65292;&#20351;&#24471;&#32465;&#23450;&#21040;&#33258;&#23450;&#20041;&#20107;&#20214;&#19978;&#38754;&#30340;&#20989;&#25968;&#37117;&#20250;&#34987;&#25191;&#34892;&#12290;&#24341;&#20837;baidu.lang.Event&#21518;&#65292;Class&#30340;&#23376;&#31867;&#23454;&#20363;&#25165;&#20250;&#33719;&#24471;&#35813;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @grammar obj.dispatchEvent(event, options)</span>","<span class=\"c\"> * @param {baidu.lang.Event|String} event \tEvent&#23545;&#35937;&#65292;&#25110;&#20107;&#20214;&#21517;&#31216;(1.1.1&#36215;&#25903;&#25345;)</span>","<span class=\"c\"> * @param {Object} \t\t\t\t\toptions &#25193;&#23637;&#21442;&#25968;,&#25152;&#21547;&#23646;&#24615;&#38190;&#20540;&#20250;&#25193;&#23637;&#21040;Event&#23545;&#35937;&#19978;(1.2&#36215;&#25903;&#25345;)</span>","<span class=\"c\"> * @remark &#22788;&#29702;&#20250;&#35843;&#29992;&#36890;&#36807;addEventListenr&#32465;&#23450;&#30340;&#33258;&#23450;&#20041;&#20107;&#20214;&#22238;&#35843;&#20989;&#25968;&#20043;&#22806;&#65292;&#36824;&#20250;&#35843;&#29992;&#30452;&#25509;&#32465;&#23450;&#21040;&#23545;&#35937;&#19978;&#38754;&#30340;&#33258;&#23450;&#20041;&#20107;&#20214;&#12290;&#20363;&#22914;&#65306;&lt;br&gt;</span>","<span class=\"c\">myobj.onMyEvent = function(){}&lt;br&gt;</span>","<span class=\"c\">myobj.addEventListener(\"onMyEvent\", function(){});</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>fire <span class=\"k\">=</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>dispatchEvent <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>event <span class=\"k\">=</span> <span class=\"k\">new</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Event<span class=\"k\">(</span>event<span class=\"k\">));</span>","","    <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>__listeners <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__listeners <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","    <span class=\"c\">// 20100603 &#28155;&#21152;&#26412;&#26041;&#27861;&#30340;&#31532;&#20108;&#20010;&#21442;&#25968;&#65292;&#23558; options extend&#21040;event&#20013;&#21435;&#20256;&#36882;</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        event<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span>i<span class=\"k\">];</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">var</span> i<span class=\"k\">,</span> n<span class=\"k\">,</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> t <span class=\"k\">=</span> me<span class=\"k\">.</span>__listeners<span class=\"k\">,</span> p <span class=\"k\">=</span> event<span class=\"k\">.</span>type<span class=\"k\">;</span>","    event<span class=\"k\">.</span>target <span class=\"k\">=</span> event<span class=\"k\">.</span>target <span class=\"k\">||</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>currentTarget <span class=\"k\">=</span> me<span class=\"k\">);</span>","","    <span class=\"c\">// &#25903;&#25345;&#38750; on &#24320;&#22836;&#30340;&#20107;&#20214;&#21517;</span>","    p<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"on\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>p <span class=\"k\">=</span> <span class=\"s\">\"on\"</span> <span class=\"k\">+</span> p<span class=\"k\">);</span>","","    <span class=\"k\">typeof</span> me<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">[</span>p<span class=\"k\">].</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> t<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">\"object\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> n<span class=\"k\">=</span>t<span class=\"k\">[</span>p<span class=\"k\">].</span>length<span class=\"k\">;</span> i<span class=\"k\">&lt;</span>n<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            t<span class=\"k\">[</span>p<span class=\"k\">][</span>i<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> t<span class=\"k\">[</span>p<span class=\"k\">][</span>i<span class=\"k\">].</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> event<span class=\"k\">.</span>returnValue<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27880;&#20876;&#23545;&#35937;&#30340;&#20107;&#20214;&#30417;&#21548;&#22120;&#12290;&#24341;&#20837;baidu.lang.Event&#21518;&#65292;Class&#30340;&#23376;&#31867;&#23454;&#20363;&#25165;&#20250;&#33719;&#24471;&#35813;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @grammar obj.addEventListener(type, handler[, key])</span>","<span class=\"c\"> * @param   {string}   type         &#33258;&#23450;&#20041;&#20107;&#20214;&#30340;&#21517;&#31216;</span>","<span class=\"c\"> * @param   {Function} handler      &#33258;&#23450;&#20041;&#20107;&#20214;&#34987;&#35302;&#21457;&#26102;&#24212;&#35813;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\"> * @return  {Function}              &#23558;&#29992;&#25143;&#27880;&#20837;&#30340;&#30417;&#21548;&#20989;&#25968;&#36820;&#22238;&#65292;&#20197;&#20415;&#31227;&#38500;&#20107;&#20214;&#30417;&#21548;&#65292;&#29305;&#21035;&#36866;&#29992;&#20110;&#21311;&#21517;&#20989;&#25968;&#12290;</span>","<span class=\"c\"> * @remark  &#20107;&#20214;&#31867;&#22411;&#21306;&#20998;&#22823;&#23567;&#20889;&#12290;&#22914;&#26524;&#33258;&#23450;&#20041;&#20107;&#20214;&#21517;&#31216;&#19981;&#26159;&#20197;&#23567;&#20889;\"on\"&#24320;&#22836;&#65292;&#35813;&#26041;&#27861;&#20250;&#32473;&#23427;&#21152;&#19978;\"on\"&#20877;&#36827;&#34892;&#21028;&#26029;&#65292;&#21363;\"click\"&#21644;\"onclick\"&#20250;&#34987;&#35748;&#20026;&#26159;&#21516;&#19968;&#31181;&#20107;&#20214;&#12290; </span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>on <span class=\"k\">=</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addEventListener <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> handler<span class=\"k\">,</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> handler <span class=\"k\">!=</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>__listeners <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__listeners <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> i<span class=\"k\">,</span> t <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__listeners<span class=\"k\">;</span>","","    type<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"on\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>type <span class=\"k\">=</span> <span class=\"s\">\"on\"</span> <span class=\"k\">+</span> type<span class=\"k\">);</span>","","    <span class=\"k\">typeof</span> t<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"s\">\"object\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>t<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[]);</span>","","    <span class=\"c\">// &#36991;&#20813;&#20989;&#25968;&#37325;&#22797;&#27880;&#20876;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> t<span class=\"k\">[</span>type<span class=\"k\">].</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>t<span class=\"k\">[</span>type<span class=\"k\">][</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> handler<span class=\"k\">)</span> <span class=\"k\">return</span> handler<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    t<span class=\"k\">[</span>type<span class=\"k\">].</span>push<span class=\"k\">(</span>handler<span class=\"k\">);</span>","","    <span class=\"c\">// [TODO delete 2013] 2011.12.19 &#20860;&#23481;&#32769;&#29256;&#26412;&#65292;2013&#21024;&#38500;&#27492;&#34892;</span>","    key <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> key <span class=\"k\">==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>t<span class=\"k\">[</span>type<span class=\"k\">][</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> handler<span class=\"k\">);</span>","","    <span class=\"k\">return</span> handler<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">//  2011.12.19  meizz   &#24456;&#24754;&#21095;&#65292;&#31532;&#19977;&#20010;&#21442;&#25968; key &#36824;&#38656;&#35201;&#25903;&#25345;&#19968;&#27573;&#26102;&#38388;&#65292;&#20197;&#20860;&#23481;&#32769;&#29256;&#26412;&#33050;&#26412;</span>","<span class=\"c\">//  2011.11.24  meizz   &#20107;&#20214;&#28155;&#21152;&#30417;&#21548;&#26041;&#27861; addEventListener &#31227;&#38500;&#31532;&#19977;&#20010;&#21442;&#25968; key&#65292;&#28155;&#21152;&#36820;&#22238;&#20540; handler</span>","<span class=\"c\">//  2011.11.23  meizz   &#20107;&#20214;handler&#30340;&#23384;&#20648;&#23545;&#35937;&#30001;json&#25913;&#25104;array&#65292;&#20197;&#20445;&#35777;&#27880;&#20876;&#20989;&#25968;&#30340;&#25191;&#34892;&#39034;&#24207;</span>","<span class=\"c\">//  2011.11.22  meizz   &#23558; removeEventListener &#26041;&#27861;&#20998;&#25286;&#21040; baidu.lang.Class.removeEventListener &#20013;&#65292;&#20197;&#33410;&#32422;&#20027;&#31243;&#24207;&#20195;&#30721;</span>"]);
_$jscoverage['baidu/lang/eventCenter.js'] && (_$jscoverage['baidu/lang/eventCenter.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","<span class=\"c\">///import baidu.lang;</span>","<span class=\"c\">///import baidu.lang.createSingle;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20107;&#20214;&#20013;&#24515;</span>","<span class=\"c\"> * @class</span>","<span class=\"c\"> * @name baidu.lang.eventCenter</span>","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>eventCenter <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>eventCenter <span class=\"k\">||</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>createSingle<span class=\"k\">();</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27880;&#20876;&#20840;&#23616;&#20107;&#20214;&#30417;&#21548;&#22120;&#12290;</span>","<span class=\"c\"> * @name baidu.lang.eventCenter.addEventListener</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.eventCenter.addEventListener(type, handler[, key])</span>","<span class=\"c\"> * @param \t{string}   type         &#33258;&#23450;&#20041;&#20107;&#20214;&#30340;&#21517;&#31216;</span>","<span class=\"c\"> * @param \t{Function} handler      &#33258;&#23450;&#20041;&#20107;&#20214;&#34987;&#35302;&#21457;&#26102;&#24212;&#35813;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\"> * @param \t{string}   [key]\t\t&#20026;&#20107;&#20214;&#30417;&#21548;&#20989;&#25968;&#25351;&#23450;&#30340;&#21517;&#31216;&#65292;&#21487;&#22312;&#31227;&#38500;&#26102;&#20351;&#29992;&#12290;&#22914;&#26524;&#19981;&#25552;&#20379;&#65292;&#26041;&#27861;&#20250;&#40664;&#35748;&#20026;&#23427;&#29983;&#25104;&#19968;&#20010;&#20840;&#23616;&#21807;&#19968;&#30340;key&#12290;</span>","<span class=\"c\"> * @remark \t&#20107;&#20214;&#31867;&#22411;&#21306;&#20998;&#22823;&#23567;&#20889;&#12290;&#22914;&#26524;&#33258;&#23450;&#20041;&#20107;&#20214;&#21517;&#31216;&#19981;&#26159;&#20197;&#23567;&#20889;\"on\"&#24320;&#22836;&#65292;&#35813;&#26041;&#27861;&#20250;&#32473;&#23427;&#21152;&#19978;\"on\"&#20877;&#36827;&#34892;&#21028;&#26029;&#65292;&#21363;\"click\"&#21644;\"onclick\"&#20250;&#34987;&#35748;&#20026;&#26159;&#21516;&#19968;&#31181;&#20107;&#20214;&#12290; </span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#31227;&#38500;&#20840;&#23616;&#20107;&#20214;&#30417;&#21548;&#22120;&#12290;</span>","<span class=\"c\"> * @name baidu.lang.eventCenter.removeEventListener</span>","<span class=\"c\"> * @grammar baidu.lang.eventCenter.removeEventListener(type, handler)</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @param {string}   type     &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Function|string} handler  &#35201;&#31227;&#38500;&#30340;&#20107;&#20214;&#30417;&#21548;&#20989;&#25968;&#25110;&#32773;&#30417;&#21548;&#20989;&#25968;&#30340;key</span>","<span class=\"c\"> * @remark \t&#22914;&#26524;&#31532;&#20108;&#20010;&#21442;&#25968;handler&#27809;&#26377;&#34987;&#32465;&#23450;&#21040;&#23545;&#24212;&#30340;&#33258;&#23450;&#20041;&#20107;&#20214;&#20013;&#65292;&#20160;&#20040;&#20063;&#19981;&#20570;&#12290;</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27966;&#21457;&#20840;&#23616;&#33258;&#23450;&#20041;&#20107;&#20214;&#65292;&#20351;&#24471;&#32465;&#23450;&#21040;&#20840;&#23616;&#33258;&#23450;&#20041;&#20107;&#20214;&#19978;&#38754;&#30340;&#20989;&#25968;&#37117;&#20250;&#34987;&#25191;&#34892;&#12290;</span>","<span class=\"c\"> * @name baidu.lang.eventCenter.dispatchEvent</span>","<span class=\"c\"> * @grammar baidu.lang.eventCenter.dispatchEvent(event, options)</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @param {baidu.lang.Event|String} event \tEvent&#23545;&#35937;&#65292;&#25110;&#20107;&#20214;&#21517;&#31216;(1.1.1&#36215;&#25903;&#25345;)</span>","<span class=\"c\"> * @param {Object} \t\t\t\t\toptions &#25193;&#23637;&#21442;&#25968;,&#25152;&#21547;&#23646;&#24615;&#38190;&#20540;&#20250;&#25193;&#23637;&#21040;Event&#23545;&#35937;&#19978;(1.2&#36215;&#25903;&#25345;)</span>","<span class=\"c\"> */</span>"]);
_$jscoverage['baidu/lang/getModule.js'] && (_$jscoverage['baidu/lang/getModule.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * tangram</span>","<span class=\"c\"> * copyright 2011 baidu inc. all rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/lang/getModule.js</span>","<span class=\"c\"> * author: leeight</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2011/04/29</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26681;&#25454;&#21464;&#37327;&#21517;&#25110;&#32773;&#21629;&#21517;&#31354;&#38388;&#26469;&#26597;&#25214;&#23545;&#35937;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.getModule(name, opt_obj)</span>","<span class=\"c\"> * @param {string} name &#21464;&#37327;&#25110;&#32773;&#21629;&#21517;&#31354;&#38388;&#30340;&#21517;&#23383;.</span>","<span class=\"c\"> * @param {Object=} opt_obj &#20174;&#36825;&#20010;&#23545;&#35937;&#24320;&#22987;&#26597;&#25214;&#65292;&#40664;&#35748;&#26159;window;</span>","<span class=\"c\"> * @return {?Object} &#36820;&#22238;&#25214;&#21040;&#30340;&#23545;&#35937;&#65292;&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;&#36820;&#22238;null.</span>","<span class=\"c\"> * @see goog.getObjectByName</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>getModule <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">,</span> opt_obj<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> parts <span class=\"k\">=</span> name<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">),</span>","        cur <span class=\"k\">=</span> opt_obj <span class=\"k\">||</span> window<span class=\"k\">,</span>","        part<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(;</span> part <span class=\"k\">=</span> parts<span class=\"k\">.</span>shift<span class=\"k\">();</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>cur<span class=\"k\">[</span>part<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            cur <span class=\"k\">=</span> cur<span class=\"k\">[</span>part<span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","          <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> cur<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","","","","","","","","","","","","","","","","","","","<span class=\"c\">/* vim: set ts=4 sw=4 sts=4 tw=100 noet: */</span>"]);
_$jscoverage['baidu/lang/guid.js'] && (_$jscoverage['baidu/lang/guid.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/guid.js</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/02/04</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36820;&#22238;&#19968;&#20010;&#24403;&#21069;&#39029;&#38754;&#30340;&#21807;&#19968;&#26631;&#35782;&#23383;&#31526;&#20018;&#12290;</span>","<span class=\"c\"> * @name baidu.lang.guid</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.guid()</span>","<span class=\"c\"> * @version 1.1.1</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {String} &#24403;&#21069;&#39029;&#38754;&#30340;&#21807;&#19968;&#26631;&#35782;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>guid <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">\"TANGRAM$\"</span> <span class=\"k\">+</span> baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_counter <span class=\"k\">++;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">//&#19981;&#30452;&#25509;&#20351;&#29992;window&#65292;&#21487;&#20197;&#25552;&#39640;3&#20493;&#24038;&#21491;&#24615;&#33021;</span>","baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_counter <span class=\"k\">=</span> baidu<span class=\"k\">.</span>$$<span class=\"k\">.</span>_counter <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","","<span class=\"c\">// 20111129\tmeizz\t&#21435;&#38500; _counter.toString(36) &#36825;&#27493;&#36816;&#31639;&#65292;&#33410;&#32422;&#35745;&#31639;&#37327;</span>"]);
_$jscoverage['baidu/lang/inherits.js'] && (_$jscoverage['baidu/lang/inherits.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/inherits.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/24</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#31867;&#22411;&#26500;&#36896;&#22120;&#24314;&#31435;&#32487;&#25215;&#20851;&#31995;</span>","<span class=\"c\"> * @name baidu.lang.inherits</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.inherits(subClass, superClass[, type])</span>","<span class=\"c\"> * @param {Function} subClass &#23376;&#31867;&#26500;&#36896;&#22120;</span>","<span class=\"c\"> * @param {Function} superClass &#29238;&#31867;&#26500;&#36896;&#22120;</span>","<span class=\"c\"> * @param {string} type &#31867;&#21517;&#26631;&#35782;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&#20351;subClass&#32487;&#25215;superClass&#30340;prototype&#65292;&#22240;&#27492;subClass&#30340;&#23454;&#20363;&#33021;&#22815;&#20351;&#29992;superClass&#30340;prototype&#20013;&#23450;&#20041;&#30340;&#25152;&#26377;&#23646;&#24615;&#21644;&#26041;&#27861;&#12290;&lt;br&gt;</span>","<span class=\"c\">&#36825;&#20010;&#20989;&#25968;&#23454;&#38469;&#19978;&#26159;&#24314;&#31435;&#20102;subClass&#21644;superClass&#30340;&#21407;&#22411;&#38142;&#38598;&#25104;&#65292;&#24182;&#23545;subClass&#36827;&#34892;&#20102;constructor&#20462;&#27491;&#12290;&lt;br&gt;</span>","<span class=\"c\">&lt;strong&gt;&#27880;&#24847;&#65306;&#22914;&#26524;&#35201;&#32487;&#25215;&#26500;&#36896;&#20989;&#25968;&#65292;&#38656;&#35201;&#22312;subClass&#37324;&#38754;call&#19968;&#19979;&#65292;&#20855;&#20307;&#35265;&#19979;&#38754;&#30340;demo&#20363;&#23376;&lt;/strong&gt;</span>","<span class=\"c\">\t</span>","<span class=\"c\"> * @shortcut inherits</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.Class</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>inherits <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>subClass<span class=\"k\">,</span> superClass<span class=\"k\">,</span> type<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> key<span class=\"k\">,</span> proto<span class=\"k\">,</span> ","        selfProps <span class=\"k\">=</span> subClass<span class=\"k\">.</span>prototype<span class=\"k\">,</span> ","        clazz <span class=\"k\">=</span> <span class=\"k\">new</span> Function<span class=\"k\">();</span>","        ","    clazz<span class=\"k\">.</span>prototype <span class=\"k\">=</span> superClass<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","    proto <span class=\"k\">=</span> subClass<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">new</span> clazz<span class=\"k\">();</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> selfProps<span class=\"k\">)</span> <span class=\"k\">{</span>","        proto<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> selfProps<span class=\"k\">[</span>key<span class=\"k\">];</span>","    <span class=\"k\">}</span>","    subClass<span class=\"k\">.</span>prototype<span class=\"k\">.</span>constructor <span class=\"k\">=</span> subClass<span class=\"k\">;</span>","    subClass<span class=\"k\">.</span>superClass <span class=\"k\">=</span> superClass<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","","    <span class=\"c\">// &#31867;&#21517;&#26631;&#35782;&#65292;&#20860;&#23481;Class&#30340;toString&#65292;&#22522;&#26412;&#27809;&#29992;</span>","    <span class=\"k\">typeof</span> type <span class=\"k\">==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>proto<span class=\"k\">.</span>__type <span class=\"k\">=</span> type<span class=\"k\">);</span>","","    subClass<span class=\"k\">.</span>extend <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>json<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> json<span class=\"k\">)</span> proto<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> json<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">return</span> subClass<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> subClass<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>inherits <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>inherits<span class=\"k\">;</span>","","<span class=\"c\">//  2011.11.22  meizz   &#20026;&#31867;&#28155;&#21152;&#20102;&#19968;&#20010;&#38745;&#24577;&#26041;&#27861;extend()&#65292;&#26041;&#20415;&#20195;&#30721;&#20070;&#20889;</span>"]);
_$jscoverage['baidu/lang/instance.js'] && (_$jscoverage['baidu/lang/instance.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/instance.js</span>","<span class=\"c\"> * author: meizz, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang._instances;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26681;&#25454;&#21442;&#25968;(guid)&#30340;&#25351;&#23450;&#65292;&#36820;&#22238;&#23545;&#24212;&#30340;&#23454;&#20363;&#23545;&#35937;&#24341;&#29992;</span>","<span class=\"c\"> * @name baidu.lang.instance</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.instance(guid)</span>","<span class=\"c\"> * @param {string} guid &#38656;&#35201;&#33719;&#21462;&#23454;&#20363;&#30340;guid</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object|null} &#22914;&#26524;&#23384;&#22312;&#30340;&#35805;&#65292;&#36820;&#22238;;&#21542;&#21017;&#36820;&#22238;null&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>instance <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>guid<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>_instances<span class=\"k\">[</span>guid<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isArray.js'] && (_$jscoverage['baidu/lang/isArray.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isArray.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;Array&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isArray</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isArray(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isArray <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">'[object Array]'</span> <span class=\"k\">==</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isBoolean.js'] && (_$jscoverage['baidu/lang/isBoolean.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isBoolean.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/10/12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;Boolean&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isBoolean</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isBoolean(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isElement,baidu.lang.isArray,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isBoolean <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">typeof</span> o <span class=\"k\">===</span> <span class=\"s\">'boolean'</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isDate.js'] && (_$jscoverage['baidu/lang/isDate.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isDate.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/10/12 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;&#20026;Date&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isDate</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isDate(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isBoolean,baidu.lang.isElement</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isDate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// return o instanceof Date;</span>","    <span class=\"k\">return</span> <span class=\"k\">{}</span><span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"[object Date]\"</span> <span class=\"k\">&amp;&amp;</span> o<span class=\"k\">.</span>toString<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">'Invalid Date'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isNaN<span class=\"k\">(</span>o<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isElement.js'] && (_$jscoverage['baidu/lang/isElement.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isElement.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;&#20026;Element&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isElement</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isElement(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isElement <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">!!(</span>source <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">.</span>nodeName <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""]);
_$jscoverage['baidu/lang/isFunction.js'] && (_$jscoverage['baidu/lang/isFunction.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isFunction.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010/06/12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;&#20026;function&#25110;Function&#23454;&#20363;</span>","<span class=\"c\"> * @name baidu.lang.isFunction</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isFunction(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// chrome&#19979;,'function' == typeof /a/ &#20026;true.</span>","    <span class=\"k\">return</span> <span class=\"s\">'[object Function]'</span> <span class=\"k\">==</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isNumber.js'] && (_$jscoverage['baidu/lang/isNumber.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;number&#31867;&#22411;&#25110;Number&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isNumber</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isNumber(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> * @remark &#29992;&#26412;&#20989;&#25968;&#21028;&#26029;NaN&#20250;&#36820;&#22238;false&#65292;&#23613;&#31649;&#22312;Javascript&#20013;&#26159;Number&#31867;&#22411;&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isNumber <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">'[object Number]'</span> <span class=\"k\">==</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> isFinite<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isObject.js'] && (_$jscoverage['baidu/lang/isObject.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isObject.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;&#20026;Object&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isObject</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isObject(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @shortcut isObject</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.isString,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isObject <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">'function'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> source <span class=\"k\">||</span> <span class=\"k\">!!(</span>source <span class=\"k\">&amp;&amp;</span> <span class=\"s\">'object'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>isObject <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isObject<span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/isString.js'] && (_$jscoverage['baidu/lang/isString.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/isString.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#30446;&#26631;&#21442;&#25968;&#26159;&#21542;string&#31867;&#22411;&#25110;String&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.lang.isString</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.isString(source)</span>","<span class=\"c\"> * @param {Any} source &#30446;&#26631;&#21442;&#25968;</span>","<span class=\"c\"> * @shortcut isString</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {boolean} &#31867;&#22411;&#21028;&#26029;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"s\">'[object String]'</span> <span class=\"k\">==</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>isString <span class=\"k\">=</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/module.js'] && (_$jscoverage['baidu/lang/module.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#22686;&#21152;&#33258;&#23450;&#20041;&#27169;&#22359;&#25193;&#23637;,&#40664;&#35748;&#21019;&#24314;&#22312;&#24403;&#21069;&#20316;&#29992;&#22495;</span>","<span class=\"c\"> * @author erik, berg</span>","<span class=\"c\"> * @name baidu.lang.module</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.module(name, module[, owner])</span>","<span class=\"c\"> * @param {string} name &#38656;&#35201;&#21019;&#24314;&#30340;&#27169;&#22359;&#21517;.</span>","<span class=\"c\"> * @param {Any} module &#38656;&#35201;&#21019;&#24314;&#30340;&#27169;&#22359;&#23545;&#35937;.</span>","<span class=\"c\"> * @param {Object} [owner] &#27169;&#22359;&#21019;&#24314;&#30340;&#30446;&#26631;&#29615;&#22659;&#65292;&#40664;&#35748;&#20026;window.</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> *</span>","<span class=\"c\">            &#20174;1.1.1&#24320;&#22987;&#65292;module&#26041;&#27861;&#20250;&#20248;&#20808;&#22312;&#24403;&#21069;&#20316;&#29992;&#22495;&#19979;&#23547;&#25214;&#27169;&#22359;&#65292;&#22914;&#26524;&#26080;&#27861;&#25214;&#21040;&#65292;&#21017;&#23547;&#25214;window&#19979;&#30340;&#27169;&#22359;</span>","","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>module <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">,</span> module<span class=\"k\">,</span> owner<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> packages <span class=\"k\">=</span> name<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">),</span>","        len <span class=\"k\">=</span> packages<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        packageName<span class=\"k\">,</span>","        i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    <span class=\"c\">// &#22914;&#26524;&#27809;&#26377;owner&#65292;&#25214;&#24403;&#21069;&#20316;&#29992;&#22495;&#65292;&#22914;&#26524;&#24403;&#21069;&#20316;&#29992;&#22495;&#27809;&#26377;&#27492;&#21464;&#37327;&#65292;&#22312;window&#21019;&#24314;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>owner<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'^[a-zA-Z_</span><span class=\"t\">\\x</span><span class=\"s\">24][a-zA-Z0-9_</span><span class=\"t\">\\x</span><span class=\"s\">24]*</span><span class=\"t\">\\x</span><span class=\"s\">24'</span><span class=\"k\">)).</span>test<span class=\"k\">(</span>packages<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">{</span>","                <span class=\"k\">throw</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            owner <span class=\"k\">=</span> eval<span class=\"k\">(</span>packages<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            owner <span class=\"k\">=</span> window<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        packageName <span class=\"k\">=</span> packages<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>owner<span class=\"k\">[</span>packageName<span class=\"k\">])</span> <span class=\"k\">{</span>","            owner<span class=\"k\">[</span>packageName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        owner <span class=\"k\">=</span> owner<span class=\"k\">[</span>packageName<span class=\"k\">];</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>owner<span class=\"k\">[</span>packages<span class=\"k\">[</span>len<span class=\"k\">]])</span> <span class=\"k\">{</span>","        owner<span class=\"k\">[</span>packages<span class=\"k\">[</span>len<span class=\"k\">]]</span> <span class=\"k\">=</span> module<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/register.js'] && (_$jscoverage['baidu/lang/register.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/register.js</span>","<span class=\"c\"> * author: meizz, dron</span>","<span class=\"c\"> * version: 1.6.0</span>","<span class=\"c\"> * date: 2011/11/29</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21521;&#26576;&#20010;&#31867;&#27880;&#20876;&#25554;&#20214;</span>","<span class=\"c\"> * @name baidu.lang.register</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.register(Class, constructorHook, methods)</span>","<span class=\"c\"> * @param   {Class}     Class   \t\t&#25509;&#21463;&#27880;&#20876;&#30340;&#36733;&#20307; &#31867;</span>","<span class=\"c\"> * @param   {Function}  constructorHook &#36816;&#34892;&#22312;&#36733;&#20307;&#31867;&#26500;&#36896;&#22120;&#37324;&#38057;&#23376;&#20989;&#25968;</span>","<span class=\"c\"> * @param\t{JSON}\t\tmethods\t\t\t&#25346;&#36733;&#21040;&#36733;&#20307;&#31867;&#21407;&#22411;&#38142;&#19978;&#30340;&#26041;&#27861;&#38598;&#65292;&#21487;&#36873;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>register <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>Class<span class=\"k\">,</span> constructorHook<span class=\"k\">,</span> methods<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> reg <span class=\"k\">=</span> Class<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">06r\"</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>Class<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">06r\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[]);</span>","    reg<span class=\"k\">[</span>reg<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> constructorHook<span class=\"k\">;</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> method <span class=\"k\">in</span> methods<span class=\"k\">)</span> <span class=\"k\">{</span>","    \tClass<span class=\"k\">.</span>prototype<span class=\"k\">[</span>method<span class=\"k\">]</span> <span class=\"k\">=</span> methods<span class=\"k\">[</span>method<span class=\"k\">];</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// 20111221 meizz   &#20462;&#25913;&#25554;&#20214;&#20989;&#25968;&#30340;&#23384;&#25918;&#22320;&#65292;&#37325;&#26032;&#25918;&#22238;&#31867;&#26500;&#36896;&#22120;&#38745;&#24577;&#23646;&#24615;&#19978;</span>","<span class=\"c\">// 20111129\tmeizz\t&#28155;&#21152;&#31532;&#19977;&#20010;&#21442;&#25968;&#65292;&#21487;&#20197;&#30452;&#25509;&#25346;&#36733;&#26041;&#27861;&#21040;&#30446;&#26631;&#31867;&#21407;&#22411;&#38142;&#19978;</span>"]);
_$jscoverage['baidu/lang/toArray.js'] && (_$jscoverage['baidu/lang/toArray.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/toArray.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010-07-05</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","<span class=\"c\">///import baidu.lang.isArray;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#19968;&#20010;&#21464;&#37327;&#36716;&#25442;&#25104;array</span>","<span class=\"c\"> * @name baidu.lang.toArray</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.lang.toArray(source)</span>","<span class=\"c\"> * @param {mix} source &#38656;&#35201;&#36716;&#25442;&#25104;array&#30340;&#21464;&#37327;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {array} &#36716;&#25442;&#21518;&#30340;array</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>toArray <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>source <span class=\"k\">===</span> <span class=\"k\">null</span> <span class=\"k\">||</span> source <span class=\"k\">===</span> undefined<span class=\"k\">)</span>","        <span class=\"k\">return</span> <span class=\"k\">[];</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isArray<span class=\"k\">(</span>source<span class=\"k\">))</span>","        <span class=\"k\">return</span> source<span class=\"k\">;</span>","","    <span class=\"c\">// The strings and functions also have 'length'</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> source<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">'number'</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> source <span class=\"k\">===</span> <span class=\"s\">'string'</span> <span class=\"k\">||</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>source<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">[</span>source<span class=\"k\">];</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//nodeList, IE &#19979;&#35843;&#29992; [].slice.call(nodeList) &#20250;&#25253;&#38169;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> l <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">,</span> array <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span>l<span class=\"k\">);</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>l<span class=\"k\">--)</span>","            array<span class=\"k\">[</span>l<span class=\"k\">]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span>l<span class=\"k\">];</span>","        <span class=\"k\">return</span> array<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">[].</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/_instances.js'] && (_$jscoverage['baidu/lang/_instances.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/_instances.js</span>","<span class=\"c\"> * author: meizz, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang;</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25152;&#26377;&#31867;&#30340;&#23454;&#20363;&#30340;&#23481;&#22120;</span>","<span class=\"c\"> * key&#20026;&#27599;&#20010;&#23454;&#20363;&#30340;guid</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","","window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>_instances <span class=\"k\">=</span> window<span class=\"k\">[</span>baidu<span class=\"k\">.</span>guid<span class=\"k\">].</span>_instances <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"c\">//\t[TODO]\tmeizz\t&#22312;2012&#24180;&#29256;&#26412;&#20013;&#23558;&#21024;&#38500;&#27492;&#27169;&#22359;</span>"]);
_$jscoverage['baidu/lang/Class/$addEventListeners.js'] && (_$jscoverage['baidu/lang/Class/$addEventListeners.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/Class/addEventListeners.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0</span>","<span class=\"c\"> * date: 2010-07-05</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang.Event;</span>","<span class=\"c\">///import baidu.string.trim;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#28155;&#21152;&#22810;&#20010;&#33258;&#23450;&#20041;&#20107;&#20214;&#12290;</span>","<span class=\"c\"> * @grammar obj.addEventListeners(events, fn)</span>","<span class=\"c\"> * @param \t{object}   events       json&#23545;&#35937;&#65292;key&#20026;&#20107;&#20214;&#21517;&#31216;&#65292;value&#20026;&#20107;&#20214;&#34987;&#35302;&#21457;&#26102;&#24212;&#35813;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\"> * @param \t{Function} fn\t        &#35201;&#25346;&#36733;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> */</span>","<span class=\"c\">/* addEventListeners(\"onmyevent,onmyotherevent\", fn);</span>","<span class=\"c\"> * addEventListeners({</span>","<span class=\"c\"> *      \"onmyevent\"         : fn,</span>","<span class=\"c\"> *      \"onmyotherevent\"    : fn1</span>","<span class=\"c\"> * });</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addEventListeners <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>events<span class=\"k\">,</span> fn<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> fn <span class=\"k\">==</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> events<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>i<span class=\"k\">,</span> events<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","        events <span class=\"k\">=</span> events<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> events<span class=\"k\">.</span>length<span class=\"k\">,</span> event<span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>baidu<span class=\"k\">.</span>trim<span class=\"k\">(</span>events<span class=\"k\">[</span>i<span class=\"k\">]),</span> fn<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/lang/Class/$removeEventListener.js'] && (_$jscoverage['baidu/lang/Class/$removeEventListener.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/lang/Class/removeEventListener.js</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * version: 1.6.0</span>","<span class=\"c\"> * date: 2011/11/23</span>","<span class=\"c\"> * modify: 2011/11/23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.lang.Class;</span>",""," ","<span class=\"c\">/**</span>","<span class=\"c\"> * &#31227;&#38500;&#23545;&#35937;&#30340;&#20107;&#20214;&#30417;&#21548;&#22120;&#12290;&#24341;&#20837;baidu.lang.Event&#21518;&#65292;Class&#30340;&#23376;&#31867;&#23454;&#20363;&#25165;&#20250;&#33719;&#24471;&#35813;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * &#20107;&#20214;&#31227;&#38500;&#25805;&#20316;&#26159;&#19968;&#20010;&#19981;&#24120;&#29992;&#30340;&#26041;&#27861;&#65292;&#22914;&#26524;&#20320;&#26377;&#38656;&#27714;&#20877;import&#35843;&#20837;&#65292;&#21487;&#20197;&#33410;&#32422;&#20195;&#30721;</span>","<span class=\"c\"> * &#21487;&#33021;&#36890;&#36807;&#21442;&#25968;&#36208;&#19981;&#21516;&#30340;&#20998;&#25903;&#65306;&#19981;&#20256;handler&#20250;&#31227;&#38500;&#26576;&#31867;&#20107;&#20214;&#30417;&#21548;&#65307;&#22914;&#26524;&#36830;type&#37117;&#19981;&#20256;&#37027;&#23601;&#31227;&#38500;&#24403;&#21069;&#23454;&#20363;&#30340;&#20840;&#37096;&#20107;&#20214;&#30417;&#21548;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @grammar obj.removeEventListener(type, handler)</span>","<span class=\"c\"> * @param {string}   type     &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param {Function} handler  &#35201;&#31227;&#38500;&#30340;&#20107;&#20214;&#30417;&#21548;&#20989;&#25968;&#25110;&#32773;&#30417;&#21548;&#20989;&#25968;&#30340;key</span>","<span class=\"c\"> * @remark \t&#22914;&#26524;&#31532;&#20108;&#20010;&#21442;&#25968;handler&#27809;&#26377;&#34987;&#32465;&#23450;&#21040;&#23545;&#24212;&#30340;&#33258;&#23450;&#20041;&#20107;&#20214;&#20013;&#65292;&#20160;&#20040;&#20063;&#19981;&#20570;&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>un <span class=\"k\">=</span>","baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>Class<span class=\"k\">.</span>prototype<span class=\"k\">.</span>removeEventListener <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> handler<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i<span class=\"k\">,</span>","        t <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__listeners<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>t<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"c\">// remove all event listener</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> type <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> t<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">delete</span> t<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    type<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"on\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>type <span class=\"k\">=</span> <span class=\"s\">\"on\"</span> <span class=\"k\">+</span> type<span class=\"k\">);</span>","","    <span class=\"c\">// &#31227;&#38500;&#26576;&#31867;&#20107;&#20214;&#30417;&#21548;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> handler <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">delete</span> t<span class=\"k\">[</span>type<span class=\"k\">];</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>t<span class=\"k\">[</span>type<span class=\"k\">])</span> <span class=\"k\">{</span>","        <span class=\"c\">// [TODO delete 2013] &#25903;&#25345;&#25353; key &#21024;&#38500;&#27880;&#20876;&#30340;&#20989;&#25968;</span>","        <span class=\"k\">typeof</span> handler<span class=\"k\">==</span><span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>handler<span class=\"k\">=</span>t<span class=\"k\">[</span>type<span class=\"k\">][</span>handler<span class=\"k\">])</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">delete</span> t<span class=\"k\">[</span>type<span class=\"k\">][</span>handler<span class=\"k\">];</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> t<span class=\"k\">[</span>type<span class=\"k\">].</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>t<span class=\"k\">[</span>type<span class=\"k\">][</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> handler<span class=\"k\">)</span> <span class=\"k\">{</span>","                t<span class=\"k\">[</span>type<span class=\"k\">].</span>splice<span class=\"k\">(</span>i<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// 2011.12.19 meizz &#20026;&#20860;&#23481;&#32769;&#29256;&#26412;&#30340;&#25353; key &#21024;&#38500;&#65292;&#28155;&#21152;&#20102;&#19968;&#34892;&#20195;&#30721;</span>"]);
_$jscoverage['baidu/number/comma.js'] && (_$jscoverage['baidu/number/comma.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/number/comma.js</span>","<span class=\"c\"> * author: dron, erik, berg</span>","<span class=\"c\"> * version: 1.2.0</span>","<span class=\"c\"> * date: 2010/09/07 </span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.number;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#25968;&#23383;&#28155;&#21152;&#36887;&#21495;&#20998;&#38548;</span>","<span class=\"c\"> * @name baidu.number.comma</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.number.comma(source[, length])</span>","<span class=\"c\"> * @param {number} source &#38656;&#35201;&#22788;&#29702;&#30340;&#25968;&#23383;</span>","<span class=\"c\"> * @param {number} [length] &#20004;&#27425;&#36887;&#21495;&#20043;&#38388;&#30340;&#25968;&#23383;&#20301;&#25968;&#65292;&#40664;&#35748;&#20026;3&#20301;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#28155;&#21152;&#36887;&#21495;&#20998;&#38548;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>number<span class=\"k\">.</span>comma <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> length<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>length <span class=\"k\">||</span> length <span class=\"k\">&lt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        length <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    source <span class=\"k\">=</span> String<span class=\"k\">(</span>source<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span>","    source<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'(</span><span class=\"t\">\\\\</span><span class=\"s\">d)(?=(</span><span class=\"t\">\\\\</span><span class=\"s\">d{'</span><span class=\"k\">+</span>length<span class=\"k\">+</span><span class=\"s\">'})+$)'</span><span class=\"k\">,</span><span class=\"s\">'ig'</span><span class=\"k\">),</span><span class=\"s\">\"$1,\"</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> source<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/number/pad.js'] && (_$jscoverage['baidu/number/pad.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/number/pad.js</span>","<span class=\"c\"> * author: dron, erik, berg</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 20100412</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.number;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#25968;&#23383;&#36827;&#34892;0&#34917;&#40784;&#22788;&#29702;</span>","<span class=\"c\"> * @name baidu.number.pad</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.number.pad(source, length)</span>","<span class=\"c\"> * @param {number} source &#38656;&#35201;&#22788;&#29702;&#30340;&#25968;&#23383;</span>","<span class=\"c\"> * @param {number} length &#38656;&#35201;&#36755;&#20986;&#30340;&#38271;&#24230;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#23545;&#30446;&#26631;&#25968;&#23383;&#36827;&#34892;0&#34917;&#40784;&#22788;&#29702;&#21518;&#30340;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>number<span class=\"k\">.</span>pad <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> length<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> pre <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        negative <span class=\"k\">=</span> <span class=\"k\">(</span>source <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">),</span>","        string <span class=\"k\">=</span> String<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>source<span class=\"k\">));</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>string<span class=\"k\">.</span>length <span class=\"k\">&lt;</span> length<span class=\"k\">)</span> <span class=\"k\">{</span>","        pre <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">new</span> Array<span class=\"k\">(</span>length <span class=\"k\">-</span> string<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)).</span>join<span class=\"k\">(</span><span class=\"s\">'0'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">(</span>negative <span class=\"k\">?</span>  <span class=\"s\">\"-\"</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> pre <span class=\"k\">+</span> string<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/number/randomInt.js'] && (_$jscoverage['baidu/number/randomInt.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/number/randomInt.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/12/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.number;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#29983;&#25104;&#38543;&#26426;&#25972;&#25968;&#65292;&#33539;&#22260;&#26159;[min, max]</span>","<span class=\"c\"> * @name baidu.number.randomInt</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.number.randomInt(min, max) </span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param \t{number} min \t&#38543;&#26426;&#25972;&#25968;&#30340;&#26368;&#23567;&#20540;</span>","<span class=\"c\"> * @param \t{number} max \t&#38543;&#26426;&#25972;&#25968;&#30340;&#26368;&#22823;&#20540;</span>","<span class=\"c\"> * @return \t{number} \t\t&#29983;&#25104;&#30340;&#38543;&#26426;&#25972;&#25968;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>number<span class=\"k\">.</span>randomInt <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>min<span class=\"k\">,</span> max<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">return</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">*</span> <span class=\"k\">(</span>max <span class=\"k\">-</span> min <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">+</span> min<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/clone.js'] && (_$jscoverage['baidu/object/clone.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","<span class=\"c\">///import baidu.lang.isArray;</span>","<span class=\"c\">///import baidu.object.isPlain;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#19968;&#20010;object&#36827;&#34892;&#28145;&#24230;&#25335;&#36125;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> * @name baidu.object.clone</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.clone(source)</span>","<span class=\"c\"> * @param {Object} source &#38656;&#35201;&#36827;&#34892;&#25335;&#36125;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#23545;&#20110;Object&#26469;&#35828;&#65292;&#21482;&#25335;&#36125;&#33258;&#36523;&#25104;&#21592;&#65292;&#19981;&#25335;&#36125;prototype&#25104;&#21592;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#25335;&#36125;&#21518;&#30340;&#26032;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>clone  <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> source<span class=\"k\">,</span> i<span class=\"k\">,</span> len<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>source","        <span class=\"k\">||</span> source <span class=\"k\">instanceof</span> Number","        <span class=\"k\">||</span> source <span class=\"k\">instanceof</span> String","        <span class=\"k\">||</span> source <span class=\"k\">instanceof</span> Boolean<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isArray<span class=\"k\">(</span>source<span class=\"k\">))</span> <span class=\"k\">{</span>","        result <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">var</span> resultLen <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> source<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            result<span class=\"k\">[</span>resultLen<span class=\"k\">++]</span> <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>clone<span class=\"k\">(</span>source<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>isPlain<span class=\"k\">(</span>source<span class=\"k\">))</span> <span class=\"k\">{</span>","        result <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","                result<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>clone<span class=\"k\">(</span>source<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/each.js'] && (_$jscoverage['baidu/object/each.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/object/each.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.1.1</span>","<span class=\"c\"> * date: 2010-04-19</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36941;&#21382;Object&#20013;&#25152;&#26377;&#20803;&#32032;&#65292;1.1.1&#22686;&#21152;</span>","<span class=\"c\"> * @name baidu.object.each</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.each(source, iterator)</span>","<span class=\"c\"> * @param {Object} source &#38656;&#35201;&#36941;&#21382;&#30340;Object</span>","<span class=\"c\"> * @param {Function} iterator &#23545;&#27599;&#20010;Object&#20803;&#32032;&#36827;&#34892;&#35843;&#29992;&#30340;&#20989;&#25968;&#65292;function (item, key)</span>","<span class=\"c\"> * @version 1.1.1</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#36941;&#21382;&#30340;Object</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>each <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> returnValue<span class=\"k\">,</span> key<span class=\"k\">,</span> item<span class=\"k\">;</span> ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'function'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","                item <span class=\"k\">=</span> source<span class=\"k\">[</span>key<span class=\"k\">];</span>","                returnValue <span class=\"k\">=</span> iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>source<span class=\"k\">,</span> item<span class=\"k\">,</span> key<span class=\"k\">);</span>","        ","                <span class=\"k\">if</span> <span class=\"k\">(</span>returnValue <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/extend.js'] && (_$jscoverage['baidu/object/extend.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#28304;&#23545;&#35937;&#30340;&#25152;&#26377;&#23646;&#24615;&#25335;&#36125;&#21040;&#30446;&#26631;&#23545;&#35937;&#20013;</span>","<span class=\"c\"> * @author erik</span>","<span class=\"c\"> * @name baidu.object.extend</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.extend(target, source)</span>","<span class=\"c\"> * @param {Object} target &#30446;&#26631;&#23545;&#35937;</span>","<span class=\"c\"> * @param {Object} source &#28304;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.array.merge</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">1.&#30446;&#26631;&#23545;&#35937;&#20013;&#65292;&#19982;&#28304;&#23545;&#35937;key&#30456;&#21516;&#30340;&#25104;&#21592;&#23558;&#20250;&#34987;&#35206;&#30422;&#12290;&lt;br&gt;</span>","<span class=\"c\">2.&#28304;&#23545;&#35937;&#30340;prototype&#25104;&#21592;&#19981;&#20250;&#25335;&#36125;&#12290;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @shortcut extend</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} &#30446;&#26631;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>extend <span class=\"k\">=</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>extend <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>target<span class=\"k\">,</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>p<span class=\"k\">))</span> <span class=\"k\">{</span>","            target<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span>p<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> target<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/isEmpty.js'] && (_$jscoverage['baidu/object/isEmpty.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * tangram</span>","<span class=\"c\"> * copyright 2011 baidu inc. all rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/object/isEmpty.js</span>","<span class=\"c\"> * author: leeight</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2011/04/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26816;&#27979;&#19968;&#20010;&#23545;&#35937;&#26159;&#21542;&#26159;&#31354;&#30340;&#65292;&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65306;&#22914;&#26524;&#27745;&#26579;&#20102;Object.prototype&#25110;&#32773;Array.prototype&#65292;&#37027;&#20040;baidu.object.isEmpty({})&#25110;&#32773;baidu.object.isEmpty([])&#21487;&#33021;&#36820;&#22238;&#30340;&#23601;&#26159;false.</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.isEmpty(obj)</span>","<span class=\"c\"> * @param {Object} obj &#38656;&#35201;&#26816;&#27979;&#30340;&#23545;&#35937;.</span>","<span class=\"c\"> * @return {boolean} &#22914;&#26524;&#26159;&#31354;&#30340;&#23545;&#35937;&#23601;&#36820;&#22238;true.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>isEmpty <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/isPlain.js'] && (_$jscoverage['baidu/object/isPlain.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","<span class=\"c\">///import baidu.lang.isArray;</span>","<span class=\"c\">///import baidu.lang.isObject;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#19968;&#20010;&#23545;&#35937;&#26159;&#19981;&#26159;&#23383;&#38754;&#37327;&#23545;&#35937;&#65292;&#21363;&#21028;&#26029;&#36825;&#20010;&#23545;&#35937;&#26159;&#19981;&#26159;&#30001;{}&#25110;&#32773;new Object&#31867;&#20284;&#26041;&#24335;&#21019;&#24314;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @name baidu.object.isPlain</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.isPlain(source)</span>","<span class=\"c\"> * @param {Object} source &#38656;&#35201;&#26816;&#26597;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#20107;&#23454;&#19978;&#26469;&#35828;&#65292;&#22312;Javascript&#35821;&#35328;&#20013;&#65292;&#20219;&#20309;&#21028;&#26029;&#37117;&#19968;&#23450;&#20250;&#26377;&#28431;&#27934;&#65292;&#22240;&#27492;&#26412;&#26041;&#27861;&#21482;&#38024;&#23545;&#19968;&#20123;&#26368;&#24120;&#29992;&#30340;&#24773;&#20917;&#36827;&#34892;&#20102;&#21028;&#26029;</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Boolean} &#26816;&#26597;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>isPlain  <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> hasOwnProperty <span class=\"k\">=</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">,</span>","        key<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>obj <span class=\"k\">||</span>","         <span class=\"c\">//&#19968;&#33324;&#30340;&#24773;&#20917;&#65292;&#30452;&#25509;&#29992;toString&#21028;&#26029;</span>","         Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"[object Object]\"</span> <span class=\"k\">||</span>","         <span class=\"c\">//IE&#19979;&#65292;window/document/document.body/HTMLElement/HTMLCollection/NodeList&#31561;DOM&#23545;&#35937;&#19978;&#19968;&#20010;&#35821;&#21477;&#20026;true</span>","         <span class=\"c\">//isPrototypeOf&#25346;&#22312;Object.prototype&#19978;&#30340;&#65292;&#22240;&#27492;&#25152;&#26377;&#30340;&#23383;&#38754;&#37327;&#37117;&#24212;&#35813;&#20250;&#26377;&#36825;&#20010;&#23646;&#24615;</span>","         <span class=\"c\">//&#23545;&#20110;&#22312;window&#19978;&#25346;&#20102;isPrototypeOf&#23646;&#24615;&#30340;&#24773;&#20917;&#65292;&#30452;&#25509;&#24573;&#30053;&#19981;&#32771;&#34385;</span>","         <span class=\"k\">!(</span><span class=\"s\">'isPrototypeOf'</span> <span class=\"k\">in</span> obj<span class=\"k\">)</span>","       <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#21028;&#26029;new fun()&#33258;&#23450;&#20041;&#23545;&#35937;&#30340;&#24773;&#20917;</span>","    <span class=\"c\">//constructor&#19981;&#26159;&#32487;&#25215;&#33258;&#21407;&#22411;&#38142;&#30340;</span>","    <span class=\"c\">//&#24182;&#19988;&#21407;&#22411;&#20013;&#26377;isPrototypeOf&#26041;&#27861;&#25165;&#26159;Object</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> obj<span class=\"k\">.</span>constructor <span class=\"k\">&amp;&amp;</span>","        <span class=\"k\">!</span>hasOwnProperty<span class=\"k\">.</span>call<span class=\"k\">(</span>obj<span class=\"k\">,</span> <span class=\"s\">\"constructor\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","        <span class=\"k\">!</span>hasOwnProperty<span class=\"k\">.</span>call<span class=\"k\">(</span>obj<span class=\"k\">.</span>constructor<span class=\"k\">.</span>prototype<span class=\"k\">,</span> <span class=\"s\">\"isPrototypeOf\"</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"c\">//&#21028;&#26029;&#26377;&#32487;&#25215;&#30340;&#24773;&#20917;</span>","    <span class=\"c\">//&#22914;&#26524;&#26377;&#19968;&#39033;&#26159;&#32487;&#25215;&#36807;&#26469;&#30340;&#65292;&#37027;&#20040;&#19968;&#23450;&#19981;&#26159;&#23383;&#38754;&#37327;Object</span>","    <span class=\"c\">//OwnProperty&#20250;&#39318;&#20808;&#34987;&#36941;&#21382;&#65292;&#20026;&#20102;&#21152;&#36895;&#36941;&#21382;&#36807;&#31243;&#65292;&#30452;&#25509;&#30475;&#26368;&#21518;&#19968;&#39033;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span> key <span class=\"k\">in</span> obj <span class=\"k\">)</span> <span class=\"k\">{}</span>","    <span class=\"k\">return</span> key <span class=\"k\">===</span> undefined <span class=\"k\">||</span> hasOwnProperty<span class=\"k\">.</span>call<span class=\"k\">(</span> obj<span class=\"k\">,</span> key <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/keys.js'] && (_$jscoverage['baidu/object/keys.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/object/keys.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#23545;&#35937;&#30340;&#38190;&#21517;&#21015;&#34920;</span>","<span class=\"c\"> * @name baidu.object.keys</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.keys(source)</span>","<span class=\"c\"> * @param {Object} source &#30446;&#26631;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.object.values</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#38190;&#21517;&#21015;&#34920;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>keys <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span> resultLen <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> k<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","            result<span class=\"k\">[</span>resultLen<span class=\"k\">++]</span> <span class=\"k\">=</span> k<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/map.js'] && (_$jscoverage['baidu/object/map.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/object/map.js</span>","<span class=\"c\"> * author: berg</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/12/14</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36941;&#21382;object&#20013;&#25152;&#26377;&#20803;&#32032;&#65292;&#23558;&#27599;&#19968;&#20010;&#20803;&#32032;&#24212;&#29992;&#26041;&#27861;&#36827;&#34892;&#36716;&#25442;&#65292;&#36820;&#22238;&#36716;&#25442;&#21518;&#30340;&#26032;object&#12290;</span>","<span class=\"c\"> * @name baidu.object.map</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.map(source, iterator)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param \t{Array}    source   &#38656;&#35201;&#36941;&#21382;&#30340;object</span>","<span class=\"c\"> * @param \t{Function} iterator &#23545;&#27599;&#20010;object&#20803;&#32032;&#36827;&#34892;&#22788;&#29702;&#30340;&#20989;&#25968;</span>","<span class=\"c\"> * @return \t{Array} \t\t\tmap&#21518;&#30340;object</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>map <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> results <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","            results<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> iterator<span class=\"k\">(</span>source<span class=\"k\">[</span>key<span class=\"k\">],</span> key<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> results<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/object/merge.js'] && (_$jscoverage['baidu/object/merge.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","<span class=\"c\">///import baidu.lang.isObject;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","","<span class=\"c\">/*</span>","<span class=\"c\"> * &#40664;&#35748;&#24773;&#20917;&#19979;&#65292;&#25152;&#26377;&#22312;&#28304;&#23545;&#35937;&#19978;&#30340;&#23646;&#24615;&#37117;&#20250;&#34987;&#38750;&#36882;&#24402;&#22320;&#21512;&#24182;&#21040;&#30446;&#26631;&#23545;&#35937;&#19978;</span>","<span class=\"c\"> * &#24182;&#19988;&#22914;&#26524;&#30446;&#26631;&#23545;&#35937;&#19978;&#24050;&#26377;&#27492;&#23646;&#24615;&#65292;&#19981;&#20250;&#34987;&#35206;&#30422;</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21512;&#24182;&#28304;&#23545;&#35937;&#30340;&#23646;&#24615;&#21040;&#30446;&#26631;&#23545;&#35937;&#12290;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name baidu.object.merge</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.merge(target, source[, opt_options])</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Function} target &#30446;&#26631;&#23545;&#35937;.</span>","<span class=\"c\"> * @param {Function} source &#28304;&#23545;&#35937;.</span>","<span class=\"c\"> * @param {Object} opt_options optional merge&#36873;&#39033;.</span>","<span class=\"c\"> * @config {boolean} overwrite optional &#22914;&#26524;&#20026;&#30495;&#65292;&#28304;&#23545;&#35937;&#23646;&#24615;&#20250;&#35206;&#30422;&#25481;&#30446;&#26631;&#23545;&#35937;&#19978;&#30340;&#24050;&#26377;&#23646;&#24615;&#65292;&#40664;&#35748;&#20026;&#20551;.</span>","<span class=\"c\"> * @config {string[]} whiteList optional &#30333;&#21517;&#21333;&#65292;&#40664;&#35748;&#20026;&#31354;&#65292;&#22914;&#26524;&#23384;&#22312;&#65292;&#21482;&#26377;&#22312;&#36825;&#37324;&#30340;&#23646;&#24615;&#25165;&#20250;&#34987;&#22788;&#29702;.</span>","<span class=\"c\"> * @config {boolean} recursive optional &#26159;&#21542;&#36882;&#24402;&#21512;&#24182;&#23545;&#35937;&#37324;&#38754;&#30340;object&#65292;&#40664;&#35748;&#20026;&#21542;.</span>","<span class=\"c\"> * @return {object} merge&#21518;&#30340;object.</span>","<span class=\"c\"> * @see baidu.object.extend</span>","<span class=\"c\"> * @author berg</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","<span class=\"k\">var</span> isPlainObject <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isObject<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>source<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> mergeItem<span class=\"k\">(</span>target<span class=\"k\">,</span> source<span class=\"k\">,</span> index<span class=\"k\">,</span> overwrite<span class=\"k\">,</span> recursive<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>index<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>recursive <span class=\"k\">&amp;&amp;</span> isPlainObject<span class=\"k\">(</span>target<span class=\"k\">[</span>index<span class=\"k\">]))</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#22914;&#26524;&#38656;&#35201;&#36882;&#24402;&#35206;&#30422;&#65292;&#23601;&#36882;&#24402;&#35843;&#29992;merge</span>","            baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>merge<span class=\"k\">(</span>","                target<span class=\"k\">[</span>index<span class=\"k\">],</span>","                source<span class=\"k\">[</span>index<span class=\"k\">],</span>","                <span class=\"k\">{</span>","                    <span class=\"s\">'overwrite'</span><span class=\"k\">:</span> overwrite<span class=\"k\">,</span>","                    <span class=\"s\">'recursive'</span><span class=\"k\">:</span> recursive","                <span class=\"k\">}</span>","            <span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>overwrite <span class=\"k\">||</span> <span class=\"k\">!(</span>index <span class=\"k\">in</span> target<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#21542;&#21017;&#21482;&#22788;&#29702;overwrite&#20026;true&#65292;&#25110;&#32773;&#22312;&#30446;&#26631;&#23545;&#35937;&#20013;&#27809;&#26377;&#27492;&#23646;&#24615;&#30340;&#24773;&#20917;</span>","            target<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span>index<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>merge <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>target<span class=\"k\">,</span> source<span class=\"k\">,</span> opt_options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        options <span class=\"k\">=</span> opt_options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        overwrite <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'overwrite'</span><span class=\"k\">],</span>","        whiteList <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'whiteList'</span><span class=\"k\">],</span>","        recursive <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'recursive'</span><span class=\"k\">],</span>","        len<span class=\"k\">;</span>","","    <span class=\"c\">// &#21482;&#22788;&#29702;&#22312;&#30333;&#21517;&#21333;&#20013;&#30340;&#23646;&#24615;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>whiteList <span class=\"k\">&amp;&amp;</span> whiteList<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","        len <span class=\"k\">=</span> whiteList<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","            mergeItem<span class=\"k\">(</span>target<span class=\"k\">,</span> source<span class=\"k\">,</span> whiteList<span class=\"k\">[</span>i<span class=\"k\">],</span> overwrite<span class=\"k\">,</span> recursive<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","            mergeItem<span class=\"k\">(</span>target<span class=\"k\">,</span> source<span class=\"k\">,</span> i<span class=\"k\">,</span> overwrite<span class=\"k\">,</span> recursive<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> target<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/object/values.js'] && (_$jscoverage['baidu/object/values.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/object/values.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.object;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#23545;&#35937;&#30340;&#20540;&#21015;&#34920;</span>","<span class=\"c\"> * @name baidu.object.values</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.object.values(source)</span>","<span class=\"c\"> * @param {Object} source &#30446;&#26631;&#23545;&#35937;</span>","<span class=\"c\"> * @see baidu.object.keys</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Array} &#20540;&#21015;&#34920;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>values <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span> resultLen <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> k<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","            result<span class=\"k\">[</span>resultLen<span class=\"k\">++]</span> <span class=\"k\">=</span> source<span class=\"k\">[</span>k<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/createStyleSheet.js'] && (_$jscoverage['baidu/page/createStyleSheet.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author: meizz</span>","<span class=\"c\"> * @namespace: baidu.page.createStyleSheet</span>","<span class=\"c\"> * @version: 2010-06-12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.dom.insertHTML;</span>","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#22312;&#39029;&#38754;&#20013;&#21019;&#24314;&#26679;&#24335;&#34920;&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.page.createStyleSheet</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.createStyleSheet(options)</span>","<span class=\"c\"> * @param {Object} options &#37197;&#32622;&#20449;&#24687;</span>","<span class=\"c\">                </span>","<span class=\"c\"> * @param {Document} options.document &#25351;&#23450;&#22312;&#21738;&#20010;document&#19979;&#21019;&#24314;&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#25991;&#26723;</span>","<span class=\"c\"> * @param {String} options.url css&#25991;&#20214;&#30340;URL</span>","<span class=\"c\"> * @param {Number} options.index &#22312;&#25991;&#26723;&#37324;&#30340;&#25490;&#24207;&#32034;&#24341;&#65288;&#27880;&#24847;&#65292;&#20165;IE&#19979;&#26377;&#25928;&#65289;</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> *  ie &#19979;&#36820;&#22238;&#20540;styleSheet&#30340;addRule&#26041;&#27861;&#19981;&#25903;&#25345;&#28155;&#21152;&#36887;&#21495;&#20998;&#38548;&#30340;css rule.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @see baidu.page.createStyleSheet.StyleSheet</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {baidu.page.createStyleSheet.StyleSheet} styleSheet&#23545;&#35937;(&#27880;&#24847;: &#20165;IE&#19979;,&#20854;&#20182;&#27983;&#35272;&#22120;&#22343;&#36820;&#22238;null)</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>createStyleSheet <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> op <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        doc <span class=\"k\">=</span> op<span class=\"k\">.</span>document <span class=\"k\">||</span> document<span class=\"k\">,</span>","        s<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">//&#20462;&#22797;ie&#19979;&#20250;&#35831;&#27714;&#19968;&#20010;undefined&#30340;bug  berg 2010/08/27 </span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>op<span class=\"k\">.</span>url<span class=\"k\">)</span>","            op<span class=\"k\">.</span>url <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> doc<span class=\"k\">.</span>createStyleSheet<span class=\"k\">(</span>op<span class=\"k\">.</span>url<span class=\"k\">,</span> op<span class=\"k\">.</span>index<span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        s <span class=\"k\">=</span> <span class=\"s\">\"&lt;style type='text/css'&gt;&lt;/style&gt;\"</span><span class=\"k\">;</span>","        op<span class=\"k\">.</span>url <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>s<span class=\"k\">=</span><span class=\"s\">\"&lt;link type='text/css' rel='stylesheet' href='\"</span><span class=\"k\">+</span>op<span class=\"k\">.</span>url<span class=\"k\">+</span><span class=\"s\">\"'/&gt;\"</span><span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertHTML<span class=\"k\">(</span>doc<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"HEAD\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span><span class=\"s\">\"beforeEnd\"</span><span class=\"k\">,</span>s<span class=\"k\">);</span>","        <span class=\"c\">//&#22914;&#26524;&#29992;&#25143;&#20256;&#20837;&#20102;url&#21442;&#25968;&#65292;&#19979;&#38754;&#35775;&#38382;sheet.rules&#30340;&#26102;&#20505;&#20250;&#25253;&#38169;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>op<span class=\"k\">.</span>url<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> sheet <span class=\"k\">=</span> doc<span class=\"k\">.</span>styleSheets<span class=\"k\">[</span>doc<span class=\"k\">.</span>styleSheets<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">],</span>","            rules <span class=\"k\">=</span> sheet<span class=\"k\">.</span>rules <span class=\"k\">||</span> sheet<span class=\"k\">.</span>cssRules<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            self <span class=\"k\">:</span> sheet","            <span class=\"k\">,</span>rules <span class=\"k\">:</span> sheet<span class=\"k\">.</span>rules <span class=\"k\">||</span> sheet<span class=\"k\">.</span>cssRules","            <span class=\"k\">,</span>addRule <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>selector<span class=\"k\">,</span> style<span class=\"k\">,</span> i<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>sheet<span class=\"k\">.</span>addRule<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> sheet<span class=\"k\">.</span>addRule<span class=\"k\">(</span>selector<span class=\"k\">,</span> style<span class=\"k\">,</span> i<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>sheet<span class=\"k\">.</span>insertRule<span class=\"k\">)</span> <span class=\"k\">{</span>","                    isNaN<span class=\"k\">(</span>i<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> rules<span class=\"k\">.</span>length<span class=\"k\">);</span>","                    <span class=\"k\">return</span> sheet<span class=\"k\">.</span>insertRule<span class=\"k\">(</span>selector <span class=\"k\">+</span><span class=\"s\">\"{\"</span><span class=\"k\">+</span> style <span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">,</span> i<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">,</span>removeRule <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>sheet<span class=\"k\">.</span>removeRule<span class=\"k\">)</span> <span class=\"k\">{</span>","                    sheet<span class=\"k\">.</span>removeRule<span class=\"k\">(</span>i<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>sheet<span class=\"k\">.</span>deleteRule<span class=\"k\">)</span> <span class=\"k\">{</span>","                    isNaN<span class=\"k\">(</span>i<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">);</span>","                    sheet<span class=\"k\">.</span>deleteRule<span class=\"k\">(</span>i<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/*</span>","<span class=\"c\"> * styleSheet&#23545;&#35937; &#26377;&#20004;&#20010;&#26041;&#27861; </span>","<span class=\"c\"> *  addRule(selector, style, i)</span>","<span class=\"c\"> *  removeRule(i)</span>","<span class=\"c\"> *  &#36825;&#20004;&#20010;&#26041;&#27861;&#24050;&#32463;&#20570;&#20102;&#27983;&#35272;&#22120;&#20860;&#23481;&#22788;&#29702;</span>","<span class=\"c\"> * &#19968;&#20010;&#38598;&#21512;</span>","<span class=\"c\"> *  rules</span>","<span class=\"c\"> */</span>"]);
_$jscoverage['baidu/page/getHeight.js'] && (_$jscoverage['baidu/page/getHeight.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getHeight.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/03</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#39029;&#38754;&#39640;&#24230;</span>","<span class=\"c\"> * @name baidu.page.getHeight</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getHeight()</span>","<span class=\"c\"> * @see baidu.page.getWidth</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#39029;&#38754;&#39640;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getHeight <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> document<span class=\"k\">,</span>","        body <span class=\"k\">=</span> doc<span class=\"k\">.</span>body<span class=\"k\">,</span>","        html <span class=\"k\">=</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>","        client <span class=\"k\">=</span> doc<span class=\"k\">.</span>compatMode <span class=\"k\">==</span> <span class=\"s\">'BackCompat'</span> <span class=\"k\">?</span> body <span class=\"k\">:</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","    <span class=\"k\">return</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>html<span class=\"k\">.</span>scrollHeight<span class=\"k\">,</span> body<span class=\"k\">.</span>scrollHeight<span class=\"k\">,</span> client<span class=\"k\">.</span>clientHeight<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/getMousePosition.js'] && (_$jscoverage['baidu/page/getMousePosition.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#24471;&#39029;&#38754;&#37324;&#30340;&#30446;&#21069;&#40736;&#26631;&#25152;&#22312;&#30340;&#22352;&#26631;</span>","<span class=\"c\"> * @name baidu.page.getMousePosition</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getMousePosition()</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {object} &#40736;&#26631;&#22352;&#26631;&#20540;{x:[Number], y:[Number]}</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getMousePosition.js</span>","<span class=\"c\"> * author: meizz</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2010/06/02</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.page.getScrollTop;</span>","<span class=\"c\">///import baidu.page.getScrollLeft;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21462;&#24471;&#24403;&#21069;&#39029;&#38754;&#37324;&#30340;&#30446;&#21069;&#40736;&#26631;&#25152;&#22312;&#30340;&#22352;&#26631;&#65288;x y&#65289;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return  {JSON}  &#24403;&#21069;&#40736;&#26631;&#30340;&#22352;&#26631;&#20540;({x, y})</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>",""," baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getMousePosition <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>"," <span class=\"k\">return</span> <span class=\"k\">{</span>","x <span class=\"k\">:</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollLeft<span class=\"k\">()</span> <span class=\"k\">+</span> xy<span class=\"k\">.</span>x<span class=\"k\">,</span>","y <span class=\"k\">:</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollTop<span class=\"k\">()</span> <span class=\"k\">+</span> xy<span class=\"k\">.</span>y","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> xy <span class=\"k\">=</span> <span class=\"k\">{</span>x<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span> y<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">// &#30417;&#21548;&#24403;&#21069;&#32593;&#39029;&#30340; mousemove &#20107;&#20214;&#20197;&#33719;&#24471;&#40736;&#26631;&#30340;&#23454;&#26102;&#22352;&#26631;</span>","baidu<span class=\"k\">.</span>event<span class=\"k\">.</span>on<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">\"onmousemove\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","    e <span class=\"k\">=</span> window<span class=\"k\">.</span>event <span class=\"k\">||</span> e<span class=\"k\">;</span>","    xy<span class=\"k\">.</span>x <span class=\"k\">=</span> e<span class=\"k\">.</span>clientX<span class=\"k\">;</span>","    xy<span class=\"k\">.</span>y <span class=\"k\">=</span> e<span class=\"k\">.</span>clientY<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/page/getScrollLeft.js'] && (_$jscoverage['baidu/page/getScrollLeft.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#27178;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> * @name baidu.page.getScrollLeft</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getScrollLeft()</span>","<span class=\"c\"> * @see baidu.page.getScrollTop</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#27178;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getScrollLeft.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#27178;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @return {number} &#27178;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollLeft <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> d <span class=\"k\">=</span> document<span class=\"k\">;</span>","    <span class=\"k\">return</span> window<span class=\"k\">.</span>pageXOffset <span class=\"k\">||</span> d<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollLeft <span class=\"k\">||</span> d<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/getScrollTop.js'] && (_$jscoverage['baidu/page/getScrollTop.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getScrollTop.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#32437;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> * @name baidu.page.getScrollTop</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getScrollTop()</span>","<span class=\"c\"> * @see baidu.page.getScrollLeft</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {number} &#32437;&#21521;&#28378;&#21160;&#37327;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollTop <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> d <span class=\"k\">=</span> document<span class=\"k\">;</span>","    <span class=\"k\">return</span> window<span class=\"k\">.</span>pageYOffset <span class=\"k\">||</span> d<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>scrollTop <span class=\"k\">||</span> d<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/getViewHeight.js'] && (_$jscoverage['baidu/page/getViewHeight.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getViewHeight.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/20</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#39029;&#38754;&#35270;&#35273;&#21306;&#22495;&#39640;&#24230;</span>","<span class=\"c\"> * @name baidu.page.getViewHeight</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getViewHeight()</span>","<span class=\"c\"> * @see baidu.page.getViewWidth</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {number} &#39029;&#38754;&#35270;&#35273;&#21306;&#22495;&#39640;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getViewHeight <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> document<span class=\"k\">,</span>","        client <span class=\"k\">=</span> doc<span class=\"k\">.</span>compatMode <span class=\"k\">==</span> <span class=\"s\">'BackCompat'</span> <span class=\"k\">?</span> doc<span class=\"k\">.</span>body <span class=\"k\">:</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","    <span class=\"k\">return</span> client<span class=\"k\">.</span>clientHeight<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/getViewWidth.js'] && (_$jscoverage['baidu/page/getViewWidth.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getViewWidth.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/20</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#39029;&#38754;&#35270;&#35273;&#21306;&#22495;&#23485;&#24230;</span>","<span class=\"c\"> * @name baidu.page.getViewWidth</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getViewWidth()</span>","<span class=\"c\"> * @see baidu.page.getViewHeight</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#39029;&#38754;&#35270;&#35273;&#21306;&#22495;&#23485;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getViewWidth <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> document<span class=\"k\">,</span>","        client <span class=\"k\">=</span> doc<span class=\"k\">.</span>compatMode <span class=\"k\">==</span> <span class=\"s\">'BackCompat'</span> <span class=\"k\">?</span> doc<span class=\"k\">.</span>body <span class=\"k\">:</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","    <span class=\"k\">return</span> client<span class=\"k\">.</span>clientWidth<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/getWidth.js'] && (_$jscoverage['baidu/page/getWidth.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/getWidth.js</span>","<span class=\"c\"> * author: allstar, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/12/03</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#39029;&#38754;&#23485;&#24230;</span>","<span class=\"c\"> * @name baidu.page.getWidth</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.getWidth()</span>","<span class=\"c\"> * @see baidu.page.getHeight</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {number} &#39029;&#38754;&#23485;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getWidth <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> document<span class=\"k\">,</span>","        body <span class=\"k\">=</span> doc<span class=\"k\">.</span>body<span class=\"k\">,</span>","        html <span class=\"k\">=</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>","        client <span class=\"k\">=</span> doc<span class=\"k\">.</span>compatMode <span class=\"k\">==</span> <span class=\"s\">'BackCompat'</span> <span class=\"k\">?</span> body <span class=\"k\">:</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","    <span class=\"k\">return</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>html<span class=\"k\">.</span>scrollWidth<span class=\"k\">,</span> body<span class=\"k\">.</span>scrollWidth<span class=\"k\">,</span> client<span class=\"k\">.</span>clientWidth<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/lazyLoadImage.js'] && (_$jscoverage['baidu/page/lazyLoadImage.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page.getScrollTop;</span>","<span class=\"c\">///import baidu.page.getViewHeight;</span>","<span class=\"c\">///import baidu.dom.getPosition;</span>","<span class=\"c\">///import baidu.dom.ready;</span>","<span class=\"c\">///import baidu.dom.hasClass;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#24310;&#36831;&#21152;&#36733;&#22270;&#29255;. &#40664;&#35748;&#21482;&#21152;&#36733;&#21487;&#35265;&#39640;&#24230;&#20197;&#19978;&#30340;&#22270;&#29255;, &#38543;&#30528;&#31383;&#21475;&#28378;&#21160;&#21152;&#36733;&#21097;&#20313;&#22270;&#29255;.&#27880;&#24847;: &#20165;&#25903;&#25345;&#22402;&#30452;&#26041;&#21521;.</span>","<span class=\"c\"> * @name baidu.page.lazyLoadImage</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.lazyLoadImage([options])</span>","<span class=\"c\"> * @param {Object} options</span>","<span class=\"c\"> * @param {String} [options.className] &#24310;&#36831;&#21152;&#36733;&#30340;IMG&#30340;className,&#22914;&#26524;&#19981;&#20256;&#20837;&#35813;&#20540;&#23558;&#24310;&#36831;&#21152;&#36733;&#25152;&#26377;IMG.</span>","<span class=\"c\"> * @param {Number} [options.preloadHeight] &#39044;&#21152;&#36733;&#30340;&#39640;&#24230;, &#21487;&#35265;&#31383;&#21475;&#19979;&#35813;&#39640;&#24230;&#20869;&#30340;&#22270;&#29255;&#23558;&#34987;&#21152;&#36733;.</span>","<span class=\"c\"> * @param {String} [options.placeHolder] &#21344;&#20301;&#22270;url.</span>","<span class=\"c\"> * @param {Function} [options.onlazyload] &#24310;&#36831;&#21152;&#36733;&#22238;&#35843;&#20989;&#25968;,&#22312;&#23454;&#38469;&#21152;&#36733;&#26102;&#35302;&#21457;.</span>","<span class=\"c\"> * @author rocy</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>lazyLoadImage <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    options<span class=\"k\">.</span>preloadHeight <span class=\"k\">=</span> options<span class=\"k\">.</span>preloadHeight <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> imgs <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'IMG'</span><span class=\"k\">),</span>","                targets <span class=\"k\">=</span> imgs<span class=\"k\">,</span>","                len <span class=\"k\">=</span> imgs<span class=\"k\">.</span>length<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                viewOffset <span class=\"k\">=</span> getLoadOffset<span class=\"k\">(),</span>","                srcAttr <span class=\"k\">=</span> <span class=\"s\">'data-tangram-ori-src'</span><span class=\"k\">,</span>","                target<span class=\"k\">;</span>","        <span class=\"c\">//&#36991;&#20813;&#24490;&#29615;&#20013;&#27599;&#27425;&#37117;&#21028;&#26029;className</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>className<span class=\"k\">)</span> <span class=\"k\">{</span>","            targets <span class=\"k\">=</span> <span class=\"k\">[];</span>","            <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>imgs<span class=\"k\">[</span>i<span class=\"k\">],</span> options<span class=\"k\">.</span>className<span class=\"k\">))</span> <span class=\"k\">{</span>","                    targets<span class=\"k\">.</span>push<span class=\"k\">(</span>imgs<span class=\"k\">[</span>i<span class=\"k\">]);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#35745;&#31639;&#38656;&#35201;&#21152;&#36733;&#22270;&#29255;&#30340;&#39029;&#38754;&#39640;&#24230;</span>","        <span class=\"k\">function</span> getLoadOffset<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getScrollTop<span class=\"k\">()</span> <span class=\"k\">+</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>getViewHeight<span class=\"k\">()</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>preloadHeight<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#21152;&#36733;&#21487;&#35270;&#22270;&#29255;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> targets<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","            target <span class=\"k\">=</span> targets<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>top <span class=\"k\">&gt;</span> viewOffset<span class=\"k\">)</span> <span class=\"k\">{</span>","                target<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>srcAttr<span class=\"k\">,</span> target<span class=\"k\">.</span>src<span class=\"k\">);</span>","                options<span class=\"k\">.</span>placeHolder <span class=\"k\">?</span> target<span class=\"k\">.</span>src <span class=\"k\">=</span> options<span class=\"k\">.</span>placeHolder <span class=\"k\">:</span> target<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#22788;&#29702;&#24310;&#36831;&#21152;&#36733;</span>","        <span class=\"k\">var</span> loadNeeded <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> viewOffset <span class=\"k\">=</span> getLoadOffset<span class=\"k\">(),</span>","                imgSrc<span class=\"k\">,</span>","                finished <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                len <span class=\"k\">=</span> targets<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","                target <span class=\"k\">=</span> targets<span class=\"k\">[</span>i<span class=\"k\">];</span>","                imgSrc <span class=\"k\">=</span> target<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span>srcAttr<span class=\"k\">);</span>","                imgSrc <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>finished <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>target<span class=\"k\">).</span>top <span class=\"k\">&lt;</span> viewOffset <span class=\"k\">&amp;&amp;</span> imgSrc<span class=\"k\">)</span> <span class=\"k\">{</span>","                    target<span class=\"k\">.</span>src <span class=\"k\">=</span> imgSrc<span class=\"k\">;</span>","                    target<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span>srcAttr<span class=\"k\">);</span>","                    baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>options<span class=\"k\">.</span>onlazyload<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>onlazyload<span class=\"k\">(</span>target<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"c\">//&#24403;&#20840;&#37096;&#22270;&#29255;&#37117;&#24050;&#32463;&#21152;&#36733;, &#21435;&#25481;&#20107;&#20214;&#30417;&#21548;</span>","            finished <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>window<span class=\"k\">,</span> <span class=\"s\">'scroll'</span><span class=\"k\">,</span> loadNeeded<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>window<span class=\"k\">,</span> <span class=\"s\">'scroll'</span><span class=\"k\">,</span> loadNeeded<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/load.js'] && (_$jscoverage['baidu/page/load.js'].source = ["","<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/page/load.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.0.0</span>","<span class=\"c\"> * date: 2010/11/29</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","<span class=\"c\">///import baidu.array.each;</span>","<span class=\"c\">///import baidu.ajax.get;</span>","<span class=\"c\">///import baidu.event.on;</span>","<span class=\"c\">///import baidu.event.un;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">///import baidu.lang.isString;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * &#21152;&#36733;&#19968;&#32452;&#36164;&#28304;&#65292;&#25903;&#25345;&#22810;&#31181;&#26684;&#24335;&#36164;&#28304;&#30340;&#20018;/&#24182;&#34892;&#21152;&#36733;&#65292;&#25903;&#25345;&#27599;&#20010;&#25991;&#20214;&#26377;&#21333;&#29420;&#22238;&#35843;&#20989;&#25968;&#12290;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name baidu.page.load</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.load(resources[, options])</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Array} resources               &#36164;&#28304;&#25551;&#36848;&#25968;&#32452;&#65292;&#21333;&#20010;resource&#21547;&#22914;&#19979;&#23646;&#24615;.</span>","<span class=\"c\"> * @param {String} resources.url           &#38142;&#25509;&#22320;&#22336;.</span>","<span class=\"c\"> * @param {String} [resources.type]        &#21462;&#20540;[\"css\",\"js\",\"html\"]&#65292;&#40664;&#35748;&#21442;&#32771;&#25991;&#20214;&#21518;&#32512;.</span>","<span class=\"c\"> * @param {String} [resources.requestType] &#21462;&#20540;[\"dom\",\"ajax\"]&#65292;&#40664;&#35748;js&#21644;css&#29992;dom&#26631;&#31614;&#65292;html&#29992;ajax.</span>","<span class=\"c\"> * @param {Function} resources.onload        &#24403;&#21069;resource&#21152;&#36733;&#23436;&#25104;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#33509;requestType&#20026;ajax&#65292;&#21442;&#25968;&#20026;xhr(&#21487;&#33021;&#22833;&#25928;)&#65292;responseText&#65307;&#33509;requestType&#20026;dom&#65292;&#26080;&#21442;&#25968;&#65292;&#25191;&#34892;&#26102;this&#20026;&#30456;&#24212;dom&#26631;&#31614;&#12290;.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Object} [options]               &#21487;&#36873;&#21442;&#25968;.</span>","<span class=\"c\"> * @param {Function} [options.onload]        &#36164;&#28304;&#20840;&#37096;&#21152;&#36733;&#23436;&#25104;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#26080;&#21442;&#25968;&#12290;.</span>","<span class=\"c\"> * @param {Boolean} [options.parallel]      &#26159;&#21542;&#24182;&#34892;&#21152;&#36733;&#65292;&#40664;&#35748;&#20026;false&#65292;&#20018;&#34892;&#12290;.</span>","<span class=\"c\"> * @param {Boolean} [ignoreAllLoaded]       &#20840;&#37096;&#21152;&#36733;&#20043;&#21518;&#19981;&#35302;&#21457;&#22238;&#35843;&#20107;&#20214;.&#20027;&#35201;&#29992;&#20110;&#20869;&#37096;&#23454;&#29616;.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> *  //&#20018;&#34892;&#23454;&#20363;</span>","<span class=\"c\"> *  baidu.page.load([</span>","<span class=\"c\"> *      { url : \"http://img.baidu.com/js/tangram-1.3.2.js\" },</span>","<span class=\"c\"> *      {url : \"http://xxx.baidu.com/xpath/logicRequire.js\",</span>","<span class=\"c\"> *          onload : fnOnRequireLoaded</span>","<span class=\"c\"> *      },</span>","<span class=\"c\"> *      { url : \"http://xxx.baidu.com/xpath/target.js\" }</span>","<span class=\"c\"> *  ],{</span>","<span class=\"c\"> *      onload : fnWhenTargetOK</span>","<span class=\"c\"> *  });</span>","<span class=\"c\"> *  //&#24182;&#34892;&#23454;&#20363;</span>","<span class=\"c\"> *  baidu.page.load([</span>","<span class=\"c\"> *      {</span>","<span class=\"c\"> *          url : \"http://xxx.baidu.com/xpath/template.html\",</span>","<span class=\"c\"> *          onload : fnExtractTemplate</span>","<span class=\"c\"> *      },</span>","<span class=\"c\"> *      { url : \"http://xxx.baidu.com/xpath/style.css\"},</span>","<span class=\"c\"> *      {</span>","<span class=\"c\"> *          url : \"http://xxx.baidu.com/xpath/import.php?f=baidu.*\",</span>","<span class=\"c\"> *          type : \"js\"</span>","<span class=\"c\"> *      },</span>","<span class=\"c\"> *      {</span>","<span class=\"c\"> *          url : \"http://xxx.baidu.com/xpath/target.js\",</span>","<span class=\"c\"> *      },</span>","<span class=\"c\"> *      {</span>","<span class=\"c\"> *          url : \"http://xxx.baidu.com/xpath/jsonData.js\",</span>","<span class=\"c\"> *          requestType : \"ajax\",</span>","<span class=\"c\"> *          onload : fnExtractData</span>","<span class=\"c\"> *      }</span>","<span class=\"c\"> *  ],{</span>","<span class=\"c\"> *      parallel : true,</span>","<span class=\"c\"> *      onload : fnWhenEverythingIsOK</span>","<span class=\"c\"> * });</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>load <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>resources<span class=\"k\">,</span> options<span class=\"k\">,</span> ignoreAllLoaded<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">//TODO failure, &#25972;&#20307;onload&#33021;&#19981;&#33021;&#27599;&#20010;&#37117;&#35843;&#29992;; resources.charset</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> self <span class=\"k\">=</span> baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>load<span class=\"k\">,</span>","        cache <span class=\"k\">=</span> self<span class=\"k\">.</span>_cache <span class=\"k\">=</span> self<span class=\"k\">.</span>_cache <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        loadingCache <span class=\"k\">=</span> self<span class=\"k\">.</span>_loadingCache <span class=\"k\">=</span> self<span class=\"k\">.</span>_loadingCache <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        parallel <span class=\"k\">=</span> options<span class=\"k\">.</span>parallel<span class=\"k\">;</span>","","    <span class=\"k\">function</span> allLoadedChecker<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> resources<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span> cache<span class=\"k\">[</span>resources<span class=\"k\">[</span>i<span class=\"k\">].</span>url<span class=\"k\">])</span> <span class=\"k\">{</span>","                setTimeout<span class=\"k\">(</span>arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        options<span class=\"k\">.</span>onload<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> loadByDom<span class=\"k\">(</span>res<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> node<span class=\"k\">,</span> loaded<span class=\"k\">,</span> onready<span class=\"k\">;</span>","        <span class=\"k\">switch</span> <span class=\"k\">(</span>res<span class=\"k\">.</span>type<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">'css'</span> <span class=\"k\">:</span>","                node <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'link'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'rel'</span><span class=\"k\">,</span> <span class=\"s\">'stylesheet'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'type'</span><span class=\"k\">,</span> <span class=\"s\">'text/css'</span><span class=\"k\">);</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'js'</span> <span class=\"k\">:</span>","                node <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'script'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'type'</span><span class=\"k\">,</span> <span class=\"s\">'text/javascript'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'charset'</span><span class=\"k\">,</span> res<span class=\"k\">.</span>charset <span class=\"k\">||</span> self<span class=\"k\">.</span>charset<span class=\"k\">);</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'html'</span> <span class=\"k\">:</span>","                node <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'iframe'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>frameBorder <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">default</span> <span class=\"k\">:</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// HTML,JS works on all browsers, CSS works only on IE.</span>","        onready <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>loaded <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>readyState <span class=\"k\">||</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">'loaded'</span> <span class=\"k\">||</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">'complete'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                loaded <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"c\">// &#38450;&#27490;&#20869;&#23384;&#27844;&#38706;</span>","                baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'load'</span><span class=\"k\">,</span> onready<span class=\"k\">);</span>","                baidu<span class=\"k\">.</span>un<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'readystatechange'</span><span class=\"k\">,</span> onready<span class=\"k\">);</span>","                <span class=\"c\">//node.onload = node.onreadystatechange = null;</span>","                callback<span class=\"k\">.</span>call<span class=\"k\">(</span>window<span class=\"k\">,</span> node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'load'</span><span class=\"k\">,</span> onready<span class=\"k\">);</span>","        baidu<span class=\"k\">.</span>on<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'readystatechange'</span><span class=\"k\">,</span> onready<span class=\"k\">);</span>","        <span class=\"c\">//CSS has no onload event on firefox and webkit platform, so hack it.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>res<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'css'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"c\">//&#36991;&#20813;&#37325;&#22797;&#21152;&#36733;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>loaded<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    node<span class=\"k\">.</span>sheet<span class=\"k\">.</span>cssRule<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                    setTimeout<span class=\"k\">(</span>arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"s\">20</span><span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                loaded <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                callback<span class=\"k\">.</span>call<span class=\"k\">(</span>window<span class=\"k\">,</span> node<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">)();</span>","        <span class=\"k\">}</span>","","        node<span class=\"k\">.</span>href <span class=\"k\">=</span> node<span class=\"k\">.</span>src <span class=\"k\">=</span> res<span class=\"k\">.</span>url<span class=\"k\">;</span>","        document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'head'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#20860;&#23481;&#31532;&#19968;&#20010;&#21442;&#25968;&#30452;&#25509;&#26159;&#36164;&#28304;&#22320;&#22336;.</span>","    baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">(</span>resources<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>resources <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"k\">{</span>url<span class=\"k\">:</span> resources<span class=\"k\">}</span><span class=\"k\">]);</span>","","    <span class=\"c\">//&#36991;&#20813;&#36882;&#24402;&#20986;&#38169;,&#28155;&#21152;&#23481;&#38169;.</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span> <span class=\"k\">(</span>resources <span class=\"k\">&amp;&amp;</span> resources<span class=\"k\">.</span>length<span class=\"k\">))</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> loadResources<span class=\"k\">(</span>res<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> url <span class=\"k\">=</span> res<span class=\"k\">.</span>url<span class=\"k\">,</span>","            shouldContinue <span class=\"k\">=</span> <span class=\"k\">!!</span>parallel<span class=\"k\">,</span>","            cacheData<span class=\"k\">,</span>","            callback <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>textOrNode<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">//ajax&#23384;&#20837;responseText,dom&#23384;&#20837;&#33410;&#28857;,&#29992;&#20110;&#20445;&#35777;onload&#30340;&#27491;&#30830;&#25191;&#34892;.</span>","                cache<span class=\"k\">[</span>res<span class=\"k\">.</span>url<span class=\"k\">]</span> <span class=\"k\">=</span> textOrNode<span class=\"k\">;</span>","                <span class=\"k\">delete</span> loadingCache<span class=\"k\">[</span>res<span class=\"k\">.</span>url<span class=\"k\">];</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>res<span class=\"k\">.</span>onload<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"c\">//&#33509;&#36820;&#22238;false, &#21017;&#20572;&#27490;&#25509;&#19979;&#26469;&#30340;&#21152;&#36733;.</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">false</span> <span class=\"k\">===</span> res<span class=\"k\">.</span>onload<span class=\"k\">.</span>call<span class=\"k\">(</span>window<span class=\"k\">,</span> textOrNode<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"c\">//&#20018;&#34892;&#26102;&#36882;&#24402;&#25191;&#34892;</span>","                <span class=\"k\">!</span>parallel <span class=\"k\">&amp;&amp;</span> self<span class=\"k\">(</span>resources<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">),</span> options<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">((!</span> ignoreAllLoaded<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>options<span class=\"k\">.</span>onload<span class=\"k\">))</span> <span class=\"k\">{</span>","                    allLoadedChecker<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"c\">//&#40664;&#35748;&#29992;&#21518;&#32512;&#21517;, &#24182;&#38450;&#27490;&#21518;&#32512;&#21517;&#22823;&#20889;</span>","        res<span class=\"k\">.</span>type <span class=\"k\">=</span> res<span class=\"k\">.</span>type <span class=\"k\">||</span> url<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^[^\\?#]+\\.(css|js|html)(\\?|#| |$)[^\\?#]*/i</span><span class=\"k\">,</span> <span class=\"s\">'$1'</span><span class=\"k\">);</span> <span class=\"c\">//[bugfix]&#20462;&#25913;xxx.js?v&#36825;&#31181;&#24773;&#20917;&#19979;&#21462;&#19981;&#21040;js&#30340;&#38382;&#39064;&#12290; </span>","        <span class=\"c\">//&#40664;&#35748;html&#26684;&#24335;&#29992;ajax&#35831;&#27714;,&#20854;&#20182;&#37117;&#20351;&#29992;dom&#26631;&#31614;&#26041;&#24335;&#35831;&#27714;.</span>","        res<span class=\"k\">.</span>requestType <span class=\"k\">=</span> res<span class=\"k\">.</span>requestType <span class=\"k\">||</span> <span class=\"k\">(</span>res<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'html'</span> <span class=\"k\">?</span> <span class=\"s\">'ajax'</span> <span class=\"k\">:</span> <span class=\"s\">'dom'</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>cacheData <span class=\"k\">=</span> cache<span class=\"k\">[</span>res<span class=\"k\">.</span>url<span class=\"k\">])</span> <span class=\"k\">{</span>","            callback<span class=\"k\">(</span>cacheData<span class=\"k\">);</span>","            <span class=\"k\">return</span> shouldContinue<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>options<span class=\"k\">.</span>refresh <span class=\"k\">&amp;&amp;</span> loadingCache<span class=\"k\">[</span>res<span class=\"k\">.</span>url<span class=\"k\">])</span> <span class=\"k\">{</span>","            setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>loadResources<span class=\"k\">(</span>res<span class=\"k\">);</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> shouldContinue<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        loadingCache<span class=\"k\">[</span>res<span class=\"k\">.</span>url<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>res<span class=\"k\">.</span>requestType<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'dom'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            loadByDom<span class=\"k\">(</span>res<span class=\"k\">,</span> callback<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">{</span><span class=\"c\">//ajax</span>","            baidu<span class=\"k\">.</span>ajax<span class=\"k\">.</span>get<span class=\"k\">(</span>res<span class=\"k\">.</span>url<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>xhr<span class=\"k\">,</span> responseText<span class=\"k\">)</span> <span class=\"k\">{</span>callback<span class=\"k\">(</span>responseText<span class=\"k\">);</span><span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#20018;&#34892;&#27169;&#24335;,&#36890;&#36807;callback&#26041;&#27861;&#25191;&#34892;&#21518;&#32493;</span>","        <span class=\"k\">return</span> shouldContinue<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    baidu<span class=\"k\">.</span>each<span class=\"k\">(</span>resources<span class=\"k\">,</span> loadResources<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">//&#40664;&#35748;&#32534;&#30721;&#35774;&#32622;&#20026;UTF8</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>load<span class=\"k\">.</span>charset <span class=\"k\">=</span> <span class=\"s\">'UTF8'</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/loadCssFile.js'] && (_$jscoverage['baidu/page/loadCssFile.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/loadCssFile.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/20</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21160;&#24577;&#22312;&#39029;&#38754;&#19978;&#21152;&#36733;&#19968;&#20010;&#22806;&#37096;css&#25991;&#20214;</span>","<span class=\"c\"> * @name baidu.page.loadCssFile</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.loadCssFile(path)</span>","<span class=\"c\"> * @param {string} path css&#25991;&#20214;&#36335;&#24452;</span>","<span class=\"c\"> * @see baidu.page.loadJsFile</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>loadCssFile <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>path<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"link\"</span><span class=\"k\">);</span>","    ","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"rel\"</span><span class=\"k\">,</span> <span class=\"s\">\"stylesheet\"</span><span class=\"k\">);</span>","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">,</span> <span class=\"s\">\"text/css\"</span><span class=\"k\">);</span>","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"href\"</span><span class=\"k\">,</span> path<span class=\"k\">);</span>","","    document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>        ","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/page/loadJsFile.js'] && (_$jscoverage['baidu/page/loadJsFile.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/page/loadJsFile.js</span>","<span class=\"c\"> * author: allstar</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/20</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.page;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21160;&#24577;&#22312;&#39029;&#38754;&#19978;&#21152;&#36733;&#19968;&#20010;&#22806;&#37096;js&#25991;&#20214;</span>","<span class=\"c\"> * @name baidu.page.loadJsFile</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.page.loadJsFile(path)</span>","<span class=\"c\"> * @param {string} path js&#25991;&#20214;&#36335;&#24452;</span>","<span class=\"c\"> * @see baidu.page.loadCssFile</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>page<span class=\"k\">.</span>loadJsFile <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>path<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'script'</span><span class=\"k\">);</span>","","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'type'</span><span class=\"k\">,</span> <span class=\"s\">'text/javascript'</span><span class=\"k\">);</span>","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">,</span> path<span class=\"k\">);</span>","    element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'defer'</span><span class=\"k\">,</span> <span class=\"s\">'defer'</span><span class=\"k\">);</span>","","    document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>    ","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/platform/isAndroid.js'] && (_$jscoverage['baidu/platform/isAndroid.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;android&#24179;&#21488;</span>","<span class=\"c\"> * @property android &#26159;&#21542;&#20026;android&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.android</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.x11,baidu.platform.windows,baidu.platform.macintosh,baidu.platform.iphone,baidu.platform.ipad</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540;</span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isAndroid <span class=\"k\">=</span> <span class=\"s\">/android/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/platform/isIpad.js'] && (_$jscoverage['baidu/platform/isIpad.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;ipad&#24179;&#21488;</span>","<span class=\"c\"> * @property ipad &#26159;&#21542;&#20026;ipad&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.ipad</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.x11,baidu.platform.windows,baidu.platform.macintosh,baidu.platform.iphone,baidu.platform.android</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540; </span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isIpad <span class=\"k\">=</span> <span class=\"s\">/ipad/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/platform/isIphone.js'] && (_$jscoverage['baidu/platform/isIphone.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;iphone&#24179;&#21488;</span>","<span class=\"c\"> * @property iphone &#26159;&#21542;&#20026;iphone&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.iphone</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.x11,baidu.platform.windows,baidu.platform.macintosh,baidu.platform.ipad,baidu.platform.android</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540;</span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isIphone <span class=\"k\">=</span> <span class=\"s\">/iphone/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/platform/isMacintosh.js'] && (_$jscoverage['baidu/platform/isMacintosh.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;macintosh&#24179;&#21488;</span>","<span class=\"c\"> * @property macintosh &#26159;&#21542;&#20026;macintosh&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.macintosh</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.x11,baidu.platform.windows,baidu.platform.iphone,baidu.platform.ipad,baidu.platform.android</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540; </span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isMacintosh <span class=\"k\">=</span> <span class=\"s\">/macintosh/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/platform/isWindows.js'] && (_$jscoverage['baidu/platform/isWindows.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;windows&#24179;&#21488;</span>","<span class=\"c\"> * @property windows &#26159;&#21542;&#20026;windows&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.windows</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.x11,baidu.platform.macintosh,baidu.platform.iphone,baidu.platform.ipad,baidu.platform.android</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540; </span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isWindows <span class=\"k\">=</span> <span class=\"s\">/windows/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/platform/isX11.js'] && (_$jscoverage['baidu/platform/isX11.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.platform;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#26159;&#21542;&#20026;x11&#24179;&#21488;</span>","<span class=\"c\"> * @property x11 &#26159;&#21542;&#20026;x11&#24179;&#21488;</span>","<span class=\"c\"> * @grammar baidu.platform.x11</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.platform.windows,baidu.platform.macintosh,baidu.platform.iphone,baidu.platform.ipad,baidu.platform.android</span>","<span class=\"c\"> * @return {Boolean} &#24067;&#23572;&#20540; </span>","<span class=\"c\"> * @author jz</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>platform<span class=\"k\">.</span>isX11 <span class=\"k\">=</span> <span class=\"s\">/x11/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">);</span>"]);
_$jscoverage['baidu/sio/callByBrowser.js'] && (_$jscoverage['baidu/sio/callByBrowser.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.sio;</span>","<span class=\"c\">///import baidu.sio._createScriptTag;</span>","<span class=\"c\">///import baidu.sio._removeScriptTag;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;script&#26631;&#31614;&#21152;&#36733;&#25968;&#25454;&#65292;&#21152;&#36733;&#23436;&#25104;&#30001;&#27983;&#35272;&#22120;&#31471;&#35302;&#21457;&#22238;&#35843;</span>","<span class=\"c\"> * @name baidu.sio.callByBrowser</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.sio.callByBrowser(url, opt_callback, opt_options)</span>","<span class=\"c\"> * @param {string} url &#21152;&#36733;&#25968;&#25454;&#30340;url</span>","<span class=\"c\"> * @param {Function|string} opt_callback &#25968;&#25454;&#21152;&#36733;&#32467;&#26463;&#26102;&#35843;&#29992;&#30340;&#20989;&#25968;&#25110;&#20989;&#25968;&#21517;</span>","<span class=\"c\"> * @param {Object} opt_options &#20854;&#20182;&#21487;&#36873;&#39033;</span>","<span class=\"c\"> * @config {String} [charset] script&#30340;&#23383;&#31526;&#38598;</span>","<span class=\"c\"> * @config {Integer} [timeOut] &#36229;&#26102;&#26102;&#38388;&#65292;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#23558;&#19981;&#20877;&#21709;&#24212;&#26412;&#35831;&#27714;&#65292;&#24182;&#35302;&#21457;onfailure&#20989;&#25968;</span>","<span class=\"c\"> * @config {Function} [onfailure] timeOut&#35774;&#23450;&#21518;&#25165;&#29983;&#25928;&#65292;&#21040;&#36798;&#36229;&#26102;&#26102;&#38388;&#26102;&#35302;&#21457;&#26412;&#20989;&#25968;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * 1&#12289;&#19982;callByServer&#19981;&#21516;&#65292;callback&#21442;&#25968;&#21482;&#25903;&#25345;Function&#31867;&#22411;&#65292;&#19981;&#25903;&#25345;string&#12290;</span>","<span class=\"c\"> * 2&#12289;&#22914;&#26524;&#35831;&#27714;&#20102;&#19968;&#20010;&#19981;&#23384;&#22312;&#30340;&#39029;&#38754;&#65292;callback&#20989;&#25968;&#22312;IE/opera&#19979;&#20063;&#20250;&#34987;&#35843;&#29992;&#65292;&#22240;&#27492;&#20351;&#29992;&#32773;&#38656;&#35201;&#22312;onsuccess&#20989;&#25968;&#20013;&#21028;&#26029;&#25968;&#25454;&#26159;&#21542;&#27491;&#30830;&#21152;&#36733;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.sio.callByServer</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>callByBrowser <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">,</span> opt_callback<span class=\"k\">,</span> opt_options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> scr <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"SCRIPT\"</span><span class=\"k\">),</span>","        scriptLoaded <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        options <span class=\"k\">=</span> opt_options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        charset <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'charset'</span><span class=\"k\">],</span>","        callback <span class=\"k\">=</span> opt_callback <span class=\"k\">||</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">,</span>","        timeOut <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'timeOut'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        timer<span class=\"k\">;</span>","    ","    <span class=\"c\">// IE&#21644;opera&#25903;&#25345;onreadystatechange</span>","    <span class=\"c\">// safari&#12289;chrome&#12289;opera&#25903;&#25345;onload</span>","    scr<span class=\"k\">.</span>onload <span class=\"k\">=</span> scr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"c\">// &#36991;&#20813;opera&#19979;&#30340;&#22810;&#27425;&#35843;&#29992;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>scriptLoaded<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">var</span> readyState <span class=\"k\">=</span> scr<span class=\"k\">.</span>readyState<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'undefined'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> readyState","            <span class=\"k\">||</span> readyState <span class=\"k\">==</span> <span class=\"s\">\"loaded\"</span>","            <span class=\"k\">||</span> readyState <span class=\"k\">==</span> <span class=\"s\">\"complete\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            scriptLoaded <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                callback<span class=\"k\">();</span>","                clearTimeout<span class=\"k\">(</span>timer<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","                scr<span class=\"k\">.</span>onload <span class=\"k\">=</span> scr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_removeScriptTag<span class=\"k\">(</span>scr<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">if</span><span class=\"k\">(</span> timeOut <span class=\"k\">)</span><span class=\"k\">{</span>","        timer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            scr<span class=\"k\">.</span>onload <span class=\"k\">=</span> scr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_removeScriptTag<span class=\"k\">(</span>scr<span class=\"k\">);</span>","            options<span class=\"k\">.</span>onfailure <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>onfailure<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> timeOut<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_createScriptTag<span class=\"k\">(</span>scr<span class=\"k\">,</span> url<span class=\"k\">,</span> charset<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/sio/callByServer.js'] && (_$jscoverage['baidu/sio/callByServer.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.sio;</span>","<span class=\"c\">///import baidu.lang.isFunction;</span>","<span class=\"c\">///import baidu.lang.isString;</span>","<span class=\"c\">///import baidu.sio._createScriptTag;</span>","<span class=\"c\">///import baidu.sio._removeScriptTag;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;script&#26631;&#31614;&#21152;&#36733;&#25968;&#25454;&#65292;&#21152;&#36733;&#23436;&#25104;&#30001;&#26381;&#21153;&#22120;&#31471;&#35302;&#21457;&#22238;&#35843;</span>","<span class=\"c\"> * @name baidu.sio.callByServer</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.sio.callByServer(url, callback[, opt_options])</span>","<span class=\"c\"> * @param {string} url &#21152;&#36733;&#25968;&#25454;&#30340;url.</span>","<span class=\"c\"> * @param {Function|string} callback &#26381;&#21153;&#22120;&#31471;&#35843;&#29992;&#30340;&#20989;&#25968;&#25110;&#20989;&#25968;&#21517;&#12290;&#22914;&#26524;&#27809;&#26377;&#25351;&#23450;&#26412;&#21442;&#25968;&#65292;&#23558;&#22312;URL&#20013;&#23547;&#25214;options['queryField']&#20570;&#20026;callback&#30340;&#26041;&#27861;&#21517;.</span>","<span class=\"c\"> * @param {Object} opt_options &#21152;&#36733;&#25968;&#25454;&#26102;&#30340;&#36873;&#39033;.</span>","<span class=\"c\"> * @config {string} [charset] script&#30340;&#23383;&#31526;&#38598;</span>","<span class=\"c\"> * @config {string} [queryField] &#26381;&#21153;&#22120;&#31471;callback&#35831;&#27714;&#23383;&#27573;&#21517;&#65292;&#40664;&#35748;&#20026;callback</span>","<span class=\"c\"> * @config {Integer} [timeOut] &#36229;&#26102;&#26102;&#38388;(&#21333;&#20301;&#65306;ms)&#65292;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#23558;&#19981;&#20877;&#21709;&#24212;&#26412;&#35831;&#27714;&#65292;&#24182;&#35302;&#21457;onfailure&#20989;&#25968;</span>","<span class=\"c\"> * @config {Function} [onfailure] timeOut&#35774;&#23450;&#21518;&#25165;&#29983;&#25928;&#65292;&#21040;&#36798;&#36229;&#26102;&#26102;&#38388;&#26102;&#35302;&#21457;&#26412;&#20989;&#25968;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#22914;&#26524;url&#20013;&#24050;&#32463;&#21253;&#21547;key&#20026;&#8220;options['queryField']&#8221;&#30340;query&#39033;&#65292;&#23558;&#20250;&#34987;&#26367;&#25442;&#25104;callback&#20013;&#21442;&#25968;&#20256;&#36882;&#25110;&#33258;&#21160;&#29983;&#25104;&#30340;&#20989;&#25968;&#21517;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.sio.callByBrowser</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>callByServer <span class=\"k\">=</span> <span class=\"c\">/**@function*/</span><span class=\"k\">function</span><span class=\"k\">(</span>url<span class=\"k\">,</span> callback<span class=\"k\">,</span> opt_options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> scr <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'SCRIPT'</span><span class=\"k\">),</span>","        prefix <span class=\"k\">=</span> <span class=\"s\">'bd__cbs__'</span><span class=\"k\">,</span>","        callbackName<span class=\"k\">,</span>","        callbackImpl<span class=\"k\">,</span>","        options <span class=\"k\">=</span> opt_options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        charset <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'charset'</span><span class=\"k\">],</span>","        queryField <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'queryField'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">'callback'</span><span class=\"k\">,</span>","        timeOut <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'timeOut'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        timer<span class=\"k\">,</span>","        reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'(</span><span class=\"t\">\\\\</span><span class=\"s\">?|&amp;)'</span> <span class=\"k\">+</span> queryField <span class=\"k\">+</span> <span class=\"s\">'=([^&amp;]*)'</span><span class=\"k\">),</span>","        matches<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isFunction<span class=\"k\">(</span>callback<span class=\"k\">))</span> <span class=\"k\">{</span>","        callbackName <span class=\"k\">=</span> prefix <span class=\"k\">+</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">*</span> <span class=\"s\">2147483648</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">36</span><span class=\"k\">);</span>","        window<span class=\"k\">[</span>callbackName<span class=\"k\">]</span> <span class=\"k\">=</span> getCallBack<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isString<span class=\"k\">(</span>callback<span class=\"k\">))</span><span class=\"k\">{</span>","        <span class=\"c\">// &#22914;&#26524;callback&#26159;&#19968;&#20010;&#23383;&#31526;&#20018;&#30340;&#35805;&#65292;&#23601;&#38656;&#35201;&#20445;&#35777;url&#26159;&#21807;&#19968;&#30340;&#65292;&#19981;&#35201;&#21435;&#25913;&#21464;&#23427;</span>","        <span class=\"c\">// TODO &#24403;&#35843;&#29992;&#20102;callback&#20043;&#21518;&#65292;&#26080;&#27861;&#21024;&#38500;&#21160;&#24577;&#21019;&#24314;&#30340;script&#26631;&#31614;</span>","        callbackName <span class=\"k\">=</span> callback<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches <span class=\"k\">=</span> reg<span class=\"k\">.</span>exec<span class=\"k\">(</span>url<span class=\"k\">))</span> <span class=\"k\">{</span>","            callbackName <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span><span class=\"k\">(</span> timeOut <span class=\"k\">)</span><span class=\"k\">{</span>","        timer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span>getCallBack<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">),</span> timeOut<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#22914;&#26524;&#29992;&#25143;&#22312;URL&#20013;&#24050;&#26377;callback&#65292;&#29992;&#21442;&#25968;&#20256;&#20837;&#30340;callback&#26367;&#25442;&#20043;</span>","    url <span class=\"k\">=</span> url<span class=\"k\">.</span>replace<span class=\"k\">(</span>reg<span class=\"k\">,</span> <span class=\"s\">'</span><span class=\"t\">\\x</span><span class=\"s\">241'</span> <span class=\"k\">+</span> queryField <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> callbackName<span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>url<span class=\"k\">.</span>search<span class=\"k\">(</span>reg<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        url <span class=\"k\">+=</span> <span class=\"k\">(</span>url<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'?'</span> <span class=\"k\">:</span> <span class=\"s\">'&amp;'</span><span class=\"k\">)</span> <span class=\"k\">+</span> queryField <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> callbackName<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_createScriptTag<span class=\"k\">(</span>scr<span class=\"k\">,</span> url<span class=\"k\">,</span> charset<span class=\"k\">);</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#36820;&#22238;&#19968;&#20010;&#20989;&#25968;&#65292;&#29992;&#20110;&#31435;&#21363;&#65288;&#25346;&#22312;window&#19978;&#65289;&#25110;&#32773;&#36229;&#26102;&#65288;&#25346;&#22312;setTimeout&#20013;&#65289;&#26102;&#25191;&#34892;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getCallBack<span class=\"k\">(</span>onTimeOut<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">/*global callbackName, callback, scr, options;*/</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> onTimeOut <span class=\"k\">)</span><span class=\"k\">{</span>","                    options<span class=\"k\">.</span>onfailure <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>onfailure<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    callback<span class=\"k\">.</span>apply<span class=\"k\">(</span>window<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","                    clearTimeout<span class=\"k\">(</span>timer<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                window<span class=\"k\">[</span>callbackName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                <span class=\"k\">delete</span> window<span class=\"k\">[</span>callbackName<span class=\"k\">];</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>exception<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// ignore the exception</span>","            <span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","                baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_removeScriptTag<span class=\"k\">(</span>scr<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/sio/log.js'] && (_$jscoverage['baidu/sio/log.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.sio;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;&#35831;&#27714;&#19968;&#20010;&#22270;&#29255;&#30340;&#26041;&#24335;&#20196;&#26381;&#21153;&#22120;&#23384;&#20648;&#19968;&#26465;&#26085;&#24535;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.sio.log(url)</span>","<span class=\"c\"> * @param {string} url &#35201;&#21457;&#36865;&#30340;&#22320;&#22336;.</span>","<span class=\"c\"> * @author: int08h,leeight</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>log <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>url<span class=\"k\">)</span> <span class=\"k\">{</span>","  <span class=\"k\">var</span> img <span class=\"k\">=</span> <span class=\"k\">new</span> Image<span class=\"k\">(),</span>","      key <span class=\"k\">=</span> <span class=\"s\">'tangram_sio_log_'</span> <span class=\"k\">+</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">*</span>","            <span class=\"s\">2147483648</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">36</span><span class=\"k\">);</span>","","  <span class=\"c\">// &#36825;&#37324;&#19968;&#23450;&#35201;&#25346;&#22312;window&#19979;</span>","  <span class=\"c\">// &#22312;IE&#20013;&#65292;&#22914;&#26524;&#27809;&#25346;&#22312;window&#19979;&#65292;&#36825;&#20010;img&#21464;&#37327;&#21448;&#27491;&#22909;&#34987;GC&#30340;&#35805;&#65292;img&#30340;&#35831;&#27714;&#20250;abort</span>","  <span class=\"c\">// &#23548;&#33268;&#26381;&#21153;&#22120;&#25910;&#19981;&#21040;&#26085;&#24535;</span>","  window<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> img<span class=\"k\">;</span>","","  img<span class=\"k\">.</span>onload <span class=\"k\">=</span> img<span class=\"k\">.</span>onerror <span class=\"k\">=</span> img<span class=\"k\">.</span>onabort <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"c\">// &#19979;&#38754;&#36825;&#21477;&#38750;&#24120;&#37325;&#35201;</span>","    <span class=\"c\">// &#22914;&#26524;&#36825;&#20010;img&#24456;&#19981;&#24184;&#27491;&#22909;&#21152;&#36733;&#20102;&#19968;&#20010;&#23384;&#22312;&#30340;&#36164;&#28304;&#65292;&#21448;&#26159;&#20010;gif&#21160;&#30011;</span>","    <span class=\"c\">// &#21017;&#22312;gif&#21160;&#30011;&#25773;&#25918;&#36807;&#31243;&#20013;&#65292;img&#20250;&#22810;&#27425;&#35302;&#21457;onload</span>","    <span class=\"c\">// &#22240;&#27492;&#19968;&#23450;&#35201;&#28165;&#31354;</span>","    img<span class=\"k\">.</span>onload <span class=\"k\">=</span> img<span class=\"k\">.</span>onerror <span class=\"k\">=</span> img<span class=\"k\">.</span>onabort <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","    window<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","    <span class=\"c\">// &#19979;&#38754;&#36825;&#21477;&#38750;&#24120;&#37325;&#35201;</span>","    <span class=\"c\">// new Image&#21019;&#24314;&#30340;&#26159;DOM&#65292;DOM&#30340;&#20107;&#20214;&#20013;&#24418;&#25104;&#38381;&#21253;&#29615;&#24341;&#29992;DOM&#26159;&#20856;&#22411;&#30340;&#20869;&#23384;&#27844;&#38706;</span>","    <span class=\"c\">// &#22240;&#27492;&#36825;&#37324;&#19968;&#23450;&#35201;&#32622;&#20026;null</span>","    img <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"c\">// &#19968;&#23450;&#35201;&#22312;&#27880;&#20876;&#20102;&#20107;&#20214;&#20043;&#21518;&#20877;&#35774;&#32622;src</span>","  <span class=\"c\">// &#19981;&#28982;&#22914;&#26524;&#22270;&#29255;&#26159;&#35835;&#32531;&#23384;&#30340;&#35805;&#65292;&#20250;&#38169;&#36807;&#20107;&#20214;&#22788;&#29702;</span>","  <span class=\"c\">// &#26368;&#21518;&#65292;&#23545;&#20110;url&#26368;&#22909;&#26159;&#28155;&#21152;&#23458;&#25143;&#31471;&#26102;&#38388;&#26469;&#38450;&#27490;&#32531;&#23384;</span>","  <span class=\"c\">// &#21516;&#26102;&#26381;&#21153;&#22120;&#20063;&#37197;&#21512;&#19968;&#19979;&#20256;&#36882;Cache-Control: no-cache;</span>","  img<span class=\"k\">.</span>src <span class=\"k\">=</span> url<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/sio/_createScriptTag.js'] && (_$jscoverage['baidu/sio/_createScriptTag.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.sio;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement} src script&#33410;&#28857;</span>","<span class=\"c\"> * @param {String} url script&#33410;&#28857;&#30340;&#22320;&#22336;</span>","<span class=\"c\"> * @param {String} [charset] &#32534;&#30721;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_createScriptTag <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>scr<span class=\"k\">,</span> url<span class=\"k\">,</span> charset<span class=\"k\">)</span><span class=\"k\">{</span>","    scr<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'type'</span><span class=\"k\">,</span> <span class=\"s\">'text/javascript'</span><span class=\"k\">);</span>","    charset <span class=\"k\">&amp;&amp;</span> scr<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'charset'</span><span class=\"k\">,</span> charset<span class=\"k\">);</span>","    scr<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">,</span> url<span class=\"k\">);</span>","    document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'head'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>scr<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/sio/_removeScriptTag.js'] && (_$jscoverage['baidu/sio/_removeScriptTag.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.sio;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21024;&#38500;script&#30340;&#23646;&#24615;&#65292;&#20877;&#21024;&#38500;script&#26631;&#31614;&#65292;&#20197;&#35299;&#20915;&#20462;&#22797;&#20869;&#23384;&#27844;&#28431;&#30340;&#38382;&#39064;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement} src script&#33410;&#28857;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>sio<span class=\"k\">.</span>_removeScriptTag <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>scr<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>scr<span class=\"k\">.</span>clearAttributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        scr<span class=\"k\">.</span>clearAttributes<span class=\"k\">();</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> attr <span class=\"k\">in</span> scr<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>scr<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>attr<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">delete</span> scr<span class=\"k\">[</span>attr<span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>scr <span class=\"k\">&amp;&amp;</span> scr<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>","        scr<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>scr<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    scr <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/decodeHTML.js'] && (_$jscoverage['baidu/string/decodeHTML.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/decodeHTML.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#23383;&#31526;&#20018;&#36827;&#34892;html&#35299;&#30721;</span>","<span class=\"c\"> * @name baidu.string.decodeHTML</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.decodeHTML(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @shortcut decodeHTML</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.string.encodeHTML</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} html&#35299;&#30721;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>decodeHTML <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> str <span class=\"k\">=</span> String<span class=\"k\">(</span>source<span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;quot;/g</span><span class=\"k\">,</span><span class=\"s\">'\"'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;lt;/g</span><span class=\"k\">,</span><span class=\"s\">'&lt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;gt;/g</span><span class=\"k\">,</span><span class=\"s\">'&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;amp;/g</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;\"</span><span class=\"k\">);</span>","    <span class=\"c\">//&#22788;&#29702;&#36716;&#20041;&#30340;&#20013;&#25991;&#21644;&#23454;&#20307;&#23383;&#31526;</span>","    <span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;#([\\d]+);/g</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>_0<span class=\"k\">,</span> _1<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>_1<span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","baidu<span class=\"k\">.</span>decodeHTML <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>decodeHTML<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/encodeHTML.js'] && (_$jscoverage['baidu/string/encodeHTML.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/encodeHTML.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#23383;&#31526;&#20018;&#36827;&#34892;html&#32534;&#30721;</span>","<span class=\"c\"> * @name baidu.string.encodeHTML</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.encodeHTML(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#32534;&#30721;&#23383;&#31526;&#26377;5&#20010;&#65306;&amp;&lt;&gt;\"'</span>","<span class=\"c\"> * @shortcut encodeHTML</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.string.decodeHTML</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} html&#32534;&#30721;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>encodeHTML <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;/g</span><span class=\"k\">,</span><span class=\"s\">'&amp;amp;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;/g</span><span class=\"k\">,</span><span class=\"s\">'&amp;lt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;/g</span><span class=\"k\">,</span><span class=\"s\">'&amp;gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\"/g</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;quot;\"</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/'/g</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;#39;\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","baidu<span class=\"k\">.</span>encodeHTML <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>encodeHTML<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/escapeReg.js'] && (_$jscoverage['baidu/string/escapeReg.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/escapeReg.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#23383;&#31526;&#20018;&#20013;&#21487;&#33021;&#20250;&#24433;&#21709;&#27491;&#21017;&#34920;&#36798;&#24335;&#26500;&#36896;&#30340;&#23383;&#31526;&#20018;&#36827;&#34892;&#36716;&#20041;&#12290;</span>","<span class=\"c\"> * @name baidu.string.escapeReg</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.escapeReg(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#32473;&#20197;&#19979;&#23383;&#31526;&#21069;&#21152;&#19978;&#8220;\\&#8221;&#36827;&#34892;&#36716;&#20041;&#65306;.*+?^=!:${}()|[]/\\</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#36716;&#20041;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>escapeReg <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">)</span>","            <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"([.*+?^=!:</span><span class=\"t\">\\x</span><span class=\"s\">24{}()|[</span><span class=\"t\">\\\\</span><span class=\"s\">]</span><span class=\"t\">\\/\\\\\\\\</span><span class=\"s\">])\"</span><span class=\"k\">,</span> <span class=\"s\">\"g\"</span><span class=\"k\">),</span> <span class=\"s\">'</span><span class=\"t\">\\\\\\x</span><span class=\"s\">241'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/filterFormat.js'] && (_$jscoverage['baidu/string/filterFormat.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/filterFormat.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010/06/10</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#23383;&#31526;&#20018;&#36827;&#34892;&#26684;&#24335;&#21270;,&#25903;&#25345;&#36807;&#28388;</span>","<span class=\"c\"> * @name baidu.string.filterFormat</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.filterFormat(source, opts)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @param {Object|string...} opts &#25552;&#20379;&#30456;&#24212;&#25968;&#25454;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&#22312; baidu.string.format&#30340;&#22522;&#30784;&#19978;,&#22686;&#21152;&#20102;&#36807;&#28388;&#21151;&#33021;. &#30446;&#26631;&#23383;&#31526;&#20018;&#20013;&#30340;#{url|escapeUrl},&lt;br/&gt;</span>","<span class=\"c\">&#20250;&#26367;&#25442;&#25104;baidu.string.filterFormat[\"escapeUrl\"](opts.url);&lt;br/&gt;</span>","<span class=\"c\">&#36807;&#28388;&#20989;&#25968;&#38656;&#35201;&#20043;&#21069;&#25346;&#36733;&#22312;baidu.string.filterFormat&#23646;&#24615;&#20013;.</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @see baidu.string.format,baidu.string.filterFormat.escapeJs,baidu.string.filterFormat.escapeString,baidu.string.filterFormat.toInt</span>","<span class=\"c\"> * @returns {string} &#26684;&#24335;&#21270;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> opts<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> data <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">),</span> toString <span class=\"k\">=</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">;</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>data<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>","\t    data <span class=\"k\">=</span> data<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> ","\t    \t<span class=\"c\">/* ie &#19979; Object.prototype.toString.call(null) == '[object Object]' */</span>","\t    \t<span class=\"k\">(</span>opts <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"s\">/\\[object Array\\]|\\[object Object\\]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>opts<span class=\"k\">)))</span> <span class=\"k\">?</span> opts <span class=\"k\">:</span> data<span class=\"k\">)</span> ","\t    \t<span class=\"k\">:</span> data<span class=\"k\">;</span>","    \t<span class=\"k\">return</span> source<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/#\\{(.+?)\\}/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t    <span class=\"k\">var</span> filters<span class=\"k\">,</span> replacer<span class=\"k\">,</span> i<span class=\"k\">,</span> len<span class=\"k\">,</span> func<span class=\"k\">;</span>","\t\t    <span class=\"k\">if</span><span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t    \tfilters <span class=\"k\">=</span> key<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"|\"</span><span class=\"k\">);</span>","\t    \treplacer <span class=\"k\">=</span> data<span class=\"k\">[</span>filters<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]];</span>","\t    \t<span class=\"c\">// chrome &#19979; typeof /a/ == 'function'</span>","\t    \t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">'[object Function]'</span> <span class=\"k\">==</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span>replacer<span class=\"k\">))</span><span class=\"k\">{</span>","\t    \t\treplacer <span class=\"k\">=</span> replacer<span class=\"k\">(</span>filters<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span><span class=\"c\">/*key*/</span><span class=\"k\">);</span>","\t    \t<span class=\"k\">}</span>","\t    \t<span class=\"k\">for</span><span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">,</span>len <span class=\"k\">=</span> filters<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span><span class=\"k\">{</span>","\t    \t\tfunc <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">[</span>filters<span class=\"k\">[</span>i<span class=\"k\">]];</span>","\t    \t\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">'[object Function]'</span> <span class=\"k\">==</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span>func<span class=\"k\">))</span><span class=\"k\">{</span>","\t    \t\t\treplacer <span class=\"k\">=</span> func<span class=\"k\">(</span>replacer<span class=\"k\">);</span>","\t    \t\t<span class=\"k\">}</span>","\t    \t<span class=\"k\">}</span>","\t    \t<span class=\"k\">return</span> <span class=\"k\">(</span> <span class=\"k\">(</span><span class=\"s\">'undefined'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> replacer <span class=\"k\">||</span> replacer <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> replacer<span class=\"k\">);</span>","    \t<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/format.js'] && (_$jscoverage['baidu/string/format.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/format.js</span>","<span class=\"c\"> * author: dron, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#23383;&#31526;&#20018;&#36827;&#34892;&#26684;&#24335;&#21270;</span>","<span class=\"c\"> * @name baidu.string.format</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.format(source, opts)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @param {Object|string...} opts &#25552;&#20379;&#30456;&#24212;&#25968;&#25454;&#30340;&#23545;&#35937;&#25110;&#22810;&#20010;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">opts&#21442;&#25968;&#20026;&#8220;Object&#8221;&#26102;&#65292;&#26367;&#25442;&#30446;&#26631;&#23383;&#31526;&#20018;&#20013;&#30340;#{property name}&#37096;&#20998;&#12290;&lt;br&gt;</span>","<span class=\"c\">opts&#20026;&#8220;string...&#8221;&#26102;&#65292;&#26367;&#25442;&#30446;&#26631;&#23383;&#31526;&#20018;&#20013;&#30340;#{0}&#12289;#{1}...&#37096;&#20998;&#12290;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> * @shortcut format</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#26684;&#24335;&#21270;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>format <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> opts<span class=\"k\">)</span> <span class=\"k\">{</span>","    source <span class=\"k\">=</span> String<span class=\"k\">(</span>source<span class=\"k\">);</span>","    <span class=\"k\">var</span> data <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">),</span> toString <span class=\"k\">=</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">;</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>data<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>","\t    data <span class=\"k\">=</span> data<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> ","\t    \t<span class=\"c\">/* ie &#19979; Object.prototype.toString.call(null) == '[object Object]' */</span>","\t    \t<span class=\"k\">(</span>opts <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"s\">/\\[object Array\\]|\\[object Object\\]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span>opts<span class=\"k\">)))</span> <span class=\"k\">?</span> opts <span class=\"k\">:</span> data<span class=\"k\">)</span> ","\t    \t<span class=\"k\">:</span> data<span class=\"k\">;</span>","    \t<span class=\"k\">return</span> source<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/#\\{(.+?)\\}/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","\t    \t<span class=\"k\">var</span> replacer <span class=\"k\">=</span> data<span class=\"k\">[</span>key<span class=\"k\">];</span>","\t    \t<span class=\"c\">// chrome &#19979; typeof /a/ == 'function'</span>","\t    \t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">'[object Function]'</span> <span class=\"k\">==</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span>replacer<span class=\"k\">))</span><span class=\"k\">{</span>","\t    \t\treplacer <span class=\"k\">=</span> replacer<span class=\"k\">(</span>key<span class=\"k\">);</span>","\t    \t<span class=\"k\">}</span>","\t    \t<span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"s\">'undefined'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> replacer <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> replacer<span class=\"k\">);</span>","    \t<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>format <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>format<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/formatColor.js'] && (_$jscoverage['baidu/string/formatColor.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2010 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @author: meizz</span>","<span class=\"c\"> * @namespace: baidu.string.formatColor</span>","<span class=\"c\"> * @version: 2010-01-23</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#21508;&#31181;&#27983;&#35272;&#22120;&#37324;&#30340;&#39068;&#33394;&#20540;&#36716;&#25442;&#25104; #RRGGBB &#30340;&#26684;&#24335;</span>","<span class=\"c\"> * @name baidu.string.formatColor</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.formatColor(color)</span>","<span class=\"c\"> * @param {string} color &#39068;&#33394;&#20540;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @version 1.3</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} #RRGGBB&#26684;&#24335;&#30340;&#23383;&#31526;&#20018;&#25110;&#31354;</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"c\">// &#23558;&#27491;&#21017;&#34920;&#36798;&#24335;&#39044;&#21019;&#24314;&#65292;&#21487;&#25552;&#39640;&#25928;&#29575;</span>","    <span class=\"k\">var</span> reg1 <span class=\"k\">=</span> <span class=\"s\">/^\\#[\\da-f]{6}$/i</span><span class=\"k\">,</span>","        reg2 <span class=\"k\">=</span> <span class=\"s\">/^rgb\\((\\d+), (\\d+), (\\d+)\\)$/</span><span class=\"k\">,</span>","        keyword <span class=\"k\">=</span> <span class=\"k\">{</span>","            black<span class=\"k\">:</span> <span class=\"s\">'#000000'</span><span class=\"k\">,</span>","            silver<span class=\"k\">:</span> <span class=\"s\">'#c0c0c0'</span><span class=\"k\">,</span>","            gray<span class=\"k\">:</span> <span class=\"s\">'#808080'</span><span class=\"k\">,</span>","            white<span class=\"k\">:</span> <span class=\"s\">'#ffffff'</span><span class=\"k\">,</span>","            maroon<span class=\"k\">:</span> <span class=\"s\">'#800000'</span><span class=\"k\">,</span>","            red<span class=\"k\">:</span> <span class=\"s\">'#ff0000'</span><span class=\"k\">,</span>","            purple<span class=\"k\">:</span> <span class=\"s\">'#800080'</span><span class=\"k\">,</span>","            fuchsia<span class=\"k\">:</span> <span class=\"s\">'#ff00ff'</span><span class=\"k\">,</span>","            green<span class=\"k\">:</span> <span class=\"s\">'#008000'</span><span class=\"k\">,</span>","            lime<span class=\"k\">:</span> <span class=\"s\">'#00ff00'</span><span class=\"k\">,</span>","            olive<span class=\"k\">:</span> <span class=\"s\">'#808000'</span><span class=\"k\">,</span>","            yellow<span class=\"k\">:</span> <span class=\"s\">'#ffff0'</span><span class=\"k\">,</span>","            navy<span class=\"k\">:</span> <span class=\"s\">'#000080'</span><span class=\"k\">,</span>","            blue<span class=\"k\">:</span> <span class=\"s\">'#0000ff'</span><span class=\"k\">,</span>","            teal<span class=\"k\">:</span> <span class=\"s\">'#008080'</span><span class=\"k\">,</span>","            aqua<span class=\"k\">:</span> <span class=\"s\">'#00ffff'</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>formatColor <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>reg1<span class=\"k\">.</span>test<span class=\"k\">(</span>color<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">// #RRGGBB &#30452;&#25509;&#36820;&#22238;</span>","            <span class=\"k\">return</span> color<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>reg2<span class=\"k\">.</span>test<span class=\"k\">(</span>color<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#38750;IE&#20013;&#30340; rgb(0, 0, 0)</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> s<span class=\"k\">,</span> i<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">,</span> color<span class=\"k\">=</span><span class=\"s\">\"#\"</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span><span class=\"s\">4</span><span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                s <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>RegExp<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">24\"</span><span class=\"k\">+</span> i<span class=\"k\">]).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">);</span>","                color <span class=\"k\">+=</span> <span class=\"k\">(</span><span class=\"s\">\"00\"</span><span class=\"k\">+</span> s<span class=\"k\">).</span>substr<span class=\"k\">(</span>s<span class=\"k\">.</span>length<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> color<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/^\\#[\\da-f]{3}$/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>color<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#31616;&#20889;&#30340;&#39068;&#33394;&#20540;: #F00</span>","            <span class=\"k\">var</span> s1 <span class=\"k\">=</span> color<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">),</span>","                s2 <span class=\"k\">=</span> color<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">),</span>","                s3 <span class=\"k\">=</span> color<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">3</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"s\">\"#\"</span><span class=\"k\">+</span> s1 <span class=\"k\">+</span> s1 <span class=\"k\">+</span> s2 <span class=\"k\">+</span> s2 <span class=\"k\">+</span> s3 <span class=\"k\">+</span> s3<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>keyword<span class=\"k\">[</span>color<span class=\"k\">])</span>","            <span class=\"k\">return</span> keyword<span class=\"k\">[</span>color<span class=\"k\">];</span>","        ","        <span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>",""]);
_$jscoverage['baidu/string/getByteLength.js'] && (_$jscoverage['baidu/string/getByteLength.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/getByteLength.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;&#30446;&#26631;&#23383;&#31526;&#20018;&#22312;gbk&#32534;&#30721;&#19979;&#30340;&#23383;&#33410;&#38271;&#24230;</span>","<span class=\"c\"> * @name baidu.string.getByteLength</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.getByteLength(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#33719;&#21462;&#23383;&#31526;&#22312;gbk&#32534;&#30721;&#19979;&#30340;&#23383;&#33410;&#38271;&#24230;, &#23454;&#29616;&#21407;&#29702;&#26159;&#35748;&#20026;&#22823;&#20110;127&#30340;&#23601;&#19968;&#23450;&#26159;&#21452;&#23383;&#33410;&#12290;&#22914;&#26524;&#23383;&#31526;&#36229;&#20986;gbk&#32534;&#30721;&#33539;&#22260;, &#21017;&#36825;&#20010;&#35745;&#31639;&#19981;&#20934;&#30830;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.string.subByte</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {number} &#23383;&#33410;&#38271;&#24230;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>getByteLength <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\x00-\\xff]/g</span><span class=\"k\">,</span> <span class=\"s\">\"ci\"</span><span class=\"k\">).</span>length<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/stripTags.js'] && (_$jscoverage['baidu/string/stripTags.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * tangram</span>","<span class=\"c\"> * copyright 2011 baidu inc. all rights reserved.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * path: baidu/string/stripTags.js</span>","<span class=\"c\"> * author: leeight</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2011/04/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21435;&#25481;&#23383;&#31526;&#20018;&#20013;&#30340;html&#26631;&#31614;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.stripTags(source)</span>","<span class=\"c\"> * @param {string} source &#35201;&#22788;&#29702;&#30340;&#23383;&#31526;&#20018;.</span>","<span class=\"c\"> * @return {String}</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>stripTags <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;[^&gt;]+&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/subByte.js'] && (_$jscoverage['baidu/string/subByte.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/subByte.js</span>","<span class=\"c\"> * author: dron, erik, berg</span>","<span class=\"c\"> * version: 1.2</span>","<span class=\"c\"> * date: 2010-06-30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string.getByteLength;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#30446;&#26631;&#23383;&#31526;&#20018;&#25353;gbk&#32534;&#30721;&#25130;&#21462;&#23383;&#33410;&#38271;&#24230;</span>","<span class=\"c\"> * @name baidu.string.subByte</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.subByte(source, length)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @param {number} length &#38656;&#35201;&#25130;&#21462;&#30340;&#23383;&#33410;&#38271;&#24230;</span>","<span class=\"c\"> * @param {string} [tail] &#36861;&#21152;&#23383;&#31526;&#20018;,&#21487;&#36873;.</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#25130;&#21462;&#36807;&#31243;&#20013;&#65292;&#36935;&#21040;&#21322;&#20010;&#27721;&#23383;&#26102;&#65292;&#21521;&#19979;&#21462;&#25972;&#12290;</span>","<span class=\"c\"> * @see baidu.string.getByteLength</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#23383;&#31526;&#20018;&#25130;&#21462;&#32467;&#26524;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>subByte <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> length<span class=\"k\">,</span> tail<span class=\"k\">)</span> <span class=\"k\">{</span>","    source <span class=\"k\">=</span> String<span class=\"k\">(</span>source<span class=\"k\">);</span>","    tail <span class=\"k\">=</span> tail <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>length <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">||</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>getByteLength<span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">&lt;=</span> length<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> source <span class=\"k\">+</span> tail<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">//thanks &#21152;&#23485;&#25552;&#20379;&#20248;&#21270;&#26041;&#27861;</span>","    source <span class=\"k\">=</span> source<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>length<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/([^\\x00-\\xff])/g</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">241 \"</span><span class=\"k\">)</span><span class=\"c\">//&#21452;&#23383;&#33410;&#23383;&#31526;&#26367;&#25442;&#25104;&#20004;&#20010;</span>","        <span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>length<span class=\"k\">)</span><span class=\"c\">//&#25130;&#21462;&#38271;&#24230;</span>","        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\x00-\\xff]$/</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"c\">//&#21435;&#25481;&#20020;&#30028;&#21452;&#23383;&#33410;&#23383;&#31526;</span>","        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/([^\\x00-\\xff]) /g</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\x</span><span class=\"s\">241\"</span><span class=\"k\">);</span><span class=\"c\">//&#36824;&#21407;</span>","    <span class=\"k\">return</span> source <span class=\"k\">+</span> tail<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/toCamelCase.js'] && (_$jscoverage['baidu/string/toCamelCase.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/toCamelCase.js</span>","<span class=\"c\"> * author: erik, berg</span>","<span class=\"c\"> * version: 1.2</span>","<span class=\"c\"> * date: 2010-06-22</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#23383;&#31526;&#20018;&#36827;&#34892;&#39548;&#23792;&#21270;&#22788;&#29702;</span>","<span class=\"c\"> * @name baidu.string.toCamelCase</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.toCamelCase(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#25903;&#25345;&#21333;&#35789;&#20197;&#8220;-_&#8221;&#20998;&#38548;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#39548;&#23792;&#21270;&#22788;&#29702;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>"," "," <span class=\"c\">//todo:&#32771;&#34385;&#20197;&#21518;&#21435;&#25481;&#19979;&#21010;&#32447;&#25903;&#25345;&#65311;</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>toCamelCase <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">//&#25552;&#21069;&#21028;&#26029;&#65292;&#25552;&#39640;getStyle&#31561;&#30340;&#25928;&#29575; thanks xianwei</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'-'</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> source<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'_'</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> source<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> source<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[-_][^-_]/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> match<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/toHalfWidth.js'] && (_$jscoverage['baidu/string/toHalfWidth.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/toHalfWidth.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;&#30446;&#26631;&#23383;&#31526;&#20018;&#20013;&#24120;&#35265;&#20840;&#35282;&#23383;&#31526;&#36716;&#25442;&#25104;&#21322;&#35282;&#23383;&#31526;</span>","<span class=\"c\"> * @name baidu.string.toHalfWidth</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.toHalfWidth(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">&#23558;&#20840;&#35282;&#30340;&#23383;&#31526;&#36716;&#25104;&#21322;&#35282;, &#23558;&#8220;&amp;amp;#xFF01;&#8221;&#33267;&#8220;&amp;amp;#xFF5E;&#8221;&#33539;&#22260;&#30340;&#20840;&#35282;&#36716;&#25104;&#8220;&amp;amp;#33;&#8221;&#33267;&#8220;&amp;amp;#126;&#8221;, &#36824;&#21253;&#25324;&#20840;&#35282;&#31354;&#26684;&#21253;&#25324;&#24120;&#35265;&#30340;&#20840;&#35282;&#25968;&#23383;/&#31354;&#26684;/&#23383;&#27597;, &#29992;&#20110;&#38656;&#35201;&#21516;&#26102;&#25903;&#25345;&#20840;&#21322;&#35282;&#30340;&#36716;&#25442;, &#20855;&#20307;&#36716;&#25442;&#21015;&#34920;&#22914;&#19979;(\"&#31354;&#26684;\"&#26410;&#21015;&#20986;)&#65306;&lt;br&gt;&lt;br&gt;</span>","","<span class=\"c\">&#65281; =&gt; !&lt;br&gt;</span>","<span class=\"c\">&#65282; =&gt; \"&lt;br&gt;</span>","<span class=\"c\">&#65283; =&gt; #&lt;br&gt;</span>","<span class=\"c\">&#65284; =&gt; $&lt;br&gt;</span>","<span class=\"c\">&#65285; =&gt; %&lt;br&gt;</span>","<span class=\"c\">&#65286; =&gt; &amp;&lt;br&gt;</span>","<span class=\"c\">&#65287; =&gt; '&lt;br&gt;</span>","<span class=\"c\">&#65288; =&gt; (&lt;br&gt;</span>","<span class=\"c\">&#65289; =&gt; )&lt;br&gt;</span>","<span class=\"c\">&#65290; =&gt; *&lt;br&gt;</span>","<span class=\"c\">&#65291; =&gt; +&lt;br&gt;</span>","<span class=\"c\">&#65292; =&gt; ,&lt;br&gt;</span>","<span class=\"c\">&#65293; =&gt; -&lt;br&gt;</span>","<span class=\"c\">&#65294; =&gt; .&lt;br&gt;</span>","<span class=\"c\">&#65295; =&gt; /&lt;br&gt;</span>","<span class=\"c\">&#65296; =&gt; 0&lt;br&gt;</span>","<span class=\"c\">&#65297; =&gt; 1&lt;br&gt;</span>","<span class=\"c\">&#65298; =&gt; 2&lt;br&gt;</span>","<span class=\"c\">&#65299; =&gt; 3&lt;br&gt;</span>","<span class=\"c\">&#65300; =&gt; 4&lt;br&gt;</span>","<span class=\"c\">&#65301; =&gt; 5&lt;br&gt;</span>","<span class=\"c\">&#65302; =&gt; 6&lt;br&gt;</span>","<span class=\"c\">&#65303; =&gt; 7&lt;br&gt;</span>","<span class=\"c\">&#65304; =&gt; 8&lt;br&gt;</span>","<span class=\"c\">&#65305; =&gt; 9&lt;br&gt;</span>","<span class=\"c\">&#65306; =&gt; :&lt;br&gt;</span>","<span class=\"c\">&#65307; =&gt; ;&lt;br&gt;</span>","<span class=\"c\">&#65308; =&gt; &lt;&lt;br&gt;</span>","<span class=\"c\">&#65309; =&gt; =&lt;br&gt;</span>","<span class=\"c\">&#65310; =&gt; &gt;&lt;br&gt;</span>","<span class=\"c\">&#65311; =&gt; ?&lt;br&gt;</span>","<span class=\"c\">&#65312; =&gt; @&lt;br&gt;</span>","<span class=\"c\">&#65313; =&gt; A&lt;br&gt;</span>","<span class=\"c\">&#65314; =&gt; B&lt;br&gt;</span>","<span class=\"c\">&#65315; =&gt; C&lt;br&gt;</span>","<span class=\"c\">&#65316; =&gt; D&lt;br&gt;</span>","<span class=\"c\">&#65317; =&gt; E&lt;br&gt;</span>","<span class=\"c\">&#65318; =&gt; F&lt;br&gt;</span>","<span class=\"c\">&#65319; =&gt; G&lt;br&gt;</span>","<span class=\"c\">&#65320; =&gt; H&lt;br&gt;</span>","<span class=\"c\">&#65321; =&gt; I&lt;br&gt;</span>","<span class=\"c\">&#65322; =&gt; J&lt;br&gt;</span>","<span class=\"c\">&#65323; =&gt; K&lt;br&gt;</span>","<span class=\"c\">&#65324; =&gt; L&lt;br&gt;</span>","<span class=\"c\">&#65325; =&gt; M&lt;br&gt;</span>","<span class=\"c\">&#65326; =&gt; N&lt;br&gt;</span>","<span class=\"c\">&#65327; =&gt; O&lt;br&gt;</span>","<span class=\"c\">&#65328; =&gt; P&lt;br&gt;</span>","<span class=\"c\">&#65329; =&gt; Q&lt;br&gt;</span>","<span class=\"c\">&#65330; =&gt; R&lt;br&gt;</span>","<span class=\"c\">&#65331; =&gt; S&lt;br&gt;</span>","<span class=\"c\">&#65332; =&gt; T&lt;br&gt;</span>","<span class=\"c\">&#65333; =&gt; U&lt;br&gt;</span>","<span class=\"c\">&#65334; =&gt; V&lt;br&gt;</span>","<span class=\"c\">&#65335; =&gt; W&lt;br&gt;</span>","<span class=\"c\">&#65336; =&gt; X&lt;br&gt;</span>","<span class=\"c\">&#65337; =&gt; Y&lt;br&gt;</span>","<span class=\"c\">&#65338; =&gt; Z&lt;br&gt;</span>","<span class=\"c\">&#65339; =&gt; [&lt;br&gt;</span>","<span class=\"c\">&#65340; =&gt; \\&lt;br&gt;</span>","<span class=\"c\">&#65341; =&gt; ]&lt;br&gt;</span>","<span class=\"c\">&#65342; =&gt; ^&lt;br&gt;</span>","<span class=\"c\">&#65343; =&gt; _&lt;br&gt;</span>","<span class=\"c\">&#65344; =&gt; `&lt;br&gt;</span>","<span class=\"c\">&#65345; =&gt; a&lt;br&gt;</span>","<span class=\"c\">&#65346; =&gt; b&lt;br&gt;</span>","<span class=\"c\">&#65347; =&gt; c&lt;br&gt;</span>","<span class=\"c\">&#65348; =&gt; d&lt;br&gt;</span>","<span class=\"c\">&#65349; =&gt; e&lt;br&gt;</span>","<span class=\"c\">&#65350; =&gt; f&lt;br&gt;</span>","<span class=\"c\">&#65351; =&gt; g&lt;br&gt;</span>","<span class=\"c\">&#65352; =&gt; h&lt;br&gt;</span>","<span class=\"c\">&#65353; =&gt; i&lt;br&gt;</span>","<span class=\"c\">&#65354; =&gt; j&lt;br&gt;</span>","<span class=\"c\">&#65355; =&gt; k&lt;br&gt;</span>","<span class=\"c\">&#65356; =&gt; l&lt;br&gt;</span>","<span class=\"c\">&#65357; =&gt; m&lt;br&gt;</span>","<span class=\"c\">&#65358; =&gt; n&lt;br&gt;</span>","<span class=\"c\">&#65359; =&gt; o&lt;br&gt;</span>","<span class=\"c\">&#65360; =&gt; p&lt;br&gt;</span>","<span class=\"c\">&#65361; =&gt; q&lt;br&gt;</span>","<span class=\"c\">&#65362; =&gt; r&lt;br&gt;</span>","<span class=\"c\">&#65363; =&gt; s&lt;br&gt;</span>","<span class=\"c\">&#65364; =&gt; t&lt;br&gt;</span>","<span class=\"c\">&#65365; =&gt; u&lt;br&gt;</span>","<span class=\"c\">&#65366; =&gt; v&lt;br&gt;</span>","<span class=\"c\">&#65367; =&gt; w&lt;br&gt;</span>","<span class=\"c\">&#65368; =&gt; x&lt;br&gt;</span>","<span class=\"c\">&#65369; =&gt; y&lt;br&gt;</span>","<span class=\"c\">&#65370; =&gt; z&lt;br&gt;</span>","<span class=\"c\">&#65371; =&gt; {&lt;br&gt;</span>","<span class=\"c\">&#65372; =&gt; |&lt;br&gt;</span>","<span class=\"c\">&#65373; =&gt; }&lt;br&gt;</span>","<span class=\"c\">&#65374; =&gt; ~&lt;br&gt;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#36716;&#25442;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>toHalfWidth <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/[\\uFF01-\\uFF5E]/g</span><span class=\"k\">,</span> ","        <span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>c<span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">65248</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\\u3000/g</span><span class=\"k\">,</span><span class=\"s\">\" \"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/trim.js'] && (_$jscoverage['baidu/string/trim.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/trim.js</span>","<span class=\"c\"> * author: dron, erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/15</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21024;&#38500;&#30446;&#26631;&#23383;&#31526;&#20018;&#20004;&#31471;&#30340;&#31354;&#30333;&#23383;&#31526;</span>","<span class=\"c\"> * @name baidu.string.trim</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.trim(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#19981;&#25903;&#25345;&#21024;&#38500;&#21333;&#20391;&#31354;&#30333;&#23383;&#31526;</span>","<span class=\"c\"> * @shortcut trim</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#21024;&#38500;&#20004;&#31471;&#31354;&#30333;&#23383;&#31526;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> trimer <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"(^[</span><span class=\"t\">\\\\</span><span class=\"s\">s</span><span class=\"t\">\\\\</span><span class=\"s\">t</span><span class=\"t\">\\\\</span><span class=\"s\">xa0</span><span class=\"t\">\\\\</span><span class=\"s\">u3000]+)|([</span><span class=\"t\">\\\\</span><span class=\"s\">u3000</span><span class=\"t\">\\\\</span><span class=\"s\">xa0</span><span class=\"t\">\\\\</span><span class=\"s\">s</span><span class=\"t\">\\\\</span><span class=\"s\">t]+</span><span class=\"t\">\\x</span><span class=\"s\">24)\"</span><span class=\"k\">,</span> <span class=\"s\">\"g\"</span><span class=\"k\">);</span>","    ","    baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>trim <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span>trimer<span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>","","<span class=\"c\">// &#22768;&#26126;&#24555;&#25463;&#26041;&#27861;</span>","baidu<span class=\"k\">.</span>trim <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>trim<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/wbr.js'] && (_$jscoverage['baidu/string/wbr.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/wbr.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/30</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#20026;&#30446;&#26631;&#23383;&#31526;&#20018;&#28155;&#21152;wbr&#36719;&#25442;&#34892;</span>","<span class=\"c\"> * @name baidu.string.wbr</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.wbr(source)</span>","<span class=\"c\"> * @param {string} source &#30446;&#26631;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * </span>","<span class=\"c\">1.&#25903;&#25345;html&#26631;&#31614;&#12289;&#23646;&#24615;&#20197;&#21450;&#23383;&#31526;&#23454;&#20307;&#12290;&lt;br&gt;</span>","<span class=\"c\">2.&#20219;&#24847;&#23383;&#31526;&#20013;&#38388;&#37117;&#20250;&#25554;&#20837;wbr&#26631;&#31614;&#65292;&#23545;&#20110;&#36807;&#38271;&#30340;&#25991;&#26412;&#65292;&#20250;&#36896;&#25104;dom&#33410;&#28857;&#20803;&#32032;&#22686;&#22810;&#65292;&#21344;&#29992;&#27983;&#35272;&#22120;&#36164;&#28304;&#12290;</span>","<span class=\"c\">3.&#22312;opera&#19979;&#65292;&#27983;&#35272;&#22120;&#40664;&#35748;css&#19981;&#20250;&#20026;wbr&#21152;&#19978;&#26679;&#24335;&#65292;&#23548;&#33268;&#27809;&#26377;&#25442;&#34892;&#25928;&#26524;&#65292;&#21487;&#20197;&#22312;css&#20013;&#21152;&#19978; wbr:after { content: \"\\00200B\" } &#35299;&#20915;&#27492;&#38382;&#39064;</span>","<span class=\"c\">\t\t</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string} &#28155;&#21152;&#36719;&#25442;&#34892;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>wbr <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">)</span>","        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(?:&lt;[^&gt;]+&gt;)|(?:&amp;#?[0-9a-z]{2,6};)|(.{1})/gi</span><span class=\"k\">,</span> <span class=\"s\">'$&amp;&lt;wbr&gt;'</span><span class=\"k\">)</span>","        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;&lt;wbr&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/filterFormat/escapeJs.js'] && (_$jscoverage['baidu/string/filterFormat/escapeJs.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/filterFormat/escapeJs.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010/06/12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string.filterFormat;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;js&#29255;&#27573;&#30340;&#23383;&#31526;&#20570;&#23433;&#20840;&#36716;&#20041;,&#32534;&#30721;&#20302;&#20110;255&#30340;&#37117;&#23558;&#36716;&#25442;&#25104;\\x&#21152;16&#36827;&#21046;&#25968;</span>","<span class=\"c\"> * @name baidu.string.filterFormat.escapeJs</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.filterFormat.escapeJs(source)</span>","<span class=\"c\"> * @param {String} source &#24453;&#36716;&#20041;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @see baidu.string.filterFormat,baidu.string.filterFormat.escapeString,baidu.string.filterFormat.toInt</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @return {String} &#36716;&#20041;&#20043;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>escapeJs <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">if</span><span class=\"k\">(!</span>str <span class=\"k\">||</span> <span class=\"s\">'string'</span> <span class=\"k\">!=</span> <span class=\"k\">typeof</span> str<span class=\"k\">)</span> <span class=\"k\">return</span> str<span class=\"k\">;</span>","\t<span class=\"k\">var</span> i<span class=\"k\">,</span>len<span class=\"k\">,</span>charCode<span class=\"k\">,</span>ret <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">for</span><span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> len<span class=\"k\">=</span>str<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span><span class=\"k\">{</span>","\t\tcharCode <span class=\"k\">=</span> str<span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(</span>charCode <span class=\"k\">&gt;</span> <span class=\"s\">255</span><span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>push<span class=\"k\">(</span>str<span class=\"k\">.</span>charAt<span class=\"k\">(</span>i<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span><span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">x'</span> <span class=\"k\">+</span> charCode<span class=\"k\">.</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">return</span> ret<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>js <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>escapeJs<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/filterFormat/escapeString.js'] && (_$jscoverage['baidu/string/filterFormat/escapeString.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/filterFormat/escapeString.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010/06/12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string.filterFormat;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#23383;&#31526;&#20018;&#20570;&#23433;&#20840;&#36716;&#20041;,&#36716;&#20041;&#23383;&#31526;&#21253;&#25324;: &#21333;&#24341;&#21495;,&#21452;&#24341;&#21495;,&#24038;&#21491;&#23567;&#25324;&#21495;,&#26012;&#26464;,&#21453;&#26012;&#26464;,&#19978;&#24341;&#21495;.</span>","<span class=\"c\"> * @name baidu.string.filterFormat.escapeString</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.filterFormat.escapeString(source)</span>","<span class=\"c\"> * @param {String} source &#24453;&#36716;&#20041;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @see baidu.string.filterFormat,baidu.string.filterFormat.escapeJs,baidu.string.filterFormat.toInt</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @return {String} &#36716;&#20041;&#20043;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>escapeString <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">if</span><span class=\"k\">(!</span>str <span class=\"k\">||</span> <span class=\"s\">'string'</span> <span class=\"k\">!=</span> <span class=\"k\">typeof</span> str<span class=\"k\">)</span> <span class=\"k\">return</span> str<span class=\"k\">;</span>","\t<span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[\"'&lt;&gt;\\\\\\/`]/g</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>$0<span class=\"k\">)</span><span class=\"k\">{</span>","\t   <span class=\"k\">return</span> <span class=\"s\">'&amp;#'</span><span class=\"k\">+</span> $0<span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">+</span><span class=\"s\">';'</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>e <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>escapeString<span class=\"k\">;</span>"]);
_$jscoverage['baidu/string/filterFormat/toInt.js'] && (_$jscoverage['baidu/string/filterFormat/toInt.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/string/filterFormat/toInt.js</span>","<span class=\"c\"> * author: rocy</span>","<span class=\"c\"> * version: 1.1.2</span>","<span class=\"c\"> * date: 2010/06/12</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.string.filterFormat;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#25968;&#23383;&#20570;&#23433;&#20840;&#36716;&#20041;,&#30830;&#20445;&#26159;&#21313;&#36827;&#21046;&#25968;&#23383;;&#21542;&#21017;&#36820;&#22238;0.</span>","<span class=\"c\"> * @name baidu.string.filterFormat.toInt</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.string.filterFormat.toInt(source)</span>","<span class=\"c\"> * @param {String} source &#24453;&#36716;&#20041;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @see baidu.string.filterFormat,baidu.string.filterFormat.escapeJs,baidu.string.filterFormat.escapeString</span>","<span class=\"c\"> * @version 1.2</span>","<span class=\"c\"> * @return {Number} &#36716;&#20041;&#20043;&#21518;&#30340;&#25968;&#23383;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>toInt <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">return</span> parseInt<span class=\"k\">(</span>str<span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>i <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>filterFormat<span class=\"k\">.</span>toInt<span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf/create.js'] && (_$jscoverage['baidu/swf/create.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/swf/create.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.dom.insertHTML;</span>","<span class=\"c\">///import baidu.swf.createHTML;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#22312;&#39029;&#38754;&#20013;&#21019;&#24314;&#19968;&#20010;flash&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.swf.create</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.swf.create(options[, container])</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {Object} \toptions \t\t\t\t\t&#21019;&#24314;flash&#30340;&#36873;&#39033;&#21442;&#25968;</span>","<span class=\"c\"> * @param {string} \toptions.id \t\t\t\t\t&#35201;&#21019;&#24314;&#30340;flash&#30340;&#26631;&#35782;</span>","<span class=\"c\"> * @param {string} \toptions.url \t\t\t\tflash&#25991;&#20214;&#30340;url</span>","<span class=\"c\"> * @param {String} \toptions.errorMessage \t\t&#26410;&#23433;&#35013;flash player&#25110;flash player&#29256;&#26412;&#21495;&#36807;&#20302;&#26102;&#30340;&#25552;&#31034;</span>","<span class=\"c\"> * @param {string} \toptions.ver \t\t\t\t&#26368;&#20302;&#38656;&#35201;&#30340;flash player&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @param {string} \toptions.width \t\t\t\tflash&#30340;&#23485;&#24230;</span>","<span class=\"c\"> * @param {string} \toptions.height \t\t\t\tflash&#30340;&#39640;&#24230;</span>","<span class=\"c\"> * @param {string} \toptions.align \t\t\t\tflash&#30340;&#23545;&#40784;&#26041;&#24335;&#65292;&#20801;&#35768;&#20540;&#65306;middle/left/right/top/bottom</span>","<span class=\"c\"> * @param {string} \toptions.base \t\t\t\t&#35774;&#32622;&#29992;&#20110;&#35299;&#26512;swf&#25991;&#20214;&#20013;&#30340;&#25152;&#26377;&#30456;&#23545;&#36335;&#24452;&#35821;&#21477;&#30340;&#22522;&#26412;&#30446;&#24405;&#25110;URL</span>","<span class=\"c\"> * @param {string} \toptions.bgcolor \t\t\tswf&#25991;&#20214;&#30340;&#32972;&#26223;&#33394;</span>","<span class=\"c\"> * @param {string} \toptions.salign \t\t\t\t&#35774;&#32622;&#32553;&#25918;&#30340;swf&#25991;&#20214;&#22312;&#30001;width&#21644;height&#35774;&#32622;&#23450;&#20041;&#30340;&#21306;&#22495;&#20869;&#30340;&#20301;&#32622;&#12290;&#20801;&#35768;&#20540;&#65306;l/r/t/b/tl/tr/bl/br</span>","<span class=\"c\"> * @param {boolean} options.menu \t\t\t\t&#26159;&#21542;&#26174;&#31034;&#21491;&#38190;&#33756;&#21333;&#65292;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.loop \t\t\t\t&#25773;&#25918;&#21040;&#26368;&#21518;&#19968;&#24103;&#26102;&#26159;&#21542;&#37325;&#26032;&#25773;&#25918;&#65292;&#20801;&#35768;&#20540;&#65306; true/false</span>","<span class=\"c\"> * @param {boolean} options.play \t\t\t\tflash&#26159;&#21542;&#22312;&#27983;&#35272;&#22120;&#21152;&#36733;&#26102;&#23601;&#24320;&#22987;&#25773;&#25918;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {string} \toptions.quality \t\t\t&#35774;&#32622;flash&#25773;&#25918;&#30340;&#30011;&#36136;&#65292;&#20801;&#35768;&#20540;&#65306;low/medium/high/autolow/autohigh/best</span>","<span class=\"c\"> * @param {string} \toptions.scale \t\t\t\t&#35774;&#32622;flash&#20869;&#23481;&#22914;&#20309;&#32553;&#25918;&#26469;&#36866;&#24212;&#35774;&#32622;&#30340;&#23485;&#39640;&#12290;&#20801;&#35768;&#20540;&#65306;showall/noborder/exactfit</span>","<span class=\"c\"> * @param {string} \toptions.wmode \t\t\t\t&#35774;&#32622;flash&#30340;&#26174;&#31034;&#27169;&#24335;&#12290;&#20801;&#35768;&#20540;&#65306;window/opaque/transparent</span>","<span class=\"c\"> * @param {string} \toptions.allowscriptaccess \t&#35774;&#32622;flash&#19982;&#39029;&#38754;&#30340;&#36890;&#20449;&#26435;&#38480;&#12290;&#20801;&#35768;&#20540;&#65306;always/never/sameDomain</span>","<span class=\"c\"> * @param {string} \toptions.allownetworking \t&#35774;&#32622;swf&#25991;&#20214;&#20013;&#20801;&#35768;&#20351;&#29992;&#30340;&#32593;&#32476;API&#12290;&#20801;&#35768;&#20540;&#65306;all/internal/none</span>","<span class=\"c\"> * @param {boolean} options.allowfullscreen \t&#26159;&#21542;&#20801;&#35768;flash&#20840;&#23631;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.seamlesstabbing \t&#20801;&#35768;&#35774;&#32622;&#25191;&#34892;&#26080;&#32541;&#36339;&#26684;&#65292;&#20174;&#32780;&#20351;&#29992;&#25143;&#33021;&#36339;&#20986;flash&#24212;&#29992;&#31243;&#24207;&#12290;&#35813;&#21442;&#25968;&#21482;&#33021;&#22312;&#23433;&#35013;Flash7&#21450;&#26356;&#39640;&#29256;&#26412;&#30340;Windows&#20013;&#20351;&#29992;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.devicefont \t\t\t&#35774;&#32622;&#38745;&#24577;&#25991;&#26412;&#23545;&#35937;&#26159;&#21542;&#20197;&#35774;&#22791;&#23383;&#20307;&#21576;&#29616;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.swliveconnect \t\t&#31532;&#19968;&#27425;&#21152;&#36733;flash&#26102;&#27983;&#35272;&#22120;&#26159;&#21542;&#24212;&#21551;&#21160;Java&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {Object} \toptions.vars \t\t\t\t&#35201;&#20256;&#36882;&#32473;flash&#30340;&#21442;&#25968;&#65292;&#25903;&#25345;JSON&#25110;string&#31867;&#22411;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {HTMLElement|string} [container] \t\tflash&#23545;&#35937;&#30340;&#29238;&#23481;&#22120;&#20803;&#32032;&#65292;&#19981;&#20256;&#36882;&#35813;&#21442;&#25968;&#26102;&#22312;&#24403;&#21069;&#20195;&#30721;&#20301;&#32622;&#21019;&#24314;flash&#23545;&#35937;&#12290;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.swf.createHTML,baidu.swf.getMovie</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> html <span class=\"k\">=</span> baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>createHTML<span class=\"k\">(</span>options<span class=\"k\">)</span> ","               <span class=\"k\">||</span> options<span class=\"k\">[</span><span class=\"s\">'errorMessage'</span><span class=\"k\">]</span> ","               <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                ","    <span class=\"k\">if</span> <span class=\"k\">(</span>target <span class=\"k\">&amp;&amp;</span> <span class=\"s\">'string'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> target<span class=\"k\">)</span> <span class=\"k\">{</span>","        target <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>target<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    baidu<span class=\"k\">.</span>dom<span class=\"k\">.</span>insertHTML<span class=\"k\">(</span> target <span class=\"k\">||</span> document<span class=\"k\">.</span>body <span class=\"k\">,</span><span class=\"s\">'beforeEnd'</span><span class=\"k\">,</span>html <span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf/createHTML.js'] && (_$jscoverage['baidu/swf/createHTML.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/swf/createHTML.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.swf.version;</span>","<span class=\"c\">///import baidu.string.encodeHTML;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21019;&#24314;flash&#23545;&#35937;&#30340;html&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @name baidu.swf.createHTML</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.swf.createHTML(options)</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @param {Object} \toptions \t\t\t\t\t&#21019;&#24314;flash&#30340;&#36873;&#39033;&#21442;&#25968;</span>","<span class=\"c\"> * @param {string} \toptions.id \t\t\t\t\t&#35201;&#21019;&#24314;&#30340;flash&#30340;&#26631;&#35782;</span>","<span class=\"c\"> * @param {string} \toptions.url \t\t\t\tflash&#25991;&#20214;&#30340;url</span>","<span class=\"c\"> * @param {String} \toptions.errorMessage \t\t&#26410;&#23433;&#35013;flash player&#25110;flash player&#29256;&#26412;&#21495;&#36807;&#20302;&#26102;&#30340;&#25552;&#31034;</span>","<span class=\"c\"> * @param {string} \toptions.ver \t\t\t\t&#26368;&#20302;&#38656;&#35201;&#30340;flash player&#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @param {string} \toptions.width \t\t\t\tflash&#30340;&#23485;&#24230;</span>","<span class=\"c\"> * @param {string} \toptions.height \t\t\t\tflash&#30340;&#39640;&#24230;</span>","<span class=\"c\"> * @param {string} \toptions.align \t\t\t\tflash&#30340;&#23545;&#40784;&#26041;&#24335;&#65292;&#20801;&#35768;&#20540;&#65306;middle/left/right/top/bottom</span>","<span class=\"c\"> * @param {string} \toptions.base \t\t\t\t&#35774;&#32622;&#29992;&#20110;&#35299;&#26512;swf&#25991;&#20214;&#20013;&#30340;&#25152;&#26377;&#30456;&#23545;&#36335;&#24452;&#35821;&#21477;&#30340;&#22522;&#26412;&#30446;&#24405;&#25110;URL</span>","<span class=\"c\"> * @param {string} \toptions.bgcolor \t\t\tswf&#25991;&#20214;&#30340;&#32972;&#26223;&#33394;</span>","<span class=\"c\"> * @param {string} \toptions.salign \t\t\t\t&#35774;&#32622;&#32553;&#25918;&#30340;swf&#25991;&#20214;&#22312;&#30001;width&#21644;height&#35774;&#32622;&#23450;&#20041;&#30340;&#21306;&#22495;&#20869;&#30340;&#20301;&#32622;&#12290;&#20801;&#35768;&#20540;&#65306;l/r/t/b/tl/tr/bl/br</span>","<span class=\"c\"> * @param {boolean} options.menu \t\t\t\t&#26159;&#21542;&#26174;&#31034;&#21491;&#38190;&#33756;&#21333;&#65292;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.loop \t\t\t\t&#25773;&#25918;&#21040;&#26368;&#21518;&#19968;&#24103;&#26102;&#26159;&#21542;&#37325;&#26032;&#25773;&#25918;&#65292;&#20801;&#35768;&#20540;&#65306; true/false</span>","<span class=\"c\"> * @param {boolean} options.play \t\t\t\tflash&#26159;&#21542;&#22312;&#27983;&#35272;&#22120;&#21152;&#36733;&#26102;&#23601;&#24320;&#22987;&#25773;&#25918;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {string} \toptions.quality \t\t\t&#35774;&#32622;flash&#25773;&#25918;&#30340;&#30011;&#36136;&#65292;&#20801;&#35768;&#20540;&#65306;low/medium/high/autolow/autohigh/best</span>","<span class=\"c\"> * @param {string} \toptions.scale \t\t\t\t&#35774;&#32622;flash&#20869;&#23481;&#22914;&#20309;&#32553;&#25918;&#26469;&#36866;&#24212;&#35774;&#32622;&#30340;&#23485;&#39640;&#12290;&#20801;&#35768;&#20540;&#65306;showall/noborder/exactfit</span>","<span class=\"c\"> * @param {string} \toptions.wmode \t\t\t\t&#35774;&#32622;flash&#30340;&#26174;&#31034;&#27169;&#24335;&#12290;&#20801;&#35768;&#20540;&#65306;window/opaque/transparent</span>","<span class=\"c\"> * @param {string} \toptions.allowscriptaccess \t&#35774;&#32622;flash&#19982;&#39029;&#38754;&#30340;&#36890;&#20449;&#26435;&#38480;&#12290;&#20801;&#35768;&#20540;&#65306;always/never/sameDomain</span>","<span class=\"c\"> * @param {string} \toptions.allownetworking \t&#35774;&#32622;swf&#25991;&#20214;&#20013;&#20801;&#35768;&#20351;&#29992;&#30340;&#32593;&#32476;API&#12290;&#20801;&#35768;&#20540;&#65306;all/internal/none</span>","<span class=\"c\"> * @param {boolean} options.allowfullscreen \t&#26159;&#21542;&#20801;&#35768;flash&#20840;&#23631;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.seamlesstabbing \t&#20801;&#35768;&#35774;&#32622;&#25191;&#34892;&#26080;&#32541;&#36339;&#26684;&#65292;&#20174;&#32780;&#20351;&#29992;&#25143;&#33021;&#36339;&#20986;flash&#24212;&#29992;&#31243;&#24207;&#12290;&#35813;&#21442;&#25968;&#21482;&#33021;&#22312;&#23433;&#35013;Flash7&#21450;&#26356;&#39640;&#29256;&#26412;&#30340;Windows&#20013;&#20351;&#29992;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.devicefont \t\t\t&#35774;&#32622;&#38745;&#24577;&#25991;&#26412;&#23545;&#35937;&#26159;&#21542;&#20197;&#35774;&#22791;&#23383;&#20307;&#21576;&#29616;&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {boolean} options.swliveconnect \t\t&#31532;&#19968;&#27425;&#21152;&#36733;flash&#26102;&#27983;&#35272;&#22120;&#26159;&#21542;&#24212;&#21551;&#21160;Java&#12290;&#20801;&#35768;&#20540;&#65306;true/false</span>","<span class=\"c\"> * @param {Object} \toptions.vars \t\t\t\t&#35201;&#20256;&#36882;&#32473;flash&#30340;&#21442;&#25968;&#65292;&#25903;&#25345;JSON&#25110;string&#31867;&#22411;&#12290;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @see baidu.swf.create</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {string} flash&#23545;&#35937;&#30340;html&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>createHTML <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> version <span class=\"k\">=</span> baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>version<span class=\"k\">,</span> ","        needVersion <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'ver'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">'6.0.0'</span><span class=\"k\">,</span> ","        vUnit1<span class=\"k\">,</span> vUnit2<span class=\"k\">,</span> i<span class=\"k\">,</span> k<span class=\"k\">,</span> len<span class=\"k\">,</span> item<span class=\"k\">,</span> tmpOpt <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        encodeHTML <span class=\"k\">=</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>encodeHTML<span class=\"k\">;</span>","    ","    <span class=\"c\">// &#22797;&#21046;options&#65292;&#36991;&#20813;&#20462;&#25913;&#21407;&#23545;&#35937;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        tmpOpt<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span>k<span class=\"k\">];</span>","    <span class=\"k\">}</span>","    options <span class=\"k\">=</span> tmpOpt<span class=\"k\">;</span>","    ","    <span class=\"c\">// &#27983;&#35272;&#22120;&#25903;&#25345;&#30340;flash&#25554;&#20214;&#29256;&#26412;&#21028;&#26029;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>version<span class=\"k\">)</span> <span class=\"k\">{</span>","        version <span class=\"k\">=</span> version<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","        needVersion <span class=\"k\">=</span> needVersion<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">3</span><span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            vUnit1 <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>version<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"s\">10</span><span class=\"k\">);</span>","            vUnit2 <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>needVersion<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"s\">10</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>vUnit2 <span class=\"k\">&lt;</span> vUnit1<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>vUnit2 <span class=\"k\">&gt;</span> vUnit1<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span> <span class=\"c\">// &#38656;&#35201;&#26356;&#39640;&#30340;&#29256;&#26412;&#21495;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span> <span class=\"c\">// &#26410;&#23433;&#35013;flash&#25554;&#20214;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> vars <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'vars'</span><span class=\"k\">],</span>","        objProperties <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'classid'</span><span class=\"k\">,</span> <span class=\"s\">'codebase'</span><span class=\"k\">,</span> <span class=\"s\">'id'</span><span class=\"k\">,</span> <span class=\"s\">'width'</span><span class=\"k\">,</span> <span class=\"s\">'height'</span><span class=\"k\">,</span> <span class=\"s\">'align'</span><span class=\"k\">];</span>","    ","    <span class=\"c\">// &#21021;&#22987;&#21270;object&#26631;&#31614;&#38656;&#35201;&#30340;classid&#12289;codebase&#23646;&#24615;&#20540;</span>","    options<span class=\"k\">[</span><span class=\"s\">'align'</span><span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'align'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">'middle'</span><span class=\"k\">;</span>","    options<span class=\"k\">[</span><span class=\"s\">'classid'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000'</span><span class=\"k\">;</span>","    options<span class=\"k\">[</span><span class=\"s\">'codebase'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0'</span><span class=\"k\">;</span>","    options<span class=\"k\">[</span><span class=\"s\">'movie'</span><span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'url'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'vars'</span><span class=\"k\">];</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'url'</span><span class=\"k\">];</span>","    ","    <span class=\"c\">// &#21021;&#22987;&#21270;flashvars&#21442;&#25968;&#30340;&#20540;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'string'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> vars<span class=\"k\">)</span> <span class=\"k\">{</span>","        options<span class=\"k\">[</span><span class=\"s\">'flashvars'</span><span class=\"k\">]</span> <span class=\"k\">=</span> vars<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fvars <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> vars<span class=\"k\">)</span> <span class=\"k\">{</span>","            item <span class=\"k\">=</span> vars<span class=\"k\">[</span>k<span class=\"k\">];</span>","            fvars<span class=\"k\">.</span>push<span class=\"k\">(</span>k <span class=\"k\">+</span> <span class=\"s\">\"=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>item<span class=\"k\">));</span>","        <span class=\"k\">}</span>","        options<span class=\"k\">[</span><span class=\"s\">'flashvars'</span><span class=\"k\">]</span> <span class=\"k\">=</span> fvars<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'&amp;'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#26500;&#24314;IE&#19979;&#25903;&#25345;&#30340;object&#23383;&#31526;&#20018;&#65292;&#21253;&#25324;&#23646;&#24615;&#21644;&#21442;&#25968;&#21015;&#34920;</span>","    <span class=\"k\">var</span> str <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'&lt;object '</span><span class=\"k\">];</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> objProperties<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> objProperties<span class=\"k\">[</span>i<span class=\"k\">];</span>","        str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">,</span> item<span class=\"k\">,</span> <span class=\"s\">'=\"'</span><span class=\"k\">,</span> encodeHTML<span class=\"k\">(</span>options<span class=\"k\">[</span>item<span class=\"k\">]),</span> <span class=\"s\">'\"'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> params <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'wmode'</span>             <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'scale'</span>             <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'quality'</span>           <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'play'</span>              <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'loop'</span>              <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'menu'</span>              <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'salign'</span>            <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'bgcolor'</span>           <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'base'</span>              <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'allowscriptaccess'</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'allownetworking'</span>   <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'allowfullscreen'</span>   <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'seamlesstabbing'</span>   <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'devicefont'</span>        <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'swliveconnect'</span>     <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'flashvars'</span>         <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'movie'</span>             <span class=\"k\">:</span> <span class=\"s\">1</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> options<span class=\"k\">[</span>k<span class=\"k\">];</span>","        k <span class=\"k\">=</span> k<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>params<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>item <span class=\"k\">||</span> item <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> item <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;param name=\"'</span> <span class=\"k\">+</span> k <span class=\"k\">+</span> <span class=\"s\">'\" value=\"'</span> <span class=\"k\">+</span> encodeHTML<span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'\" /&gt;'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// &#20351;&#29992;embed&#26102;&#65292;flash&#22320;&#22336;&#30340;&#23646;&#24615;&#21517;&#26159;src&#65292;&#24182;&#19988;&#35201;&#25351;&#23450;embed&#30340;type&#21644;pluginspage&#23646;&#24615;</span>","    options<span class=\"k\">[</span><span class=\"s\">'src'</span><span class=\"k\">]</span>  <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'movie'</span><span class=\"k\">];</span>","    options<span class=\"k\">[</span><span class=\"s\">'name'</span><span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'id'</span><span class=\"k\">];</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'id'</span><span class=\"k\">];</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'movie'</span><span class=\"k\">];</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'classid'</span><span class=\"k\">];</span>","    <span class=\"k\">delete</span> options<span class=\"k\">[</span><span class=\"s\">'codebase'</span><span class=\"k\">];</span>","    options<span class=\"k\">[</span><span class=\"s\">'type'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'application/x-shockwave-flash'</span><span class=\"k\">;</span>","    options<span class=\"k\">[</span><span class=\"s\">'pluginspage'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'http://www.macromedia.com/go/getflashplayer'</span><span class=\"k\">;</span>","    ","    ","    <span class=\"c\">// &#26500;&#24314;embed&#26631;&#31614;&#30340;&#23383;&#31526;&#20018;</span>","    str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;embed'</span><span class=\"k\">);</span>","    <span class=\"c\">// &#22312;firefox&#12289;opera&#12289;safari&#19979;&#65292;salign&#23646;&#24615;&#24517;&#39035;&#22312;scale&#23646;&#24615;&#20043;&#21518;&#65292;&#21542;&#21017;&#20250;&#22833;&#25928;</span>","    <span class=\"c\">// &#32463;&#36807;&#35752;&#35770;&#65292;&#20915;&#23450;&#37319;&#29992;BT&#26041;&#27861;&#65292;&#25226;scale&#23646;&#24615;&#30340;&#20540;&#20808;&#20445;&#23384;&#19979;&#26469;&#65292;&#26368;&#21518;&#36755;&#20986;</span>","    <span class=\"k\">var</span> salign<span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>k <span class=\"k\">in</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        item <span class=\"k\">=</span> options<span class=\"k\">[</span>k<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>item <span class=\"k\">||</span> item <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> item <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">((</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"^salign</span><span class=\"t\">\\x</span><span class=\"s\">24\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span><span class=\"k\">)).</span>test<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","                salign <span class=\"k\">=</span> item<span class=\"k\">;</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","            str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">,</span> k<span class=\"k\">,</span> <span class=\"s\">'=\"'</span><span class=\"k\">,</span> encodeHTML<span class=\"k\">(</span>item<span class=\"k\">),</span> <span class=\"s\">'\"'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>salign<span class=\"k\">)</span> <span class=\"k\">{</span>","        str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">' salign=\"'</span><span class=\"k\">,</span> encodeHTML<span class=\"k\">(</span>salign<span class=\"k\">),</span> <span class=\"s\">'\"'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    str<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;&lt;/embed&gt;&lt;/object&gt;'</span><span class=\"k\">);</span>","    ","    <span class=\"k\">return</span> str<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf/getMovie.js'] && (_$jscoverage['baidu/swf/getMovie.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/swf/getMovie.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.swf;</span>","<span class=\"c\">///import baidu.browser.ie;</span>","<span class=\"c\">///import baidu.array.remove;</span>","<span class=\"c\">///import baidu.lang.toArray;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#24471;flash&#23545;&#35937;&#30340;&#23454;&#20363;</span>","<span class=\"c\"> * @name baidu.swf.getMovie</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.swf.getMovie(name)</span>","<span class=\"c\"> * @param {string} name flash&#23545;&#35937;&#30340;&#21517;&#31216;</span>","<span class=\"c\"> * @see baidu.swf.create</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @returns {HTMLElement} flash&#23545;&#35937;&#30340;&#23454;&#20363;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>getMovie <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"c\">//ie9&#19979;, Object&#26631;&#31614;&#21644;embed&#26631;&#31614;&#23884;&#22871;&#30340;&#26041;&#24335;&#29983;&#25104;flash&#26102;,</span>","\t<span class=\"c\">//&#20250;&#23548;&#33268;document[name]&#22810;&#36820;&#22238;&#19968;&#20010;Object&#20803;&#32032;,&#32780;&#36215;&#20316;&#29992;&#30340;&#21482;&#26377;embed&#26631;&#31614;</span>","\t<span class=\"k\">var</span> movie <span class=\"k\">=</span> document<span class=\"k\">[</span>name<span class=\"k\">],</span> ret<span class=\"k\">;</span>","    <span class=\"k\">return</span> baidu<span class=\"k\">.</span>browser<span class=\"k\">.</span>ie <span class=\"k\">==</span> <span class=\"s\">9</span> <span class=\"k\">?</span>","    \tmovie <span class=\"k\">&amp;&amp;</span> movie<span class=\"k\">.</span>length <span class=\"k\">?</span> ","    \t\t<span class=\"k\">(</span>ret <span class=\"k\">=</span> baidu<span class=\"k\">.</span>array<span class=\"k\">.</span>remove<span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>toArray<span class=\"k\">(</span>movie<span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>item<span class=\"k\">)</span><span class=\"k\">{</span>","    \t\t\t<span class=\"k\">return</span> item<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">\"embed\"</span><span class=\"k\">;</span>","    \t\t<span class=\"k\">}</span><span class=\"k\">)).</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> ret<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">:</span> ret","    \t\t<span class=\"k\">:</span> movie","    \t<span class=\"k\">:</span> movie <span class=\"k\">||</span> window<span class=\"k\">[</span>name<span class=\"k\">];</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf/Proxy.js'] && (_$jscoverage['baidu/swf/Proxy.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2011 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","","<span class=\"c\">///import baidu.swf;</span>","<span class=\"c\">///import baidu.swf.getMovie;</span>","<span class=\"c\">///import baidu.lang.createClass;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Js &#35843;&#29992; Flash&#26041;&#27861;&#30340;&#20195;&#29702;&#31867;.</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.swf.Proxy</span>","<span class=\"c\"> * @grammar new baidu.swf.Proxy(id, property, [, loadedHandler])</span>","<span class=\"c\"> * @param {string} id Flash&#30340;&#20803;&#32032;id.object&#26631;&#31614;id, embed&#26631;&#31614;name.</span>","<span class=\"c\"> * @param {string} property Flash&#30340;&#26041;&#27861;&#25110;&#32773;&#23646;&#24615;&#21517;&#31216;&#65292;&#29992;&#26469;&#26816;&#27979;Flash&#26159;&#21542;&#21021;&#22987;&#21270;&#22909;&#20102;.</span>","<span class=\"c\"> * @param {Function} loadedHandler &#21021;&#22987;&#21270;&#20043;&#21518;&#30340;&#22238;&#35843;&#20989;&#25968;.</span>","<span class=\"c\"> * @remark Flash&#23545;&#24212;&#30340;DOM&#20803;&#32032;&#24517;&#39035;&#24050;&#32463;&#23384;&#22312;, &#21542;&#21017;&#25243;&#38169;. &#21487;&#20197;&#20351;&#29992;baidu.swf.create&#39044;&#20808;&#21019;&#24314;Flash&#23545;&#24212;&#30340;DOM&#20803;&#32032;.</span>","<span class=\"c\"> * @author liyubei@baidu.com (leeight)</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>Proxy <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>id<span class=\"k\">,</span> property<span class=\"k\">,</span> loadedHandler<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#39029;&#38754;&#19978;&#30340;Flash&#23545;&#35937;</span>","<span class=\"c\">     * @type {HTMLElement}</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        flash <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_flash <span class=\"k\">=</span> baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>getMovie<span class=\"k\">(</span>id<span class=\"k\">),</span>","        timer<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span> property<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    timer <span class=\"k\">=</span> setInterval<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"c\">/** @preserveTry */</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>flash<span class=\"k\">[</span>property<span class=\"k\">])</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>_initialized <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                clearInterval<span class=\"k\">(</span>timer<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>loadedHandler<span class=\"k\">)</span> <span class=\"k\">{</span>","                    loadedHandler<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">100</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#21462;flash&#23545;&#35937;.</span>","<span class=\"c\"> * @return {HTMLElement} Flash&#23545;&#35937;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>Proxy<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getFlash <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_flash<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;Flash&#26159;&#21542;&#21021;&#22987;&#21270;&#23436;&#25104;,&#21487;&#20197;&#19982;js&#36827;&#34892;&#20132;&#20114;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>Proxy<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">!!</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35843;&#29992;Flash&#20013;&#30340;&#26576;&#20010;&#26041;&#27861;</span>","<span class=\"c\"> * @param {string} methodName &#26041;&#27861;&#21517;.</span>","<span class=\"c\"> * @param {...*} var_args &#26041;&#27861;&#30340;&#21442;&#25968;.</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>Proxy<span class=\"k\">.</span>prototype<span class=\"k\">.</span>call <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>methodName<span class=\"k\">,</span> var_args<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">try</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> flash <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getFlash<span class=\"k\">(),</span>","            args <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">);</span>","","        args<span class=\"k\">.</span>shift<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>flash<span class=\"k\">[</span>methodName<span class=\"k\">])</span> <span class=\"k\">{</span>","            flash<span class=\"k\">[</span>methodName<span class=\"k\">].</span>apply<span class=\"k\">(</span>flash<span class=\"k\">,</span> args<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/swf/version.js'] && (_$jscoverage['baidu/swf/version.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/swf/version.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/17</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.swf;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27983;&#35272;&#22120;&#25903;&#25345;&#30340;flash&#25554;&#20214;&#29256;&#26412;</span>","<span class=\"c\"> * @property version &#27983;&#35272;&#22120;&#25903;&#25345;&#30340;flash&#25554;&#20214;&#29256;&#26412;</span>","<span class=\"c\"> * @grammar baidu.swf.version</span>","<span class=\"c\"> * @return {String} &#29256;&#26412;&#21495;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>swf<span class=\"k\">.</span>version <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> n <span class=\"k\">=</span> navigator<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>n<span class=\"k\">.</span>plugins <span class=\"k\">&amp;&amp;</span> n<span class=\"k\">.</span>mimeTypes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> plugin <span class=\"k\">=</span> n<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">\"Shockwave Flash\"</span><span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>plugin <span class=\"k\">&amp;&amp;</span> plugin<span class=\"k\">.</span>description<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> plugin<span class=\"k\">.</span>description","                    <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/([a-zA-Z]|\\s)+/</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(\\s)+r/</span><span class=\"k\">,</span> <span class=\"s\">\".\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\".0\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>ActiveXObject <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>window<span class=\"k\">.</span>opera<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">12</span><span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">2</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> c <span class=\"k\">=</span> <span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span><span class=\"s\">'ShockwaveFlash.ShockwaveFlash.'</span> <span class=\"k\">+</span> i<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>c<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> version <span class=\"k\">=</span> c<span class=\"k\">.</span>GetVariable<span class=\"k\">(</span><span class=\"s\">\"$version\"</span><span class=\"k\">);</span>","                    <span class=\"k\">return</span> version<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/WIN/g</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/,/g</span><span class=\"k\">,</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"]);
_$jscoverage['baidu/url/escapeSymbol.js'] && (_$jscoverage['baidu/url/escapeSymbol.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.url;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23545;&#23383;&#31526;&#20018;&#36827;&#34892;%#&amp;+=&#20197;&#21450;&#21644;\\s&#21305;&#37197;&#30340;&#25152;&#26377;&#23383;&#31526;&#36827;&#34892;url&#36716;&#20041;</span>","<span class=\"c\"> * @name baidu.url.escapeSymbol</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.url.escapeSymbol(source)</span>","<span class=\"c\"> * @param {string} source &#38656;&#35201;&#36716;&#20041;&#30340;&#23383;&#31526;&#20018;.</span>","<span class=\"c\"> * @return {string} &#36716;&#20041;&#20043;&#21518;&#30340;&#23383;&#31526;&#20018;.</span>","<span class=\"c\"> * @remark</span>","<span class=\"c\"> * &#29992;&#20110;get&#35831;&#27714;&#36716;&#20041;&#12290;&#22312;&#26381;&#21153;&#22120;&#21482;&#25509;&#21463;gbk&#65292;&#24182;&#19988;&#39029;&#38754;&#26159;gbk&#32534;&#30721;&#26102;&#65292;&#21487;&#20197;&#32463;&#36807;&#26412;&#36716;&#20041;&#21518;&#30452;&#25509;&#21457;get&#35831;&#27714;&#12290;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @return {string} &#36716;&#20041;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>escapeSymbol <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","    ","    <span class=\"c\">//TODO: &#20043;&#21069;&#20351;&#29992;\\s&#26469;&#21305;&#37197;&#20219;&#24847;&#31354;&#30333;&#31526;</span>","    <span class=\"c\">//&#21457;&#29616;&#22312;ie&#19979;&#26080;&#27861;&#21305;&#37197;&#20013;&#25991;&#20840;&#35282;&#31354;&#26684;&#21644;&#32437;&#21521;&#25351;&#26631;&#31526;\\v&#65292;&#25152;&#20197;&#25913;\\s&#20026;\\f\\r\\n\\t\\v&#20197;&#21450;&#20013;&#25991;&#20840;&#35282;&#31354;&#26684;&#21644;&#33521;&#25991;&#31354;&#26684;</span>","    <span class=\"c\">//&#20294;&#26159;&#30001;&#20110;ie&#26412;&#36523;&#19981;&#25903;&#25345;&#32437;&#21521;&#25351;&#26631;&#31526;\\v,&#25925;&#21435;&#25481;&#23545;&#20854;&#30340;&#21305;&#37197;&#65292;&#20445;&#35777;&#21508;&#27983;&#35272;&#22120;&#19979;&#25928;&#26524;&#19968;&#33268;</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>source<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/[#%&amp;+=\\/\\\\\\ \\&#12288;\\f\\r\\n\\t]/g</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>all<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">'%'</span> <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"s\">0x100</span> <span class=\"k\">+</span> all<span class=\"k\">.</span>charCodeAt<span class=\"k\">()).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">).</span>substring<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/url/getQueryValue.js'] && (_$jscoverage['baidu/url/getQueryValue.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/url/getQueryValue.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.url;</span>","<span class=\"c\">///import baidu.string.escapeReg;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26681;&#25454;&#21442;&#25968;&#21517;&#20174;&#30446;&#26631;URL&#20013;&#33719;&#21462;&#21442;&#25968;&#20540;</span>","<span class=\"c\"> * @name baidu.url.getQueryValue</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.url.getQueryValue(url, key)</span>","<span class=\"c\"> * @param {string} url &#30446;&#26631;URL</span>","<span class=\"c\"> * @param {string} key &#35201;&#33719;&#21462;&#30340;&#21442;&#25968;&#21517;</span>","<span class=\"c\"> * @meta standard</span>","<span class=\"c\"> * @see baidu.url.jsonToQuery</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {string|null} - &#33719;&#21462;&#30340;&#21442;&#25968;&#20540;&#65292;&#20854;&#20013;URI&#32534;&#30721;&#21518;&#30340;&#23383;&#31526;&#19981;&#20250;&#34987;&#35299;&#30721;&#65292;&#33719;&#21462;&#19981;&#21040;&#26102;&#36820;&#22238;null</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>getQueryValue <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">,</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>","                        <span class=\"s\">\"(^|&amp;|</span><span class=\"t\">\\\\</span><span class=\"s\">?|#)\"</span> ","                        <span class=\"k\">+</span> baidu<span class=\"k\">.</span>string<span class=\"k\">.</span>escapeReg<span class=\"k\">(</span>key<span class=\"k\">)</span> ","                        <span class=\"k\">+</span> <span class=\"s\">\"=([^&amp;#]*)(&amp;|</span><span class=\"t\">\\x</span><span class=\"s\">24|#)\"</span><span class=\"k\">,</span> ","                    <span class=\"s\">\"\"</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> match <span class=\"k\">=</span> url<span class=\"k\">.</span>match<span class=\"k\">(</span>reg<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/url/jsonToQuery.js'] && (_$jscoverage['baidu/url/jsonToQuery.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/url/jsonToQuery.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.url.escapeSymbol;</span>","<span class=\"c\">///import baidu.object.each;</span>","<span class=\"c\">///import baidu.lang.isArray;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#23558;json&#23545;&#35937;&#35299;&#26512;&#25104;query&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @name baidu.url.jsonToQuery</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.url.jsonToQuery(json[, replacer])</span>","<span class=\"c\"> * @param {Object} json &#38656;&#35201;&#35299;&#26512;&#30340;json&#23545;&#35937;</span>","<span class=\"c\"> * @param {Function=} replacer_opt &#23545;&#20540;&#36827;&#34892;&#29305;&#27530;&#22788;&#29702;&#30340;&#20989;&#25968;&#65292;function (value, key)</span>","<span class=\"c\"> * @see baidu.url.queryToJson,baidu.url.getQueryValue</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @return {string} - &#35299;&#26512;&#32467;&#26524;&#23383;&#31526;&#20018;&#65292;&#20854;&#20013;&#20540;&#23558;&#34987;URI&#32534;&#30721;&#65292;{a:'&amp;1 '} ==&gt; \"a=%261%20\"&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>jsonToQuery <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>json<span class=\"k\">,</span> replacer_opt<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span> ","        itemLen<span class=\"k\">,</span>","        replacer <span class=\"k\">=</span> replacer_opt <span class=\"k\">||</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","          <span class=\"k\">return</span> baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>escapeSymbol<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        ","    baidu<span class=\"k\">.</span>object<span class=\"k\">.</span>each<span class=\"k\">(</span>json<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>item<span class=\"k\">,</span> key<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">// &#36825;&#37324;&#21482;&#32771;&#34385;item&#20026;&#25968;&#32452;&#12289;&#23383;&#31526;&#20018;&#12289;&#25968;&#23383;&#31867;&#22411;&#65292;&#19981;&#32771;&#34385;&#23884;&#22871;&#30340;object</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isArray<span class=\"k\">(</span>item<span class=\"k\">))</span> <span class=\"k\">{</span>","            itemLen <span class=\"k\">=</span> item<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"c\">// value&#30340;&#20540;&#38656;&#35201;encodeURIComponent&#36716;&#20041;&#21527;&#65311;</span>","            <span class=\"c\">// FIXED &#20248;&#21270;&#20102;escapeSymbol&#20989;&#25968;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>itemLen<span class=\"k\">--)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>key <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> replacer<span class=\"k\">(</span>item<span class=\"k\">[</span>itemLen<span class=\"k\">],</span> key<span class=\"k\">));</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span>key <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> replacer<span class=\"k\">(</span>item<span class=\"k\">,</span> key<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    ","    <span class=\"k\">return</span> result<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'&amp;'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
_$jscoverage['baidu/url/queryToJson.js'] && (_$jscoverage['baidu/url/queryToJson.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Tangram</span>","<span class=\"c\"> * Copyright 2009 Baidu Inc. All rights reserved.</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * path: baidu/url/queryToJson.js</span>","<span class=\"c\"> * author: erik</span>","<span class=\"c\"> * version: 1.1.0</span>","<span class=\"c\"> * date: 2009/11/16</span>","<span class=\"c\"> */</span>","","<span class=\"c\">///import baidu.url;</span>","<span class=\"c\">///import baidu.lang.isArray;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#35299;&#26512;&#30446;&#26631;URL&#20013;&#30340;&#21442;&#25968;&#25104;json&#23545;&#35937;</span>","<span class=\"c\"> * @name baidu.url.queryToJson</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @grammar baidu.url.queryToJson(url)</span>","<span class=\"c\"> * @param {string} url &#30446;&#26631;URL</span>","<span class=\"c\"> * @see baidu.url.jsonToQuery</span>","<span class=\"c\"> *             </span>","<span class=\"c\"> * @returns {Object} - &#35299;&#26512;&#20026;&#32467;&#26524;&#23545;&#35937;&#65292;&#20854;&#20013;URI&#32534;&#30721;&#21518;&#30340;&#23383;&#31526;&#19981;&#20250;&#34987;&#35299;&#30721;&#65292;'a=%20' ==&gt; {a:'%20'}&#12290;</span>","<span class=\"c\"> */</span>","baidu<span class=\"k\">.</span>url<span class=\"k\">.</span>queryToJson <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>url<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> query   <span class=\"k\">=</span> url<span class=\"k\">.</span>substr<span class=\"k\">(</span>url<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span><span class=\"s\">'?'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">),</span>","        params  <span class=\"k\">=</span> query<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'&amp;'</span><span class=\"k\">),</span>","        len     <span class=\"k\">=</span> params<span class=\"k\">.</span>length<span class=\"k\">,</span>","        result  <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        i       <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        key<span class=\"k\">,</span> value<span class=\"k\">,</span> item<span class=\"k\">,</span> param<span class=\"k\">;</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>params<span class=\"k\">[</span>i<span class=\"k\">])</span><span class=\"k\">{</span>","            <span class=\"k\">continue</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        param   <span class=\"k\">=</span> params<span class=\"k\">[</span>i<span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">'='</span><span class=\"k\">);</span>","        key     <span class=\"k\">=</span> param<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        value   <span class=\"k\">=</span> param<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        ","        item <span class=\"k\">=</span> result<span class=\"k\">[</span>key<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'undefined'</span> <span class=\"k\">==</span> <span class=\"k\">typeof</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","            result<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>baidu<span class=\"k\">.</span>lang<span class=\"k\">.</span>isArray<span class=\"k\">(</span>item<span class=\"k\">))</span> <span class=\"k\">{</span>","            item<span class=\"k\">.</span>push<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"c\">// &#36825;&#37324;&#21482;&#21487;&#33021;&#26159;string&#20102;</span>","            result<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>item<span class=\"k\">,</span> value<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> result<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"]);
}
